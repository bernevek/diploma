{"version":3,"sources":["constants/actionsConstants.js","reducers/computerPolicy.js","reducers/userPolicy.js","reducers/applications.js","reducers/sites.js","reducers/loginMethods.js","reducers/index.js","store.js","components/appNavbarHeader/index.js","components/computerPolicy/index.js","constants/apiEndpoints.js","actions/userPolicy.js","actions/loginMethods.js","actions/applications.js","actions/sites.js","components/policy/index.js","components/userPolicy/index.js","App.js","containers/app.js","index.js","logo.svg"],"names":["GET_USER_POLICY_START","GET_USER_POLICY_SUCCESS","GET_USER_POLICY_FAIL","SAVE_USER_POLICY_START","SAVE_USER_POLICY_SUCCESS","SAVE_USER_POLICY_FAIL","GET_COMPUTER_POLICY_START","GET_COMPUTER_POLICY_SUCCESS","GET_COMPUTER_POLICY_FAIL","SAVE_COMPUTER_POLICY_START","SAVE_COMPUTER_POLICY_SUCCESS","SAVE_COMPUTER_POLICY_FAIL","GET_APPLICATIONS_START","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ADD_APPLICATION_START","ADD_APPLICATION_SUCCESS","ADD_APPLICATION_FAIL","DELETE_APPLICATION_START","DELETE_APPLICATION_SUCCESS","DELETE_APPLICATION_FAIL","GET_SITES_START","GET_SITES_SUCCESS","GET_SITES_FAIL","ADD_SITE_START","ADD_SITE_SUCCESS","ADD_SITE_FAIL","DELETE_SITE_START","DELETE_SITE_SUCCESS","DELETE_SITE_FAIL","GET_LOGIN_METHODS_START","GET_LOGIN_METHODS_SUCCESS","GET_LOGIN_METHODS_FAIL","initialState","errorMsg","computerPolicy","saveComputerPolicyInProgress","getComputerPolicyInProgress","userPolicy","saveUserPolicyInProgress","getUserPolicyInProgress","applications","addApplicationInProgress","getApplicationsInProgress","deleteApplicationInProgress","sites","addSiteInProgress","getSitesInProgress","deleteSiteInProgress","loginMethods","getLoginMethodsInProgress","appReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","response","data","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createHashHistory","AppNavbarHeader","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","user","click","console","log","push","pathname","inherits","createClass","key","value","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","className","NavDropdown_default","title","Item","Link","Form_default","inline","FormControl_default","placeholder","Button_default","variant","Component","connect","dispatch","ComputerPolicy","API_URL","process","REACT_APP_STAGE","getUserPolicyApi","policyId","saveUserPolicyUrl","getApplicationsApi","getSitesApi","getLoginMethodsApi","saveUserPolicyStart","saveUserPolicySuccess","saveUserPolicyFail","getUserPolicyStart","getUserPolicySuccess","getUserPolicyFail","getLoginMethodsStart","getLoginMethodsSuccess","getLoginMethodsFail","getApplicationsStart","getApplicationsSuccess","getApplicationsFail","getSitesStart","getSitesSuccess","getSitesFail","Policy","props","getApplications","getSites","getLoginMethods","policyType","policy","name","react_select_esm","isMulti","options","defaultValue","bannedApps","onChange","apps","setBannedApps","bannedSites","setBannedSites","setLoginMethods","onClick","savePolicy","src","axios","get","api","then","catch","error","alert","JSON","parse","request","reason","message","UserPolicy","getPolicy","prevProps","setState","_this2","components_policy","prevState","userPolicyId","put","app","logo","alt","target","rel","App","appNavbarHeader","Route","exact","path","component","ReactDOM","render","es","HashRouter","containers_app","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"kOASaA,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAA2B,2BAC3BC,EAAwB,wBAGxBC,EAA4B,4BAC5BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAA+B,+BAC/BC,EAA4B,4BAG5BC,EAAyB,yBACzBC,EAA2B,2BAC3BC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAA0B,0BAG1BC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAGnBC,EAA0B,0BAC1BC,EAA4B,4BAC5BC,EAAyB,yBC/ChCC,EAAe,CACjBC,SAAU,KACVC,eAAgB,KAChBC,8BAA8B,EAC9BC,6BAA6B,GCJjC,IAAMJ,EAAe,CACjBC,SAAU,KACVI,WAAY,KACZC,0BAA0B,EAC1BC,yBAAyB,GCJ7B,IAAMP,EAAe,CACjBC,SAAU,KACVO,aAAc,KACdC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,6BAA6B,GCLjC,IAAMX,EAAe,CACjBC,SAAU,KACVW,MAAO,KACPC,mBAAmB,EACnBC,oBAAoB,EACpBC,sBAAsB,GCL1B,IAAMf,EAAe,CACjBC,SAAU,KACVe,aAAc,KACdC,2BAA2B,GCG/B,IAAMC,EAAaC,0BAAgB,CAC/BjB,eLAW,WAA+C,IAAjCkB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBrB,EAAcwB,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACtD,OAAQG,EAAOC,MACX,KAAKC,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVE,8BAA8B,IAEtC,KAAKuB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVC,eAAgBsB,EAAOK,SAASC,KAChC3B,8BAA8B,IAEtC,KAAKuB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBE,8BAA8B,IAEtC,KAAKuB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVG,6BAA6B,IAErC,KAAKsB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVC,eAAgBsB,EAAOK,SAASC,KAChC1B,6BAA6B,IAErC,KAAKsB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBG,6BAA6B,IAErC,QACI,OAAOgB,IKxCff,WJDW,WAA+C,IAAjCe,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBrB,EAAcwB,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACtD,OAAQG,EAAOC,MACX,KAAKC,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVK,0BAA0B,IAElC,KAAKoB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVK,0BAA0B,IAElC,KAAKoB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBK,0BAA0B,IAElC,KAAKoB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVM,yBAAyB,IAEjC,KAAKmB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVI,WAAYmB,EAAOK,SAASC,KAC5BvB,yBAAyB,IAEjC,KAAKmB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBM,yBAAyB,IAEjC,QACI,OAAOa,IItCfZ,aHDW,WAA+C,IAAjCY,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBrB,EAAcwB,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACtD,OAAQG,EAAOC,MACX,KAAKC,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVQ,0BAA0B,IAElC,KAAKiB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVQ,0BAA0B,EAC1BD,aAAcgB,EAAOK,SAASC,OAEtC,KAAKJ,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBQ,0BAA0B,IAElC,KAAKiB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVS,2BAA2B,IAEnC,KAAKgB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVO,aAAcgB,EAAOK,SAASC,KAC9BpB,2BAA2B,IAEnC,KAAKgB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBS,2BAA2B,IAEnC,KAAKgB,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVU,6BAA6B,IAErC,KAAKe,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVO,aAAcgB,EAAOK,SAASC,KAC9BnB,6BAA6B,IAErC,KAAKe,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBU,6BAA6B,IAErC,QACI,OAAOS,IG1DfR,MFFW,WAA+C,IAAjCQ,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBrB,EAAcwB,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACtD,OAAQG,EAAOC,MACX,KAAKC,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVY,mBAAmB,IAE3B,KAAKa,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVY,mBAAmB,EACnBD,MAAOY,EAAOK,SAASC,OAE/B,KAAKJ,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBY,mBAAmB,IAE3B,KAAKa,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVa,oBAAoB,IAE5B,KAAKY,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVW,MAAOY,EAAOK,SAASC,KACvBhB,oBAAoB,IAE5B,KAAKY,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBa,oBAAoB,IAE5B,KAAKY,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVc,sBAAsB,IAE9B,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVW,MAAOY,EAAOK,SAASC,KACvBf,sBAAsB,IAE9B,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBc,sBAAsB,IAE9B,QACI,OAAOK,IEzDfJ,aDLW,WAA+C,IAAjCI,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBrB,EAAcwB,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACtD,OAAQG,EAAOC,MACX,KAAKC,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVgB,2BAA2B,IAEnC,KAAKS,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAU,KACVe,aAAcQ,EAAOK,SAASC,KAC9Bb,2BAA2B,IAEnC,KAAKS,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,SAAUuB,EAAOvB,SACjBgB,2BAA2B,IAEnC,QACI,OAAOG,MCTJW,EANK,SAACX,EAAOI,GAIxB,MAHmB,WAAhBA,EAAOC,OACNL,OAAQG,GAELL,EAAWE,EAAOI,YCbvBQ,GAAQC,sBACVF,EACAG,8BAAoBC,0BAAgBC,OAG3BC,GAAUC,cAERN,qLCFFO,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAf,OAAAgB,GAAA,EAAAhB,CAAAiB,KAAAL,GAAA,QAAAM,EAAAxB,UAAAC,OAAAwB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3B,UAAA2B,GAAA,OAAAN,EAAAf,OAAAsB,GAAA,EAAAtB,CAAAiB,MAAAH,EAAAd,OAAAuB,GAAA,EAAAvB,CAAAY,IAAAY,KAAAC,MAAAX,EAAA,CAAAG,MAAAS,OAAAP,MACI1B,MAAQ,CACJkC,UAAM/B,GAFdmB,EAiBIa,MAAQ,WACJC,QAAQC,IAAI,OACZpB,GAAQqB,KAAK,CAACC,SAAU,iBAnBhCjB,EAAA,OAAAf,OAAAiC,GAAA,EAAAjC,CAAAY,EAAAC,GAAAb,OAAAkC,GAAA,EAAAlC,CAAAY,EAAA,EAAAuB,IAAA,oBAAAC,MAAA,eAAAD,IAAA,qBAAAC,MAAA,eAAAD,IAAA,uBAAAC,MAAA,eAAAD,IAAA,SAAAC,MAAA,WAuBQ,OACIC,EAAAC,EAAAC,cAACC,GAAAF,EAAD,CAAQG,GAAG,QAAQC,OAAO,MACtBL,EAAAC,EAAAC,cAACC,GAAAF,EAAOK,MAAR,CAAcC,KAAK,MAAnB,iBACAP,EAAAC,EAAAC,cAACC,GAAAF,EAAOO,OAAR,CAAeC,gBAAc,qBAC7BT,EAAAC,EAAAC,cAACC,GAAAF,EAAOS,SAAR,CAAiBC,GAAG,oBAChBX,EAAAC,EAAAC,cAACU,GAAAX,EAAD,CAAKY,UAAU,WACXb,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CAAac,MAAM,OAAOJ,GAAG,sBACzBX,EAAAC,EAAAC,cAACY,GAAAb,EAAYe,KAAb,CAAkBT,KAAK,KAAvB,SACAP,EAAAC,EAAAC,cAACY,GAAAb,EAAYe,KAAb,CAAkBT,KAAK,gBAAvB,kBAEJP,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CAAac,MAAM,WAAWJ,GAAG,sBAC7BX,EAAAC,EAAAC,cAACY,GAAAb,EAAYe,KAAb,CAAkBT,KAAK,KAAvB,aACAP,EAAAC,EAAAC,cAACY,GAAAb,EAAYe,KAAb,CAAkBT,KAAK,oBAAvB,sBAEJP,EAAAC,EAAAC,cAACU,GAAAX,EAAIgB,KAAL,CAAUV,KAAK,KAAf,gBACAP,EAAAC,EAAAC,cAACU,GAAAX,EAAIgB,KAAL,CAAUV,KAAK,KAAf,UAEJP,EAAAC,EAAAC,cAACgB,GAAAjB,EAAD,CAAMkB,QAAM,GACRnB,EAAAC,EAAAC,cAACkB,GAAAnB,EAAD,CAAaxC,KAAK,OAAO4D,YAAY,SAASR,UAAU,YACxDb,EAAAC,EAAAC,cAACoB,GAAArB,EAAD,CAAQsB,QAAQ,mBAAhB,iBA1CxBhD,EAAA,CAAqCiD,aA8DtBC,eAZS,SAACrE,GACrB,MAAO,IAKgB,SAACsE,GACxB,MAAO,IAKID,CAGblD,ICzEWoD,GAAb,SAAAnD,GAAA,SAAAmD,IAAA,IAAAlD,EAAAC,EAAAf,OAAAgB,GAAA,EAAAhB,CAAAiB,KAAA+C,GAAA,QAAA9C,EAAAxB,UAAAC,OAAAwB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3B,UAAA2B,GAAA,OAAAN,EAAAf,OAAAsB,GAAA,EAAAtB,CAAAiB,MAAAH,EAAAd,OAAAuB,GAAA,EAAAvB,CAAAgE,IAAAxC,KAAAC,MAAAX,EAAA,CAAAG,MAAAS,OAAAP,MACI1B,MAAQ,CACJkC,UAAM/B,GAFdmB,EAAA,OAAAf,OAAAiC,GAAA,EAAAjC,CAAAgE,EAAAnD,GAAAb,OAAAkC,GAAA,EAAAlC,CAAAgE,EAAA,EAAA7B,IAAA,oBAAAC,MAAA,eAAAD,IAAA,qBAAAC,MAAA,eAAAD,IAAA,uBAAAC,MAAA,eAAAD,IAAA,SAAAC,MAAA,WAkBQ,OACIC,EAAAC,EAAAC,cAAA,kCAnBZyB,EAAA,CAAoCH,aAoCrBC,eAZS,SAACrE,GACrB,MAAO,IAKgB,SAACsE,GACxB,MAAO,IAKID,CAGbE,wBC1CEC,GAAU,GAGRA,GAD0B,QAAhCC,8CAAYC,gBACI,4BACA,OAGT,IAIMC,GAAmB,SAACC,GAC7B,OAAOJ,GAAU,eAAiBI,GAGzBC,GAAoB,SAACD,GAC9B,OAAOJ,GAAU,eAAiBI,GAYzBE,GAAqB,WAC9B,OAAON,GAAU,gBAgBRO,GAAc,WACvB,OAAOP,GAAU,SAgBRQ,GAAqB,WAC9B,OAAOR,GAAU,gBC7Cd,IAAMS,GAAsB,iBAAO,CACtC5E,KAAMC,IAGG4E,GAAwB,SAACzE,GAAD,MAAe,CAChDJ,KAAMC,EACNG,aAGS0E,GAAqB,SAACtG,GAAD,MAAe,CAC7CwB,KAAMC,EACNzB,aAiBG,IAAMuG,GAAqB,iBAAO,CACrC/E,KAAMC,IAGG+E,GAAuB,SAAC5E,GAAD,MAAe,CAC/CJ,KAAMC,EACNG,aAGS6E,GAAoB,SAACzG,GAAD,MAAe,CAC5CwB,KAAMC,EACNzB,sBCvCG,IAAM0G,GAAuB,iBAAO,CACvClF,KAAMC,IAGGkF,GAAyB,SAAC/E,GAAD,MAAe,CACjDJ,KAAMC,EACNG,aAGSgF,GAAsB,SAAC5G,GAAD,MAAe,CAC9CwB,KAAMC,EACNzB,aCiBG,IAAM6G,GAAuB,iBAAO,CACvCrF,KAAMC,IAGGqF,GAAyB,SAAClF,GAAD,MAAe,CACjDJ,KAAMC,EACNG,aAGSmF,GAAsB,SAAC/G,GAAD,MAAe,CAC9CwB,KAAMC,EACNzB,aCXG,IAAMgH,GAAgB,iBAAO,CAChCxF,KAAMC,IAGGwF,GAAkB,SAACrF,GAAD,MAAe,CAC1CJ,KAAMC,EACNG,aAGSsF,GAAe,SAAClH,GAAD,MAAe,CACvCwB,KAAMC,EACNzB,aCjDSmH,GAAb,SAAA5E,GAAA,SAAA4E,IAAA,OAAAzF,OAAAgB,GAAA,EAAAhB,CAAAiB,KAAAwE,GAAAzF,OAAAsB,GAAA,EAAAtB,CAAAiB,KAAAjB,OAAAuB,GAAA,EAAAvB,CAAAyF,GAAAhE,MAAAR,KAAAvB,YAAA,OAAAM,OAAAiC,GAAA,EAAAjC,CAAAyF,EAAA5E,GAAAb,OAAAkC,GAAA,EAAAlC,CAAAyF,EAAA,EAAAtD,IAAA,oBAAAC,MAAA,WAGQnB,KAAKyE,MAAMC,kBACX1E,KAAKyE,MAAME,WACX3E,KAAKyE,MAAMG,oBALnB,CAAA1D,IAAA,SAAAC,MAAA,WAQa,IAAArB,EAAAE,KACL,OAAKA,KAAKyE,MAAM7G,cACXoC,KAAKyE,MAAMzG,OACXgC,KAAKyE,MAAMrG,aASRgD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACXb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAMtB,KAAKyE,MAAMI,WAAjB,YAAsC7E,KAAKyE,MAAMK,OAAOC,MACxD3D,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQC,SAAO,EAACC,QAASlF,KAAKyE,MAAM7G,aAC5BuH,aAAcnF,KAAKyE,MAAMK,OAAOM,WAChCC,SAAU,SAACC,GACPxF,EAAK2E,MAAMc,cAAcD,MAGrClE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQC,SAAO,EAACC,QAASlF,KAAKyE,MAAMzG,MAC5BmH,aAAcnF,KAAKyE,MAAMK,OAAOU,YAChCH,SAAU,SAACrH,GACP8B,EAAK2E,MAAMgB,eAAezH,MAGtCoD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQC,SAAO,EAACC,QAASlF,KAAKyE,MAAMrG,aAC5B+G,aAAcnF,KAAKyE,MAAMK,OAAO1G,aAChCiH,SAAU,SAACjH,GACP0B,EAAK2E,MAAMiB,gBAAgBtH,MAGvCgD,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIzC,KAAK,SACLoD,UAAU,kCAFd,UADJ,OAQIb,EAAAC,EAAAC,cAAA,UACIzC,KAAK,SACLoD,UAAU,yBACV0D,QAAW3F,KAAKyE,MAAMmB,YAH1B,UA1CRxE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACXb,EAAAC,EAAAC,cAAA,OAAKuE,IAAI,8EAf7BrB,EAAA,CAA4B5B,aA4FbC,eAtBS,SAACrE,GACrB,MAAO,CACHZ,aAAcY,EAAMZ,aAAaA,aACjCQ,aAAcI,EAAMJ,aAAaA,aACjCJ,MAAOQ,EAAMR,MAAMA,QAIA,SAAC8E,GACxB,MAAO,CACH4B,gBAAiB,WACb5B,EFxDD,SAACA,GAEJ,OADAA,EAASoB,MACF4B,KAAMC,IAAIC,MACZC,KAAK,SAAAhH,GACF6D,EAASqB,GAAuBlF,MAEnCiH,MAAM,SAACC,GACJC,MAAMC,KAAKC,MAAMH,EAAMI,QAAQtH,UAAUuH,QACzC1D,EAASsB,GAAoB+B,EAAMM,eEkD3C9B,SAAU,WACN7B,ED3DD,SAACA,GAEJ,OADAA,EAASuB,MACFyB,KAAMC,IAAIC,MACZC,KAAK,SAAAhH,GACF6D,EAASwB,GAAgBrF,MAE5BiH,MAAM,SAACC,GACJC,MAAMC,KAAKC,MAAMH,EAAMI,QAAQtH,UAAUuH,QACzC1D,EAASyB,GAAa4B,EAAMM,eCqDpC7B,gBAAiB,WACb9B,EH1FD,SAACA,GAEJ,OADAA,EAASiB,MACF+B,KAAMC,IAAIC,MACZC,KAAK,SAAAhH,GACF6D,EAASkB,GAAuB/E,MAEnCiH,MAAM,SAACC,GACJC,MAAMC,KAAKC,MAAMH,EAAMI,QAAQtH,UAAUuH,QACzC1D,EAASmB,GAAoBkC,EAAMM,iBGuFpC5D,CAGb2B,IClGWkC,GAAb,SAAA9G,GAAA,SAAA8G,IAAA,IAAA7G,EAAAC,EAAAf,OAAAgB,GAAA,EAAAhB,CAAAiB,KAAA0G,GAAA,QAAAzG,EAAAxB,UAAAC,OAAAwB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3B,UAAA2B,GAAA,OAAAN,EAAAf,OAAAsB,GAAA,EAAAtB,CAAAiB,MAAAH,EAAAd,OAAAuB,GAAA,EAAAvB,CAAA2H,IAAAnG,KAAAC,MAAAX,EAAA,CAAAG,MAAAS,OAAAP,MACI1B,MAAQ,CACJsG,OAAQ,MAFhBhF,EAoBI6G,UAAY,SAACvD,GACTtD,EAAK2E,MAAMkC,UAAUvD,IArB7BtD,EAwBI8F,WAAa,WACT9F,EAAK2E,MAAMmB,WAAW9F,EAAKtB,MAAMsG,SAzBzChF,EAAA,OAAAf,OAAAiC,GAAA,EAAAjC,CAAA2H,EAAA9G,GAAAb,OAAAkC,GAAA,EAAAlC,CAAA2H,EAAA,EAAAxF,IAAA,oBAAAC,MAAA,WAMQnB,KAAK2G,UAAU,KANvB,CAAAzF,IAAA,qBAAAC,MAAA,SASuByF,GACZ5G,KAAKyE,MAAMK,SAAW8B,EAAU9B,QAC/B9E,KAAK6G,SAAS,CACV/B,OAAQ9E,KAAKyE,MAAMK,WAZnC,CAAA5D,IAAA,uBAAAC,MAAA,eAAAD,IAAA,SAAAC,MAAA,WA4Ba,IAAA2F,EAAA9G,KAEL,OAAKA,KAAKxB,MAAMsG,OAQR1D,EAAAC,EAAAC,cAACyF,GAAD,CAAQlC,WAAa,OAAOC,OAAQ9E,KAAKxB,MAAMsG,OACnCS,cAAe,SAACD,GACZwB,EAAKD,SAAS,SAAAG,GAAS,MAAK,CACxBlC,OAAO/F,OAAAC,EAAA,EAAAD,CAAA,GACAiI,EAAUlC,OADX,CAEFM,WAAYE,QAIxBG,eAAgB,SAACzH,GACb8I,EAAKD,SAAS,SAAAG,GAAS,MAAK,CACxBlC,OAAO/F,OAAAC,EAAA,EAAAD,CAAA,GACAiI,EAAUlC,OADX,CAEFU,YAAaxH,QAIzB0H,gBAAiB,SAACtH,GACd0I,EAAKD,SAAS,SAAAG,GAAS,MAAK,CACxBlC,OAAO/F,OAAAC,EAAA,EAAAD,CAAA,GACAiI,EAAUlC,OADX,CAEF1G,aAAcA,QAI1BwH,WAAY5F,KAAK4F,aA/B7BxE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACXb,EAAAC,EAAAC,cAAA,OAAKuE,IAAI,8EAjC7Ba,EAAA,CAAgC9D,aAsFjBC,eAjBS,SAACrE,GACrB,MAAO,CACHsG,OAAQtG,EAAMf,WAAWA,aAIN,SAACqF,GACxB,MAAO,CACH6D,UAAW,SAACvD,GLlDb,IAAuB6D,EKmDlBnE,GLnDkBmE,EKmDuB7D,ELlD1C,SAACN,GAEJ,OADAA,EAASc,MACFkC,KAAMC,IAAIC,GAAqBiB,IACjChB,KAAK,SAAAhH,GACF6D,EAASe,GAAqB5E,MAEjCiH,MAAM,SAACC,GACJC,MAAMC,KAAKC,MAAMH,EAAMI,QAAQtH,UAAUuH,QACzC1D,EAASgB,GAAkBqC,EAAMM,gBK4CzCb,WAAY,SAACd,GLjFd,IAAwBrH,EKkFnBqF,GLlFmBrF,EKkFuBqH,ELjF3C,SAAChC,GAEJ,OADAA,EAASW,MACFqC,KAAMoB,IAAIlB,GAAsBvI,EAAWsE,IAAKtE,GAClDwI,KAAK,SAAAhH,GACF6D,EAASY,GAAsBzE,MAElCiH,MAAM,SAACC,GACJC,MAAMC,KAAKC,MAAMH,EAAMI,QAAQtH,UAAUuH,QACzC1D,EAASa,GAAmBwC,EAAMM,kBK8EnC5D,CAGb6D,wBCnEaS,iMArBX,OACE/F,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,cAChBb,EAAAC,EAAAC,cAAA,OAAKuE,IAAKuB,KAAMnF,UAAU,WAAWoF,IAAI,SACzCjG,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,0BADP,wBAGAF,EAAAC,EAAAC,cAAA,KACEW,UAAU,WACVN,KAAK,sBACL2F,OAAO,SACPC,IAAI,uBAJN,wBATQ3E,cCiBH4E,yLAXP,OACIpG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmG,GAAD,MACArG,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,KACjC/F,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOE,KAAK,qCAAqCC,UAAW9E,KAC5D3B,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOE,KAAK,6BAA6BC,UAAWnB,aAPlD9D,2BCElBkF,IAASC,OACL3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAU5I,MAAOA,IACbgC,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAAC4G,GAAD,QAGRC,SAASC,eAAe,6BChB5BC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.fbe969f6.chunk.js","sourcesContent":["/* Login */\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGOUT_START = 'LOGOUT_START';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\n/* UserPolicy */\nexport const GET_USER_POLICY_START = 'GET_USER_POLICY_START';\nexport const GET_USER_POLICY_SUCCESS = 'GET_USER_POLICY_SUCCESS';\nexport const GET_USER_POLICY_FAIL = 'GET_USER_POLICY_FAIL';\nexport const SAVE_USER_POLICY_START = 'SAVE_USER_POLICY_START';\nexport const SAVE_USER_POLICY_SUCCESS = 'SAVE_USER_POLICY_SUCCESS';\nexport const SAVE_USER_POLICY_FAIL = 'SAVE_USER_POLICY_FAIL';\n\n/* ComputerPolicy */\nexport const GET_COMPUTER_POLICY_START = 'GET_COMPUTER_POLICY_START';\nexport const GET_COMPUTER_POLICY_SUCCESS = 'GET_COMPUTER_POLICY_SUCCESS';\nexport const GET_COMPUTER_POLICY_FAIL = 'GET_COMPUTER_POLICY_FAIL';\nexport const SAVE_COMPUTER_POLICY_START = 'SAVE_COMPUTER_POLICY_START';\nexport const SAVE_COMPUTER_POLICY_SUCCESS = 'SAVE_COMPUTER_POLICY_SUCCESS';\nexport const SAVE_COMPUTER_POLICY_FAIL = 'SAVE_COMPUTER_POLICY_FAIL';\n\n/* Applications */\nexport const GET_APPLICATIONS_START = 'GET_APPLICATIONS_START';\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\nexport const ADD_APPLICATION_START = 'ADD_APPLICATION_START';\nexport const ADD_APPLICATION_SUCCESS = 'ADD_APPLICATION_SUCCESS';\nexport const ADD_APPLICATION_FAIL = 'ADD_APPLICATION_FAIL';\nexport const DELETE_APPLICATION_START = 'DELETE_APPLICATION_START';\nexport const DELETE_APPLICATION_SUCCESS = 'DELETE_APPLICATION_SUCCESS';\nexport const DELETE_APPLICATION_FAIL = 'DELETE_APPLICATION_FAIL';\n\n/* Sites */\nexport const GET_SITES_START = 'GET_SITES_START';\nexport const GET_SITES_SUCCESS = 'GET_SITES_SUCCESS';\nexport const GET_SITES_FAIL = 'GET_SITES_FAIL';\nexport const ADD_SITE_START = 'ADD_SITE_START';\nexport const ADD_SITE_SUCCESS = 'ADD_SITE_SUCCESS';\nexport const ADD_SITE_FAIL = 'ADD_SITE_FAIL';\nexport const DELETE_SITE_START = 'DELETE_SITE_START';\nexport const DELETE_SITE_SUCCESS = 'DELETE_SITE_SUCCESS';\nexport const DELETE_SITE_FAIL = 'DELETE_SITE_FAIL';\n\n/* Login Methods */\nexport const GET_LOGIN_METHODS_START = 'GET_LOGIN_METHODS_START';\nexport const GET_LOGIN_METHODS_SUCCESS = 'GET_LOGIN_METHODS_SUCCESS';\nexport const GET_LOGIN_METHODS_FAIL = 'GET_LOGIN_METHODS_FAIL';\n","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computerPolicy: null,\n    saveComputerPolicyInProgress: false,\n    getComputerPolicyInProgress: false\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.SAVE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                saveComputerPolicyInProgress: true\n            };\n        case types.SAVE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                saveComputerPolicyInProgress: false,\n            };\n        case types.SAVE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                saveComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPolicyInProgress: true\n            };\n        case types.GET_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPolicyInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    userPolicy: null,\n    saveUserPolicyInProgress: false,\n    getUserPolicyInProgress: false\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.SAVE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                saveUserPolicyInProgress: true\n            };\n        case types.SAVE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                saveUserPolicyInProgress: false,\n            };\n        case types.SAVE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                saveUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPolicyInProgress: true\n            };\n        case types.GET_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicy: action.response.data,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPolicyInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    applications: null,\n    addApplicationInProgress: false,\n    getApplicationsInProgress: false,\n    deleteApplicationInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: true\n            };\n        case types.ADD_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: false,\n                applications: action.response.data,\n            };\n        case types.ADD_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addApplicationInProgress: false,\n            };\n        case types.GET_APPLICATIONS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getApplicationsInProgress: true\n            };\n        case types.GET_APPLICATIONS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: action.response.data,\n                getApplicationsInProgress: false,\n            };\n        case types.GET_APPLICATIONS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getApplicationsInProgress: false,\n            };\n        case types.DELETE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteApplicationInProgress: true\n            };\n        case types.DELETE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: action.response.data,\n                deleteApplicationInProgress: false,\n            };\n        case types.DELETE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteApplicationInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    sites: null,\n    addSiteInProgress: false,\n    getSitesInProgress: false,\n    deleteSiteInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: true\n            };\n        case types.ADD_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: false,\n                sites: action.response.data,\n            };\n        case types.ADD_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addSiteInProgress: false,\n            };\n        case types.GET_SITES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getSitesInProgress: true\n            };\n        case types.GET_SITES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: action.response.data,\n                getSitesInProgress: false,\n            };\n        case types.GET_SITES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getSitesInProgress: false,\n            };\n        case types.DELETE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteSiteInProgress: true\n            };\n        case types.DELETE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: action.response.data,\n                deleteSiteInProgress: false,\n            };\n        case types.DELETE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteSiteInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    loginMethods: null,\n    getLoginMethodsInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.GET_LOGIN_METHODS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getLoginMethodsInProgress: true\n            };\n        case types.GET_LOGIN_METHODS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                loginMethods: action.response.data,\n                getLoginMethodsInProgress: false,\n            };\n        case types.GET_LOGIN_METHODS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getLoginMethodsInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport computerPolicy from './computerPolicy';\nimport userPolicy from './userPolicy';\nimport applications from './applications';\nimport sites from './sites';\nimport loginMethods from './loginMethods';\n\nconst appReducer = combineReducers({\n    computerPolicy,\n    userPolicy,\n    applications,\n    sites,\n    loginMethods\n});\nconst rootReducer = (state, action) => {\n    if(action.type === 'LOGOUT'){\n        state = undefined;\n    }\n    return appReducer(state, action);\n}\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const history = createHashHistory();\n\nexport default store;\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { history } from '../../store'\n\n\nexport class AppNavbarHeader extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    click = () => {\n        console.log(\"fsg\");\n        history.push({pathname: \"/userPolicy\"})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Access system</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#\">Users</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/userPolicy\">User policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Computer\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#\">Computers</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/computerPolicy\">Computer policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <Nav.Link href=\"#\">Applications</Nav.Link>\n                        <Nav.Link href=\"#\">Sites</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppNavbarHeader);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\n\nexport class ComputerPolicy extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>computer policy</div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicy);\n","var API_URL = \"\";\n\nprocess.env.REACT_APP_STAGE === 'dev'\n    ? API_URL = 'http://localhost:8080/api'\n    : API_URL = '/api'\n\n/* User Policy */\nexport const getUserPoliciesApi = () => {\n    return API_URL + \"/userPolicies\";\n}\n\nexport const getUserPolicyApi = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\nexport const saveUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\nexport const addUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const deleteUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\n/* Applications */\nexport const getApplicationsApi = () => {\n    return API_URL + \"/application\";\n}\n\nexport const saveApplicationUrl = (applicationId) => {\n    return API_URL + \"/application/\" + applicationId;\n}\n\nexport const addApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const deleteApplicationUrl = (applicationId) => {\n    return API_URL + \"/application/\" + applicationId;\n}\n\n/* Sites */\nexport const getSitesApi = () => {\n    return API_URL + \"/site\";\n}\n\nexport const saveSiteUrl = (sitesId) => {\n    return API_URL + \"/site/\" + sitesId;\n}\n\nexport const addSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const deleteSiteUrl = (sitesId) => {\n    return API_URL + \"/site/\" + sitesId;\n}\n\n/* Login methods*/\nexport const getLoginMethodsApi = () => {\n    return API_URL + \"/loginMethod\";\n}\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function saveUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(saveUserPolicyStart());\n        return axios.put(api.saveUserPolicyUrl(userPolicy.id), userPolicy)\n            .then(response => {\n                dispatch(saveUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(saveUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const saveUserPolicyStart = () => ({\n    type: types.SAVE_USER_POLICY_START\n});\n\nexport const saveUserPolicySuccess = (response) => ({\n    type: types.SAVE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const saveUserPolicyFail = (errorMsg) => ({\n    type: types.SAVE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getUserPolicy(userPolicyId){\n    return (dispatch) => {\n        dispatch(getUserPolicyStart());\n        return axios.get(api.getUserPolicyApi(userPolicyId))\n            .then(response => {\n                dispatch(getUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getUserPolicyStart = () => ({\n    type: types.GET_USER_POLICY_START\n});\n\nexport const getUserPolicySuccess = (response) => ({\n    type: types.GET_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const getUserPolicyFail = (errorMsg) => ({\n    type: types.GET_USER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function getLoginMethods(){\n    return (dispatch) => {\n        dispatch(getLoginMethodsStart());\n        return axios.get(api.getLoginMethodsApi())\n            .then(response => {\n                dispatch(getLoginMethodsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getLoginMethodsFail(error.message));\n            });\n    }\n}\n\nexport const getLoginMethodsStart = () => ({\n    type: types.GET_LOGIN_METHODS_START\n});\n\nexport const getLoginMethodsSuccess = (response) => ({\n    type: types.GET_LOGIN_METHODS_SUCCESS,\n    response\n});\n\nexport const getLoginMethodsFail = (errorMsg) => ({\n    type: types.GET_LOGIN_METHODS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addApplication(application){\n    return (dispatch) => {\n        dispatch(addApplicationStart());\n        return axios.post(api.addApplicationUrl(), application)\n            .then(response => {\n                dispatch(addApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addApplicationFail(error.message));\n            });\n    }\n}\n\nexport const addApplicationStart = () => ({\n    type: types.ADD_APPLICATION_START\n});\n\nexport const addApplicationSuccess = (response) => ({\n    type: types.ADD_APPLICATION_SUCCESS,\n    response\n});\n\nexport const addApplicationFail = (errorMsg) => ({\n    type: types.ADD_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function getApplications(){\n    return (dispatch) => {\n        dispatch(getApplicationsStart());\n        return axios.get(api.getApplicationsApi())\n            .then(response => {\n                dispatch(getApplicationsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getApplicationsFail(error.message));\n            });\n    }\n}\n\nexport const getApplicationsStart = () => ({\n    type: types.GET_APPLICATIONS_START\n});\n\nexport const getApplicationsSuccess = (response) => ({\n    type: types.GET_APPLICATIONS_SUCCESS,\n    response\n});\n\nexport const getApplicationsFail = (errorMsg) => ({\n    type: types.GET_APPLICATIONS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addSite(site){\n    return (dispatch) => {\n        dispatch(addSiteStart());\n        return axios.post(api.addSiteUrl(), site)\n            .then(response => {\n                dispatch(addSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addSiteFail(error.message));\n            });\n    }\n}\n\nexport const addSiteStart = () => ({\n    type: types.ADD_SITE_START\n});\n\nexport const addSiteSuccess = (response) => ({\n    type: types.ADD_SITE_SUCCESS,\n    response\n});\n\nexport const addSiteFail = (errorMsg) => ({\n    type: types.ADD_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function getSites(){\n    return (dispatch) => {\n        dispatch(getSitesStart());\n        return axios.get(api.getSitesApi())\n            .then(response => {\n                dispatch(getSitesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getSitesFail(error.message));\n            });\n    }\n}\n\nexport const getSitesStart = () => ({\n    type: types.GET_SITES_START\n});\n\nexport const getSitesSuccess = (response) => ({\n    type: types.GET_SITES_SUCCESS,\n    response\n});\n\nexport const getSitesFail = (errorMsg) => ({\n    type: types.GET_SITES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport {getLoginMethods} from \"../../actions/loginMethods\";\nimport {getApplications} from \"../../actions/applications\";\nimport {getSites} from \"../../actions/sites\";\n\n\nexport class Policy extends Component {\n\n    componentDidMount() {\n        this.props.getApplications();\n        this.props.getSites();\n        this.props.getLoginMethods();\n    }\n\n    render() {\n        if (!this.props.applications ||\n            !this.props.sites ||\n            !this.props.loginMethods\n        ) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>{ this.props.policyType} policy: {this.props.policy.name}</h2>\n                        <h3>Banned apps</h3>\n                        <Select isMulti options={this.props.applications}\n                                defaultValue={this.props.policy.bannedApps}\n                                onChange={(apps) => {\n                                    this.props.setBannedApps(apps);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Banned sites</h3>\n                        <Select isMulti options={this.props.sites}\n                                defaultValue={this.props.policy.bannedSites}\n                                onChange={(sites) => {\n                                    this.props.setBannedSites(sites);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Login methods</h3>\n                        <Select isMulti options={this.props.loginMethods}\n                                defaultValue={this.props.policy.loginMethods}\n                                onChange={(loginMethods) => {\n                                    this.props.setLoginMethods(loginMethods);\n                                }}\n                        />\n                        <hr/>\n                    </div>\n                    <div>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-outline-primary\"\n                        >\n                            Cancel\n                        </button>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick = {this.props.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        applications: state.applications.applications,\n        loginMethods: state.loginMethods.loginMethods,\n        sites: state.sites.sites\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getApplications: () => {\n            dispatch(getApplications())\n        },\n        getSites: () => {\n            dispatch(getSites())\n        },\n        getLoginMethods: () => {\n            dispatch(getLoginMethods())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Policy);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as userPolicyActions from \"../../actions/userPolicy\"\nimport Policy from \"../policy\";\n\nexport class UserPolicy extends Component {\n    state = {\n        policy: null,\n    }\n\n    componentDidMount() {\n        this.getPolicy(0);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    savePolicy = () => {\n        this.props.savePolicy(this.state.policy);\n    }\n\n    render() {\n\n        if (!this.state.policy) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\n                </div>\n            )\n        } else {\n            return (\n                <Policy policyType = \"User\" policy={this.state.policy}\n                            setBannedApps={(apps) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        bannedApps: apps\n                                    }\n                                }))\n                            }}\n                            setBannedSites={(sites) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        bannedSites: sites\n                                    }\n                                }))\n                            }}\n                            setLoginMethods={(loginMethods) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        loginMethods: loginMethods\n                                    }\n                                }))\n                            }}\n                            savePolicy={this.savePolicy}/>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.userPolicy.userPolicy,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(userPolicyActions.getUserPolicy(policyId));\n        },\n        savePolicy: (policy) => {\n            dispatch(userPolicyActions.saveUserPolicy(policy));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicy);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass app extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default app;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nimport AppNavbarHeader from '../components/appNavbarHeader';\nimport ComputerPolicy from '../components/computerPolicy';\nimport UserPolicy from '../components/userPolicy';\nimport app from '../App'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbarHeader/>\n                <Route exact path=\"/\" component={app}/>\n                <Route path=\"/computerPolicy/:computerPolicyId?\" component={ComputerPolicy}/>\n                <Route path=\"/userPolicy/:userPolicyId?\" component={UserPolicy}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\nimport store from './store'\nimport App from './containers/app';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}