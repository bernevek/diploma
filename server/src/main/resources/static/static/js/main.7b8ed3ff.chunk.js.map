{"version":3,"sources":["constants/actionsConstants.js","reducers/computerPolicy.js","reducers/userPolicy.js","reducers/applications.js","reducers/sites.js","reducers/services.js","reducers/users.js","reducers/computers.js","reducers/reports.js","reducers/index.js","store.js","components/appNavbarHeader/index.js","constants/apiEndpoints.js","actions/computerPolicy.js","actions/services.js","components/computerPolicy/index.js","actions/userPolicy.js","actions/applications.js","actions/sites.js","components/userPolicy/index.js","App.js","components/lists/configElementList/configElementItem/index.js","components/lists/configElementList/index.js","components/lists/appList/index.js","components/lists/siteList/index.js","components/lists/serviceList/index.js","actions/users.js","components/lists/userList/userItem/index.js","components/lists/userList/index.js","components/lists/userPolicyList/userPolicyItem/index.js","components/lists/userPolicyList/index.js","components/lists/computerPolicyList/computerPolicyItem/index.js","components/lists/computerPolicyList/index.js","actions/computers.js","components/lists/computerList/computerItem/index.js","components/lists/computerList/index.js","actions/reports.js","components/lists/reportList/reportItem/index.js","components/lists/reportList/index.js","containers/app.js","index.js","logo.svg"],"names":["GET_USER_POLICY_START","GET_USER_POLICY_SUCCESS","GET_USER_POLICY_FAIL","GET_USER_POLICIES_START","GET_USER_POLICIES_SUCCESS","GET_USER_POLICIES_FAIL","UPDATE_USER_POLICY_START","UPDATE_USER_POLICY_SUCCESS","UPDATE_USER_POLICY_FAIL","ADD_USER_POLICY_START","ADD_USER_POLICY_SUCCESS","ADD_USER_POLICY_FAIL","DELETE_USER_POLICY_START","DELETE_USER_POLICY_SUCCESS","DELETE_USER_POLICY_FAIL","GET_COMPUTER_POLICY_START","GET_COMPUTER_POLICY_SUCCESS","GET_COMPUTER_POLICY_FAIL","GET_COMPUTER_POLICIES_START","GET_COMPUTER_POLICIES_SUCCESS","GET_COMPUTER_POLICIES_FAIL","UPDATE_COMPUTER_POLICY_START","UPDATE_COMPUTER_POLICY_SUCCESS","UPDATE_COMPUTER_POLICY_FAIL","ADD_COMPUTER_POLICY_START","ADD_COMPUTER_POLICY_SUCCESS","ADD_COMPUTER_POLICY_FAIL","DELETE_COMPUTER_POLICY_START","DELETE_COMPUTER_POLICY_SUCCESS","DELETE_COMPUTER_POLICY_FAIL","GET_APPLICATIONS_START","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ADD_APPLICATION_START","ADD_APPLICATION_SUCCESS","ADD_APPLICATION_FAIL","DELETE_APPLICATION_START","DELETE_APPLICATION_SUCCESS","DELETE_APPLICATION_FAIL","UPDATE_APPLICATION_START","UPDATE_APPLICATION_SUCCESS","UPDATE_APPLICATION_FAIL","GET_SITES_START","GET_SITES_SUCCESS","GET_SITES_FAIL","ADD_SITE_START","ADD_SITE_SUCCESS","ADD_SITE_FAIL","DELETE_SITE_START","DELETE_SITE_SUCCESS","DELETE_SITE_FAIL","UPDATE_SITE_START","UPDATE_SITE_SUCCESS","UPDATE_SITE_FAIL","GET_SERVICES_START","GET_SERVICES_SUCCESS","GET_SERVICES_FAIL","ADD_SERVICE_START","ADD_SERVICE_SUCCESS","ADD_SERVICE_FAIL","DELETE_SERVICE_START","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAIL","UPDATE_SERVICE_START","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_FAIL","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAIL","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","GET_COMPUTERS_START","GET_COMPUTERS_SUCCESS","GET_COMPUTERS_FAIL","DELETE_COMPUTER_START","DELETE_COMPUTER_SUCCESS","DELETE_COMPUTER_FAIL","UPDATE_COMPUTER_START","UPDATE_COMPUTER_SUCCESS","UPDATE_COMPUTER_FAIL","GET_REPORTS_START","GET_REPORTS_SUCCESS","GET_REPORTS_FAIL","initialState","errorMsg","computerPolicy","computerPolicies","updateComputerPolicyInProgress","getComputerPolicyInProgress","getComputerPoliciesInProgress","addComputerPolicyInProgress","deleteComputerPolicyInProgress","userPolicy","userPolicies","updateUserPolicyInProgress","getUserPolicyInProgress","getUserPoliciesInProgress","addUserPolicyInProgress","deleteUserPolicyInProgress","applications","addApplicationInProgress","getApplicationsInProgress","deleteApplicationInProgress","updateApplicationInProgress","sites","addSiteInProgress","getSitesInProgress","deleteSiteInProgress","updateSiteInProgress","services","addServiceInProgress","getServicesInProgress","deleteServiceInProgress","updateServiceInProgress","users","addUserInProgress","getUsersInProgress","deleteUserInProgress","updateUserInProgress","computers","getComputersInProgress","deleteComputerInProgress","updateComputerInProgress","reports","getReportsInProgress","appReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","toConsumableArray","filter","value","response","data","concat","app","id","map","label","site","user","login","password","userPolicyId","computerId","localId","computerName","localUserName","ip","computerPolicyId","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createHashHistory","require","AppNavbarHeader","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","click","console","log","push","pathname","inherits","createClass","key","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","className","NavDropdown_default","title","Item","Link","Component","connect","dispatch","API_URL","process","REACT_APP_STAGE","getUserPoliciesUrl","getUserPolicyUrl","policyId","updateUserPolicyUrl","addUserPolicyUrl","deleteUserPolicyUrl","getComputerPoliciesUrl","getComputerPolicyUrl","updateComputerPolicyUrl","addComputerPolicyUrl","deleteComputerPolicyUrl","getUsersUrl","updateUserUrl","addUserUrl","deleteUserUrl","userId","getComputersUrl","updateComputerUrl","deleteComputerUrl","getApplicationsUrl","updateApplicationUrl","addApplicationUrl","deleteApplicationUrl","applicationId","getSitesUrl","updateSiteUrl","addSiteUrl","deleteSiteUrl","sitesId","getServicesUrl","updateServiceUrl","addServiceUrl","deleteServiceUrl","serviceId","getReportsUrl","getComputerPolicies","getComputerPoliciesStart","axios","get","api","then","getComputerPoliciesSuccess","catch","error","alert","JSON","parse","request","reason","getComputerPoliciesFail","message","updateComputerPolicyStart","updateComputerPolicySuccess","updateComputerPolicyFail","addComputerPolicyStart","addComputerPolicySuccess","addComputerPolicyFail","deleteComputerPolicyStart","deleteComputerPolicySuccess","deleteComputerPolicyFail","getComputerPolicyStart","getComputerPolicySuccess","getComputerPolicyFail","addServiceStart","addServiceSuccess","addServiceFail","updateServiceStart","updateServiceSuccess","updateServiceFail","deleteServiceStart","deleteServiceSuccess","deleteServiceFail","getServices","getServicesStart","getServicesSuccess","getServicesFail","ComputerPolicy","policy","name","windowsServices","getPolicy","props","setPolicyName","setState","prevState","setBannedServices","savePolicy","match","params","updatePolicy","addPolicy","prevProps","_this2","alt","src","defaultValue","onChange","e","target","placeholder","react_select_esm","isMulti","options","item","i","to","onClick","put","post","serviceActions","getUserPolicies","getUserPoliciesStart","getUserPoliciesSuccess","getUserPoliciesFail","updateUserPolicyStart","updateUserPolicySuccess","updateUserPolicyFail","addUserPolicyStart","addUserPolicySuccess","addUserPolicyFail","deleteUserPolicyStart","deleteUserPolicySuccess","deleteUserPolicyFail","getUserPolicyStart","getUserPolicySuccess","getUserPolicyFail","addApplicationStart","addApplicationSuccess","addApplicationFail","updateApplicationStart","updateApplicationSuccess","updateApplicationFail","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFail","getApplications","getApplicationsStart","getApplicationsSuccess","getApplicationsFail","addSiteStart","addSiteSuccess","addSiteFail","updateSiteStart","updateSiteSuccess","updateSiteFail","deleteSiteStart","deleteSiteSuccess","deleteSiteFail","getSites","getSitesStart","getSitesSuccess","getSitesFail","UserPolicy","bannedApps","bannedSites","setBannedApps","apps","setBannedSites","applicationActions","siteActions","logo","rel","ConfigElementItem","edit","changeLabel","changeValue","updateItem","deleteItem","ConfigElementList","configElements","addItem","configElement","configElementItem_ConfigElementItem","AppList","addApplication","application","updateApplication","deleteApplication","configElementList_ConfigElementList","applicationsActions","delete","SiteList","addSite","updateSite","deleteSite","siteId","sitesActions","ServiceList","addService","service","updateService","deleteService","servicesActions","addUserStart","addUserSuccess","addUserFail","updateUserStart","updateUserSuccess","updateUserFail","deleteUserStart","deleteUserSuccess","deleteUserFail","getUsers","getUsersStart","getUsersSuccess","getUsersFail","UserItem","changeLogin","changePassword","changePolicy","policies","UserList","getPolicies","addUser","updateUser","deleteUser","userItem_UserItem","usersActions","userPolicyActions","UserPolicyItem","UserPolicyList","deletePolicy","userPolicyItem_UserPolicyItem","color","ComputerPolicyItem","ComputerPolicyList","computerPolicyItem_ComputerPolicyItem","computerPolicyActions","updateComputerStart","updateComputerSuccess","updateComputerFail","deleteComputerStart","deleteComputerSuccess","deleteComputerFail","getComputers","getComputersStart","getComputersSuccess","getComputersFail","ComputerItem","ComputerList","updateComputer","computer","deleteComputer","computerItem_ComputerItem","computersActions","getReportsStart","getReportsSuccess","getReportsFail","ReportItem","userName","loginTime","logoutTime","ReportList","reportFilter","getReports","report","reportItem_ReportItem","reportsActions","App","appNavbarHeader","Route","exact","path","component","ReactDOM","render","es","HashRouter","containers_app","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7b8ed3ff.chunk.js","sourcesContent":["/* Login */\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGOUT_START = 'LOGOUT_START';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\n/* UserPolicy */\nexport const GET_USER_POLICY_START = 'GET_USER_POLICY_START';\nexport const GET_USER_POLICY_SUCCESS = 'GET_USER_POLICY_SUCCESS';\nexport const GET_USER_POLICY_FAIL = 'GET_USER_POLICY_FAIL';\nexport const GET_USER_POLICIES_START = 'GET_USER_POLICIES_START';\nexport const GET_USER_POLICIES_SUCCESS = 'GET_USER_POLICIES_SUCCESS';\nexport const GET_USER_POLICIES_FAIL = 'GET_USER_POLICIES_FAIL';\nexport const UPDATE_USER_POLICY_START = 'UPDATE_USER_POLICY_START';\nexport const UPDATE_USER_POLICY_SUCCESS = 'UPDATE_USER_POLICY_SUCCESS';\nexport const UPDATE_USER_POLICY_FAIL = 'UPDATE_USER_POLICY_FAIL';\nexport const ADD_USER_POLICY_START = 'ADD_USER_POLICY_START';\nexport const ADD_USER_POLICY_SUCCESS = 'ADD_USER_POLICY_SUCCESS';\nexport const ADD_USER_POLICY_FAIL = 'ADD_USER_POLICY_FAIL';\nexport const DELETE_USER_POLICY_START = 'DELETE_USER_POLICY_START';\nexport const DELETE_USER_POLICY_SUCCESS = 'DELETE_USER_POLICY_SUCCESS';\nexport const DELETE_USER_POLICY_FAIL = 'DELETE_USER_POLICY_FAIL';\n\n/* ComputerPolicy */\nexport const GET_COMPUTER_POLICY_START = 'GET_COMPUTER_POLICY_START';\nexport const GET_COMPUTER_POLICY_SUCCESS = 'GET_COMPUTER_POLICY_SUCCESS';\nexport const GET_COMPUTER_POLICY_FAIL = 'GET_COMPUTER_POLICY_FAIL';\nexport const GET_COMPUTER_POLICIES_START = 'GET_COMPUTER_POLICIES_START';\nexport const GET_COMPUTER_POLICIES_SUCCESS = 'GET_COMPUTER_POLICIES_SUCCESS';\nexport const GET_COMPUTER_POLICIES_FAIL = 'GET_COMPUTER_POLICIES_FAIL';\nexport const UPDATE_COMPUTER_POLICY_START = 'UPDATE_COMPUTER_POLICY_START';\nexport const UPDATE_COMPUTER_POLICY_SUCCESS = 'UPDATE_COMPUTER_POLICY_SUCCESS';\nexport const UPDATE_COMPUTER_POLICY_FAIL = 'UPDATE_COMPUTER_POLICY_FAIL';\nexport const ADD_COMPUTER_POLICY_START = 'ADD_COMPUTER_POLICY_START';\nexport const ADD_COMPUTER_POLICY_SUCCESS = 'ADD_COMPUTER_POLICY_SUCCESS';\nexport const ADD_COMPUTER_POLICY_FAIL = 'ADD_COMPUTER_POLICY_FAIL';\nexport const DELETE_COMPUTER_POLICY_START = 'DELETE_COMPUTER_POLICY_START';\nexport const DELETE_COMPUTER_POLICY_SUCCESS = 'DELETE_COMPUTER_POLICY_SUCCESS';\nexport const DELETE_COMPUTER_POLICY_FAIL = 'DELETE_COMPUTER_POLICY_FAIL';\n\n/* Applications */\nexport const GET_APPLICATIONS_START = 'GET_APPLICATIONS_START';\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\nexport const ADD_APPLICATION_START = 'ADD_APPLICATION_START';\nexport const ADD_APPLICATION_SUCCESS = 'ADD_APPLICATION_SUCCESS';\nexport const ADD_APPLICATION_FAIL = 'ADD_APPLICATION_FAIL';\nexport const DELETE_APPLICATION_START = 'DELETE_APPLICATION_START';\nexport const DELETE_APPLICATION_SUCCESS = 'DELETE_APPLICATION_SUCCESS';\nexport const DELETE_APPLICATION_FAIL = 'DELETE_APPLICATION_FAIL';\nexport const UPDATE_APPLICATION_START = 'UPDATE_APPLICATION_START';\nexport const UPDATE_APPLICATION_SUCCESS = 'UPDATE_APPLICATION_SUCCESS';\nexport const UPDATE_APPLICATION_FAIL = 'UPDATE_APPLICATION_FAIL';\n\n/* Sites */\nexport const GET_SITES_START = 'GET_SITES_START';\nexport const GET_SITES_SUCCESS = 'GET_SITES_SUCCESS';\nexport const GET_SITES_FAIL = 'GET_SITES_FAIL';\nexport const ADD_SITE_START = 'ADD_SITE_START';\nexport const ADD_SITE_SUCCESS = 'ADD_SITE_SUCCESS';\nexport const ADD_SITE_FAIL = 'ADD_SITE_FAIL';\nexport const DELETE_SITE_START = 'DELETE_SITE_START';\nexport const DELETE_SITE_SUCCESS = 'DELETE_SITE_SUCCESS';\nexport const DELETE_SITE_FAIL = 'DELETE_SITE_FAIL';\nexport const UPDATE_SITE_START = 'UPDATE_SITE_START';\nexport const UPDATE_SITE_SUCCESS = 'UPDATE_SITE_SUCCESS';\nexport const UPDATE_SITE_FAIL = 'UPDATE_SITE_FAIL';\n\n/* Services */\nexport const GET_SERVICES_START = 'GET_SERVICES_START';\nexport const GET_SERVICES_SUCCESS = 'GET_SERVICES_SUCCESS';\nexport const GET_SERVICES_FAIL = 'GET_SERVICES_FAIL';\nexport const ADD_SERVICE_START = 'ADD_SERVICE_START';\nexport const ADD_SERVICE_SUCCESS = 'ADD_SERVICE_SUCCESS';\nexport const ADD_SERVICE_FAIL = 'ADD_SERVICE_FAIL';\nexport const DELETE_SERVICE_START = 'DELETE_SERVICE_START';\nexport const DELETE_SERVICE_SUCCESS = 'DELETE_SERVICE_SUCCESS';\nexport const DELETE_SERVICE_FAIL = 'DELETE_SERVICE_FAIL';\nexport const UPDATE_SERVICE_START = 'UPDATE_SERVICE_START';\nexport const UPDATE_SERVICE_SUCCESS = 'UPDATE_SERVICE_SUCCESS';\nexport const UPDATE_SERVICE_FAIL = 'UPDATE_SERVICE_FAIL';\n\n/* Users */\nexport const GET_USERS_START = 'GET_USERS_START';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\nexport const ADD_USER_START = 'ADD_USER_START';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\nexport const DELETE_USER_START = 'DELETE_USER_START';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\nexport const UPDATE_USER_START = 'UPDATE_USER_START';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\n\n/* Computers */\nexport const GET_COMPUTERS_START = 'GET_COMPUTERS_START';\nexport const GET_COMPUTERS_SUCCESS = 'GET_COMPUTERS_SUCCESS';\nexport const GET_COMPUTERS_FAIL = 'GET_COMPUTERS_FAIL';\nexport const DELETE_COMPUTER_START = 'DELETE_COMPUTER_START';\nexport const DELETE_COMPUTER_SUCCESS = 'DELETE_COMPUTER_SUCCESS';\nexport const DELETE_COMPUTER_FAIL = 'DELETE_COMPUTER_FAIL';\nexport const UPDATE_COMPUTER_START = 'UPDATE_COMPUTER_START';\nexport const UPDATE_COMPUTER_SUCCESS = 'UPDATE_COMPUTER_SUCCESS';\nexport const UPDATE_COMPUTER_FAIL = 'UPDATE_COMPUTER_FAIL';\n\n/* Reports */\nexport const GET_REPORTS_START = 'GET_REPORTS_START';\nexport const GET_REPORTS_SUCCESS = 'GET_REPORTS_SUCCESS';\nexport const GET_REPORTS_FAIL = 'GET_REPORTS_FAIL';","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computerPolicy: null,\n    computerPolicies: null,\n    updateComputerPolicyInProgress: false,\n    getComputerPolicyInProgress: false,\n    getComputerPoliciesInProgress: false,\n    addComputerPolicyInProgress: false,\n    deleteComputerPolicyInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.UPDATE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateComputerPolicyInProgress: true\n            };\n        case types.UPDATE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                updateComputerPolicyInProgress: false,\n            };\n        case types.UPDATE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateComputerPolicyInProgress: false,\n            };\n        case types.ADD_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addComputerPolicyInProgress: true\n            };\n        case types.ADD_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addComputerPolicyInProgress: false,\n            };\n        case types.ADD_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addComputerPolicyInProgress: false,\n            };\n        case types.DELETE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteComputerPolicyInProgress: true\n            };\n        case types.DELETE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicies: [...state.computerPolicies.filter(computerPolicy => computerPolicy.value !== action.response.data)],\n                deleteComputerPolicyInProgress: false,\n            };\n        case types.DELETE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPolicyInProgress: true\n            };\n        case types.GET_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICIES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPoliciesInProgress: true\n            };\n        case types.GET_COMPUTER_POLICIES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicies: action.response.data,\n                getComputerPoliciesInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICIES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPoliciesInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    userPolicy: null,\n    userPolicies: null,\n    updateUserPolicyInProgress: false,\n    getUserPolicyInProgress: false,\n    getUserPoliciesInProgress: false,\n    addUserPolicyInProgress: false,\n    deleteUserPolicyInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.UPDATE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: true\n            };\n        case types.UPDATE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: false,\n            };\n        case types.UPDATE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: true\n            };\n        case types.ADD_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserPolicyInProgress: true\n            };\n        case types.DELETE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: [...state.userPolicies.filter(userPolicy => userPolicy.value !== action.response.data)],\n                deleteUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPolicyInProgress: true\n            };\n        case types.GET_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicy: action.response.data,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICIES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPoliciesInProgress: true\n            };\n        case types.GET_USER_POLICIES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: action.response.data,\n                getUserPoliciesInProgress: false,\n            };\n        case types.GET_USER_POLICIES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPoliciesInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    applications: null,\n    addApplicationInProgress: false,\n    getApplicationsInProgress: false,\n    deleteApplicationInProgress: false,\n    updateApplicationInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: true\n            };\n        case types.ADD_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: false,\n                applications: [...state.applications, action.response.data]\n            };\n        case types.ADD_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addApplicationInProgress: false,\n            };\n        case types.GET_APPLICATIONS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getApplicationsInProgress: true\n            };\n        case types.GET_APPLICATIONS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: action.response.data,\n                getApplicationsInProgress: false,\n            };\n        case types.GET_APPLICATIONS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getApplicationsInProgress: false,\n            };\n        case types.DELETE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteApplicationInProgress: true\n            };\n        case types.DELETE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.filter(app => app.id !== action.response.data)],\n                deleteApplicationInProgress: false,\n            };\n        case types.DELETE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateApplicationInProgress: true\n            };\n        case types.UPDATE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateApplicationInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    sites: null,\n    addSiteInProgress: false,\n    getSitesInProgress: false,\n    deleteSiteInProgress: false,\n    updateSiteInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: true\n            };\n        case types.ADD_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: false,\n                sites: [...state.sites, action.response.data]\n            };\n        case types.ADD_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addSiteInProgress: false,\n            };\n        case types.GET_SITES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getSitesInProgress: true\n            };\n        case types.GET_SITES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: action.response.data,\n                getSitesInProgress: false,\n            };\n        case types.GET_SITES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getSitesInProgress: false,\n            };\n        case types.DELETE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteSiteInProgress: true\n            };\n        case types.DELETE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.filter(site => site.id !== action.response.data)],\n                deleteSiteInProgress: false,\n            };\n        case types.DELETE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateSiteInProgress: true\n            };\n        case types.UPDATE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.map(site => {\n                    if (site.id === action.response.data.id) {\n                        site.label = action.response.data.label;\n                        site.value = action.response.data.value;\n                    }\n                    return site;\n                })],\n                updateSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateSiteInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    services: null,\n    addServiceInProgress: false,\n    getServicesInProgress: false,\n    deleteServiceInProgress: false,\n    updateServiceInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addServiceInProgress: true\n            };\n        case types.ADD_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addServiceInProgress: false,\n                services: [...state.services, action.response.data]\n            };\n        case types.ADD_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addServiceInProgress: false,\n            };\n        case types.GET_SERVICES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getServicesInProgress: true\n            };\n        case types.GET_SERVICES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: action.response.data,\n                getServicesInProgress: false,\n            };\n        case types.GET_SERVICES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getServicesInProgress: false,\n            };\n        case types.DELETE_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteServiceInProgress: true\n            };\n        case types.DELETE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: [...state.services.filter(app => app.id !== action.response.data)],\n                deleteServiceInProgress: false,\n            };\n        case types.DELETE_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteServiceInProgress: false,\n            };\n        case types.UPDATE_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateServiceInProgress: true\n            };\n        case types.UPDATE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: [...state.services.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateServiceInProgress: false,\n            };\n        case types.UPDATE_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateServiceInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    users: null,\n    addUserInProgress: false,\n    getUsersInProgress: false,\n    deleteUserInProgress: false,\n    updateUserInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: true\n            };\n        case types.ADD_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: false,\n                users: [...state.users, action.response.data]\n            };\n        case types.ADD_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserInProgress: false,\n            };\n        case types.GET_USERS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUsersInProgress: true\n            };\n        case types.GET_USERS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: action.response.data,\n                getUsersInProgress: false,\n            };\n        case types.GET_USERS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUsersInProgress: false,\n            };\n        case types.DELETE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserInProgress: true\n            };\n        case types.DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.filter(app => app.id !== action.response.data)],\n                deleteUserInProgress: false,\n            };\n        case types.DELETE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserInProgress: false,\n            };\n        case types.UPDATE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserInProgress: true\n            };\n        case types.UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.map(user => {\n                    if (user.id === action.response.data.id) {\n                        user.login = action.response.data.login;\n                        user.password = action.response.data.password;\n                        user.userPolicyId = action.response.data.userPolicyId;\n                        user.computerId = action.response.data.computerId;\n                    }\n                    return user;\n                })],\n                updateUserInProgress: false,\n            };\n        case types.UPDATE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computers: null,\n    getComputersInProgress: false,\n    deleteComputerInProgress: false,\n    updateComputerInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.GET_COMPUTERS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputersInProgress: true\n            };\n        case types.GET_COMPUTERS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computers: action.response.data,\n                getComputersInProgress: false,\n            };\n        case types.GET_COMPUTERS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputersInProgress: false,\n            };\n        case types.DELETE_COMPUTER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteComputerInProgress: true\n            };\n        case types.DELETE_COMPUTER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computers: [...state.computers.filter(app => app.id !== action.response.data)],\n                deleteComputerInProgress: false,\n            };\n        case types.DELETE_COMPUTER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteComputerInProgress: false,\n            };\n        case types.UPDATE_COMPUTER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateComputerInProgress: true\n            };\n        case types.UPDATE_COMPUTER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computers: [...state.computers.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.localId = action.response.data.localId;\n                        app.computerName = action.response.data.computerName;\n                        app.localUserName = action.response.data.localUserName;\n                        app.ip = action.response.data.ip;\n                        app.computerPolicyId = action.response.data.computerPolicyId;\n                    }\n                    return app;\n                })],\n                updateComputerInProgress: false,\n            };\n        case types.UPDATE_COMPUTER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateComputerInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    reports: null,\n    getReportsInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.GET_REPORTS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getReportsInProgress: true\n            };\n        case types.GET_REPORTS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                reports: action.response.data,\n                getReportsInProgress: false,\n            };\n        case types.GET_REPORTS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getReportsInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport computerPolicy from './computerPolicy';\nimport userPolicy from './userPolicy';\nimport applications from './applications';\nimport sites from './sites';\nimport services from './services';\nimport users from './users';\nimport computers from './computers';\nimport reports from './reports';\n\nconst appReducer = combineReducers({\n    computerPolicy,\n    userPolicy,\n    applications,\n    sites,\n    services,\n    users,\n    computers,\n    reports\n});\nconst rootReducer = (state, action) => {\n    if(action.type === 'LOGOUT'){\n        state = undefined;\n    }\n    return appReducer(state, action);\n}\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const history = createHashHistory();\n\nexport default store;\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { history } from '../../store'\nrequire('bootstrap/dist/css/bootstrap.css');\n\n\nexport class AppNavbarHeader extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    click = () => {\n        console.log(\"fsg\");\n        history.push({pathname: \"/userPolicy\"})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Access system</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#/users\">Users</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/userPolicies\">User policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Computer\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#/computers\">Computers</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/computerPolicies\">Computer policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <Nav.Link href=\"#/applications\">Applications</Nav.Link>\n                        <Nav.Link href=\"#/sites\">Sites</Nav.Link>\n                        <Nav.Link href=\"#/services\">Services</Nav.Link>\n                        <Nav.Link href=\"#/reports\">Reports</Nav.Link>\n                    </Nav>\n                    {/*<Form inline>*/}\n                        {/*<FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>*/}\n                        {/*<Button variant=\"outline-success\">Search</Button>*/}\n                    {/*</Form>*/}\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppNavbarHeader);\n","var API_URL = \"\";\n\nprocess.env.REACT_APP_STAGE === 'dev'\n    ? API_URL = 'http://localhost:8080/api'\n    : API_URL = '/api'\n\n/* User Policy */\nexport const getUserPoliciesUrl = () => {\n    return API_URL + \"/userPolicies\";\n}\n\nexport const getUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\nexport const updateUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const addUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const deleteUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\n/* Computer Policy */\nexport const getComputerPoliciesUrl = () => {\n    return API_URL + \"/computerPolicies\";\n}\n\nexport const getComputerPolicyUrl = (policyId) => {\n    return API_URL + \"/computerPolicy/\" + policyId;\n}\n\nexport const updateComputerPolicyUrl = () => {\n    return API_URL + \"/computerPolicy\";\n}\n\nexport const addComputerPolicyUrl = () => {\n    return API_URL + \"/computerPolicy\";\n}\n\nexport const deleteComputerPolicyUrl = (policyId) => {\n    return API_URL + \"/computerPolicy/\" + policyId;\n}\n\n/* Users */\nexport const getUsersUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const updateUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const addUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const deleteUserUrl = (userId) => {\n    return API_URL + \"/user/\" + userId;\n}\n\n/* Computers */\nexport const getComputersUrl = () => {\n    return API_URL + \"/computer\";\n}\n\nexport const updateComputerUrl = () => {\n    return API_URL + \"/computer\";\n}\n\nexport const deleteComputerUrl = (computerId) => {\n    return API_URL + \"/computer/\" + computerId;\n}\n\n/* Applications */\nexport const getApplicationsUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const updateApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const addApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const deleteApplicationUrl = (applicationId) => {\n    return API_URL + \"/application/\" + applicationId;\n}\n\n/* Sites */\nexport const getSitesUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const updateSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const addSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const deleteSiteUrl = (sitesId) => {\n    return API_URL + \"/site/\" + sitesId;\n}\n\n/* Services */\nexport const getServicesUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const updateServiceUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const addServiceUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const deleteServiceUrl = (serviceId) => {\n    return API_URL + \"/windowsService/\" + serviceId;\n}\n\n/* Reports */\nexport const getReportsUrl = () => {\n    return API_URL + \"/report\";\n}\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\nimport { history } from '../store'\n\nexport function getComputerPolicies(){\n    return (dispatch) => {\n        dispatch(getComputerPoliciesStart());\n        return axios.get(api.getComputerPoliciesUrl())\n            .then(response => {\n                dispatch(getComputerPoliciesSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getComputerPoliciesFail(error.message));\n            });\n    }\n}\n\nexport const getComputerPoliciesStart = () => ({\n    type: types.GET_COMPUTER_POLICIES_START\n});\n\nexport const getComputerPoliciesSuccess = (response) => ({\n    type: types.GET_COMPUTER_POLICIES_SUCCESS,\n    response\n});\n\nexport const getComputerPoliciesFail = (errorMsg) => ({\n    type: types.GET_COMPUTER_POLICIES_FAIL,\n    errorMsg,\n});\n\nexport function updateComputerPolicy(computerPolicy){\n    return (dispatch) => {\n        dispatch(updateComputerPolicyStart());\n        return axios.put(api.updateComputerPolicyUrl(), computerPolicy)\n            .then(response => {\n                dispatch(updateComputerPolicySuccess(response));\n                history.push({pathname: \"/computerPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(updateComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const updateComputerPolicyStart = () => ({\n    type: types.UPDATE_COMPUTER_POLICY_START\n});\n\nexport const updateComputerPolicySuccess = (response) => ({\n    type: types.UPDATE_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const updateComputerPolicyFail = (errorMsg) => ({\n    type: types.UPDATE_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function addComputerPolicy(computerPolicy){\n    return (dispatch) => {\n        dispatch(addComputerPolicyStart());\n        return axios.post(api.addComputerPolicyUrl(), computerPolicy)\n            .then(response => {\n                dispatch(addComputerPolicySuccess(response));\n                history.push({pathname: \"/computerPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const addComputerPolicyStart = () => ({\n    type: types.ADD_COMPUTER_POLICY_START\n});\n\nexport const addComputerPolicySuccess = (response) => ({\n    type: types.ADD_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const addComputerPolicyFail = (errorMsg) => ({\n    type: types.ADD_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function deleteComputerPolicy(policyId){\n    return (dispatch) => {\n        dispatch(deleteComputerPolicyStart());\n        return axios.delete(api.deleteComputerPolicyUrl(policyId))\n            .then(response => {\n                dispatch(deleteComputerPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(deleteComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const deleteComputerPolicyStart = () => ({\n    type: types.DELETE_COMPUTER_POLICY_START\n});\n\nexport const deleteComputerPolicySuccess = (response) => ({\n    type: types.DELETE_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const deleteComputerPolicyFail = (errorMsg) => ({\n    type: types.DELETE_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getComputerPolicy(computerPolicyId){\n    return (dispatch) => {\n        dispatch(getComputerPolicyStart());\n        return axios.get(api.getComputerPolicyUrl(computerPolicyId))\n            .then(response => {\n                dispatch(getComputerPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getComputerPolicyStart = () => ({\n    type: types.GET_COMPUTER_POLICY_START\n});\n\nexport const getComputerPolicySuccess = (response) => ({\n    type: types.GET_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const getComputerPolicyFail = (errorMsg) => ({\n    type: types.GET_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addService(service){\n    return (dispatch) => {\n        dispatch(addServiceStart());\n        return axios.post(api.addServiceUrl(), service)\n            .then(response => {\n                dispatch(addServiceSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addServiceFail(error.message));\n            });\n    }\n}\n\nexport const addServiceStart = () => ({\n    type: types.ADD_SERVICE_START\n});\n\nexport const addServiceSuccess = (response) => ({\n    type: types.ADD_SERVICE_SUCCESS,\n    response\n});\n\nexport const addServiceFail = (errorMsg) => ({\n    type: types.ADD_SERVICE_FAIL,\n    errorMsg,\n});\n\nexport function updateService(service){\n    return (dispatch) => {\n        dispatch(updateServiceStart());\n        return axios.put(api.updateServiceUrl(), service)\n            .then(response => {\n                dispatch(updateServiceSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateServiceFail(error.message));\n            });\n    }\n}\n\nexport const updateServiceStart = () => ({\n    type: types.UPDATE_SERVICE_START\n});\n\nexport const updateServiceSuccess = (response) => ({\n    type: types.UPDATE_SERVICE_SUCCESS,\n    response\n});\n\nexport const updateServiceFail = (errorMsg) => ({\n    type: types.UPDATE_SERVICE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteService(serviceId){\n    return (dispatch) => {\n        dispatch(deleteServiceStart());\n        return axios.delete(api.deleteServiceUrl(serviceId))\n            .then(response => {\n                dispatch(deleteServiceSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteServiceFail(error.message));\n            });\n    }\n}\n\nexport const deleteServiceStart = () => ({\n    type: types.DELETE_SERVICE_START\n});\n\nexport const deleteServiceSuccess = (response) => ({\n    type: types.DELETE_SERVICE_SUCCESS,\n    response\n});\n\nexport const deleteServiceFail = (errorMsg) => ({\n    type: types.DELETE_SERVICE_FAIL,\n    errorMsg,\n});\n\nexport function getServices(){\n    return (dispatch) => {\n        dispatch(getServicesStart());\n        return axios.get(api.getServicesUrl())\n            .then(response => {\n                dispatch(getServicesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getServicesFail(error.message));\n            });\n    }\n}\n\nexport const getServicesStart = () => ({\n    type: types.GET_SERVICES_START\n});\n\nexport const getServicesSuccess = (response) => ({\n    type: types.GET_SERVICES_SUCCESS,\n    response\n});\n\nexport const getServicesFail = (errorMsg) => ({\n    type: types.GET_SERVICES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { Link } from \"react-router-dom\";\nimport * as computerPolicyActions from \"../../actions/computerPolicy\"\nimport * as serviceActions from \"../../actions/services\";\n\nexport class ComputerPolicy extends Component {\n    state = {\n        policy: {\n            name: \"\",\n            windowsServices: [],\n            computers: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getServices();\n        if (this.props.match.params.computerPolicyId){\n            this.getPolicy(this.props.match.params.computerPolicyId);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    setPolicyName = (name) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                name: name\n            }\n        }))\n    }\n\n    setBannedServices = (services) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                windowsServices: services\n            }\n        }))\n    }\n\n    savePolicy = () => {\n        if (this.props.match.params.computerPolicyId) {\n            this.props.updatePolicy(this.state.policy);\n        } else {\n            this.props.addPolicy(this.state.policy);\n        }\n    }\n\n    render() {\n\n        if (!this.props.services ||\n            (!this.state.policy.id && this.props.match.params.computerPolicyId)) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>\n                            Computer policy:\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.policy.name}\n                                onChange={(e) => {\n                                    this.setPolicyName(e.target.value);\n                                }}\n                                placeholder=\"Name\"\n                            />\n                        </h2>\n                        <h3>Banned services</h3>\n                        <Select isMulti options={this.props.services}\n                                defaultValue={this.state.policy.windowsServices}\n                                onChange={(services) => {\n                                    this.setBannedServices(services);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Computers</h3>\n                        {this.state.policy.computers.map((item, i) => {\n                                return (<div key={i}>\n                                    <h4>{item.localId} {item.computerName}</h4>\n                                </div>)\n                            }\n                        )}\n                        <hr/>\n                    </div>\n                    <div>\n                        <Link className=\"btn btn-md btn-outline-primary\" to=\"/computerPolicies\">Cancel</Link>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick={this.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.computerPolicy.computerPolicy,\n        services: state.services.services\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(computerPolicyActions.getComputerPolicy(policyId));\n        },\n        updatePolicy: (policy) => {\n            dispatch(computerPolicyActions.updateComputerPolicy(policy));\n        },\n        addPolicy: (policy) => {\n            dispatch(computerPolicyActions.addComputerPolicy(policy));\n        },\n        getServices: () => {\n            dispatch(serviceActions.getServices())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicy);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\nimport { history } from '../store'\n\nexport function getUserPolicies(){\n    return (dispatch) => {\n        dispatch(getUserPoliciesStart());\n        return axios.get(api.getUserPoliciesUrl())\n            .then(response => {\n                dispatch(getUserPoliciesSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPoliciesFail(error.message));\n            });\n    }\n}\n\nexport const getUserPoliciesStart = () => ({\n    type: types.GET_USER_POLICIES_START\n});\n\nexport const getUserPoliciesSuccess = (response) => ({\n    type: types.GET_USER_POLICIES_SUCCESS,\n    response\n});\n\nexport const getUserPoliciesFail = (errorMsg) => ({\n    type: types.GET_USER_POLICIES_FAIL,\n    errorMsg,\n});\n\nexport function updateUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(updateUserPolicyStart());\n        return axios.put(api.updateUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(updateUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(updateUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const updateUserPolicyStart = () => ({\n    type: types.UPDATE_USER_POLICY_START\n});\n\nexport const updateUserPolicySuccess = (response) => ({\n    type: types.UPDATE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const updateUserPolicyFail = (errorMsg) => ({\n    type: types.UPDATE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function addUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(addUserPolicyStart());\n        return axios.post(api.addUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(addUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const addUserPolicyStart = () => ({\n    type: types.ADD_USER_POLICY_START\n});\n\nexport const addUserPolicySuccess = (response) => ({\n    type: types.ADD_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const addUserPolicyFail = (errorMsg) => ({\n    type: types.ADD_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function deleteUserPolicy(policyId){\n    return (dispatch) => {\n        dispatch(deleteUserPolicyStart());\n        return axios.delete(api.deleteUserPolicyUrl(policyId))\n            .then(response => {\n                dispatch(deleteUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(deleteUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserPolicyStart = () => ({\n    type: types.DELETE_USER_POLICY_START\n});\n\nexport const deleteUserPolicySuccess = (response) => ({\n    type: types.DELETE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const deleteUserPolicyFail = (errorMsg) => ({\n    type: types.DELETE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getUserPolicy(userPolicyId){\n    return (dispatch) => {\n        dispatch(getUserPolicyStart());\n        return axios.get(api.getUserPolicyUrl(userPolicyId))\n            .then(response => {\n                dispatch(getUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getUserPolicyStart = () => ({\n    type: types.GET_USER_POLICY_START\n});\n\nexport const getUserPolicySuccess = (response) => ({\n    type: types.GET_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const getUserPolicyFail = (errorMsg) => ({\n    type: types.GET_USER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addApplication(application){\n    return (dispatch) => {\n        dispatch(addApplicationStart());\n        return axios.post(api.addApplicationUrl(), application)\n            .then(response => {\n                dispatch(addApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addApplicationFail(error.message));\n            });\n    }\n}\n\nexport const addApplicationStart = () => ({\n    type: types.ADD_APPLICATION_START\n});\n\nexport const addApplicationSuccess = (response) => ({\n    type: types.ADD_APPLICATION_SUCCESS,\n    response\n});\n\nexport const addApplicationFail = (errorMsg) => ({\n    type: types.ADD_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function updateApplication(application){\n    return (dispatch) => {\n        dispatch(updateApplicationStart());\n        return axios.put(api.updateApplicationUrl(), application)\n            .then(response => {\n                dispatch(updateApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateApplicationFail(error.message));\n            });\n    }\n}\n\nexport const updateApplicationStart = () => ({\n    type: types.UPDATE_APPLICATION_START\n});\n\nexport const updateApplicationSuccess = (response) => ({\n    type: types.UPDATE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const updateApplicationFail = (errorMsg) => ({\n    type: types.UPDATE_APPLICATION_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteApplication(applicationId){\n    return (dispatch) => {\n        dispatch(deleteApplicationStart());\n        return axios.delete(api.deleteApplicationUrl(applicationId))\n            .then(response => {\n                dispatch(deleteApplicationSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteApplicationFail(error.message));\n            });\n    }\n}\n\nexport const deleteApplicationStart = () => ({\n    type: types.DELETE_APPLICATION_START\n});\n\nexport const deleteApplicationSuccess = (response) => ({\n    type: types.DELETE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const deleteApplicationFail = (errorMsg) => ({\n    type: types.DELETE_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function getApplications(){\n    return (dispatch) => {\n        dispatch(getApplicationsStart());\n        return axios.get(api.getApplicationsUrl())\n            .then(response => {\n                dispatch(getApplicationsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getApplicationsFail(error.message));\n            });\n    }\n}\n\nexport const getApplicationsStart = () => ({\n    type: types.GET_APPLICATIONS_START\n});\n\nexport const getApplicationsSuccess = (response) => ({\n    type: types.GET_APPLICATIONS_SUCCESS,\n    response\n});\n\nexport const getApplicationsFail = (errorMsg) => ({\n    type: types.GET_APPLICATIONS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addSite(site){\n    return (dispatch) => {\n        dispatch(addSiteStart());\n        return axios.post(api.addSiteUrl(), site)\n            .then(response => {\n                dispatch(addSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addSiteFail(error.message));\n            });\n    }\n}\n\nexport const addSiteStart = () => ({\n    type: types.ADD_SITE_START\n});\n\nexport const addSiteSuccess = (response) => ({\n    type: types.ADD_SITE_SUCCESS,\n    response\n});\n\nexport const addSiteFail = (errorMsg) => ({\n    type: types.ADD_SITE_FAIL,\n    errorMsg,\n});\n\nexport function updateSite(site){\n    return (dispatch) => {\n        dispatch(updateSiteStart());\n        return axios.put(api.updateSiteUrl(), site)\n            .then(response => {\n                dispatch(updateSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateSiteFail(error.message));\n            });\n    }\n}\n\nexport const updateSiteStart = () => ({\n    type: types.UPDATE_SITE_START\n});\n\nexport const updateSiteSuccess = (response) => ({\n    type: types.UPDATE_SITE_SUCCESS,\n    response\n});\n\nexport const updateSiteFail = (errorMsg) => ({\n    type: types.UPDATE_SITE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteSite(siteId){\n    return (dispatch) => {\n        dispatch(deleteSiteStart());\n        return axios.delete(api.deleteSiteUrl(siteId))\n            .then(response => {\n                dispatch(deleteSiteSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteSiteFail(error.message));\n            });\n    }\n}\n\nexport const deleteSiteStart = () => ({\n    type: types.DELETE_SITE_START\n});\n\nexport const deleteSiteSuccess = (response) => ({\n    type: types.DELETE_SITE_SUCCESS,\n    response\n});\n\nexport const deleteSiteFail = (errorMsg) => ({\n    type: types.DELETE_SITE_FAIL,\n    errorMsg,\n});\n\nexport function getSites(){\n    return (dispatch) => {\n        dispatch(getSitesStart());\n        return axios.get(api.getSitesUrl())\n            .then(response => {\n                dispatch(getSitesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getSitesFail(error.message));\n            });\n    }\n}\n\nexport const getSitesStart = () => ({\n    type: types.GET_SITES_START\n});\n\nexport const getSitesSuccess = (response) => ({\n    type: types.GET_SITES_SUCCESS,\n    response\n});\n\nexport const getSitesFail = (errorMsg) => ({\n    type: types.GET_SITES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { Link } from \"react-router-dom\";\nimport * as userPolicyActions from \"../../actions/userPolicy\"\nimport * as applicationActions from \"../../actions/applications\";\nimport * as siteActions from \"../../actions/sites\";\n\nexport class UserPolicy extends Component {\n    state = {\n        policy: {\n            name: \"\",\n            bannedApps: [],\n            bannedSites: [],\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getApplications();\n        this.props.getSites();\n        if (this.props.match.params.userPolicyId){\n            this.getPolicy(this.props.match.params.userPolicyId);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    setPolicyName = (name) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                name: name\n            }\n        }))\n    }\n\n    setBannedApps = (apps) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                bannedApps: apps\n            }\n        }))\n    }\n\n    setBannedSites = (sites) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                bannedSites: sites\n            }\n        }))\n    }\n\n    savePolicy = () => {\n        if (this.props.match.params.userPolicyId) {\n            this.props.updatePolicy(this.state.policy);\n        } else {\n            this.props.addPolicy(this.state.policy);\n        }\n    }\n\n    render() {\n\n        if (!this.props.applications ||\n            !this.props.sites ||\n            (!this.state.policy.id && this.props.match.params.userPolicyId)) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>\n                            User policy:\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.policy.name}\n                                onChange={(e) => {\n                                    this.setPolicyName(e.target.value);\n                                }}\n                                placeholder=\"Name\"\n                            />\n                        </h2>\n                        <h3>Banned apps</h3>\n                        <Select isMulti options={this.props.applications}\n                                defaultValue={this.state.policy.bannedApps}\n                                onChange={(apps) => {\n                                    this.setBannedApps(apps);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Banned sites</h3>\n                        <Select isMulti options={this.props.sites}\n                                defaultValue={this.state.policy.bannedSites}\n                                onChange={(sites) => {\n                                    this.setBannedSites(sites);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Users</h3>\n                        {this.state.policy.users.map((item, i) => {\n                                return (<div key={i}>\n                                    <h4>{item.login}</h4>\n                                </div>)\n                            }\n                        )}\n                        <hr/>\n                    </div>\n                    <div>\n                        <Link className=\"btn btn-md btn-outline-primary\" to=\"/userPolicies\">Cancel</Link>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick={this.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.userPolicy.userPolicy,\n        applications: state.applications.applications,\n        sites: state.sites.sites\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(userPolicyActions.getUserPolicy(policyId));\n        },\n        updatePolicy: (policy) => {\n            dispatch(userPolicyActions.updateUserPolicy(policy));\n        },\n        addPolicy: (policy) => {\n            dispatch(userPolicyActions.addUserPolicy(policy));\n        },\n        getApplications: () => {\n            dispatch(applicationActions.getApplications())\n        },\n        getSites: () => {\n            dispatch(siteActions.getSites())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicy);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass app extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default app;\n","import React, {Component} from \"react\";\n\nexport class ConfigElementItem extends Component {\n    state = {\n        item: {\n            id: null,\n            label: null,\n            value: null\n        },\n        edit: false\n    }\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n    render() {\n        return (\n            <li className=\"list-group-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.label}\n                                onChange={this.changeLabel}\n                                placeholder=\"Label\"\n                            />\n                        ) : (\n                            this.state.item.label\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.value}\n                                onChange={this.changeValue}\n                                placeholder=\"Value\"\n                            />\n                        ) : (\n                            this.state.item.value\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-success\"\n                                    onClick={() => {\n                                        this.props.updateItem(this.state.item);\n                                        this.setState({\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Update\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-outline-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            item: this.props.item,\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        ) : (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            edit: true\n                                        });\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-danger\"\n                                    onClick={() => this.props.deleteItem(this.state.item.id)}\n                                >\n                                    Delete\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {ConfigElementItem} from './configElementItem/index';\n\nexport class ConfigElementList extends Component {\n    state = {\n        item: {\n            label: null,\n            value: null\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.props.configElements) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    {this.props.name}\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeLabel}\n                                        placeholder=\"Label\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeValue}\n                                        placeholder=\"Value\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.props.addItem(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.props.configElements.map((configElement, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ConfigElementItem\n                                                        item={configElement}\n                                                        updateItem={this.props.updateItem}\n                                                        deleteItem={this.props.deleteItem}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as applicationsActions from \"../../../actions/applications\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class AppList extends Component {\n    state = {\n        applications: null,\n    }\n\n    componentDidMount() {\n        this.getApplications();\n    }\n\n    componentDidUpdate(prevProps) {\n        debugger\n        if(this.props.applications !== prevProps.applications) {\n            this.setState({\n                applications: this.props.applications\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getApplications = () => {\n        this.props.getApplications();\n    }\n\n    addApplication = (application) => {\n        this.props.addApplication(application);\n    }\n\n    updateApplication = (application) => {\n        this.props.updateApplication(application);\n    }\n\n    deleteApplication = (applicationId) => {\n        this.props.deleteApplication(applicationId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Applications\"}\n                configElements={this.state.applications}\n                addItem={this.addApplication}\n                updateItem={this.updateApplication}\n                deleteItem={this.deleteApplication}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        applications: state.applications.applications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getApplications: () => {\n            dispatch(applicationsActions.getApplications());\n        },\n        addApplication: (application) => {\n            dispatch(applicationsActions.addApplication(application));\n        },\n        updateApplication: (application) => {\n            dispatch(applicationsActions.updateApplication(application));\n        },\n        deleteApplication: (applicationId) => {\n            dispatch(applicationsActions.deleteApplication(applicationId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppList);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as sitesActions from \"../../../actions/sites\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class SiteList extends Component {\n    state = {\n        sites: null,\n    }\n\n    componentDidMount() {\n        this.getSites();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.sites !== prevProps.sites) {\n            this.setState({\n                sites: this.props.sites\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getSites = () => {\n        this.props.getSites();\n    }\n\n    addSite = (site) => {\n        this.props.addSite(site);\n    }\n\n    updateSite = (site) => {\n        this.props.updateSite(site);\n    }\n\n    deleteSite = (siteId) => {\n        this.props.deleteSite(siteId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Sites\"}\n                configElements={this.state.sites}\n                addItem={this.addSite}\n                updateItem={this.updateSite}\n                deleteItem={this.deleteSite}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sites: state.sites.sites,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getSites: () => {\n            dispatch(sitesActions.getSites());\n        },\n        addSite: (site) => {\n            dispatch(sitesActions.addSite(site));\n        },\n        updateSite: (site) => {\n            dispatch(sitesActions.updateSite(site));\n        },\n        deleteSite: (siteId) => {\n            dispatch(sitesActions.deleteSite(siteId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SiteList);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as servicesActions from \"../../../actions/services\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class ServiceList extends Component {\n    state = {\n        services: null,\n    }\n\n    componentDidMount() {\n        this.getServices();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.services !== prevProps.services) {\n            this.setState({\n                services: this.props.services\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getServices = () => {\n        this.props.getServices();\n    }\n\n    addService = (service) => {\n        this.props.addService(service);\n    }\n\n    updateService = (service) => {\n        this.props.updateService(service);\n    }\n\n    deleteService = (serviceId) => {\n        this.props.deleteService(serviceId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Services\"}\n                configElements={this.state.services}\n                addItem={this.addService}\n                updateItem={this.updateService}\n                deleteItem={this.deleteService}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        services: state.services.services,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getServices: () => {\n            dispatch(servicesActions.getServices());\n        },\n        addService: (service) => {\n            dispatch(servicesActions.addService(service));\n        },\n        updateService: (service) => {\n            dispatch(servicesActions.updateService(service));\n        },\n        deleteService: (serviceId) => {\n            dispatch(servicesActions.deleteService(serviceId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ServiceList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addUser(user){\n    return (dispatch) => {\n        dispatch(addUserStart());\n        return axios.post(api.addUserUrl(), user)\n            .then(response => {\n                dispatch(addUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addUserFail(error.message));\n            });\n    }\n}\n\nexport const addUserStart = () => ({\n    type: types.ADD_USER_START\n});\n\nexport const addUserSuccess = (response) => ({\n    type: types.ADD_USER_SUCCESS,\n    response\n});\n\nexport const addUserFail = (errorMsg) => ({\n    type: types.ADD_USER_FAIL,\n    errorMsg,\n});\n\nexport function updateUser(user){\n    return (dispatch) => {\n        dispatch(updateUserStart());\n        return axios.put(api.updateUserUrl(), user)\n            .then(response => {\n                dispatch(updateUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateUserFail(error.message));\n            });\n    }\n}\n\nexport const updateUserStart = () => ({\n    type: types.UPDATE_USER_START\n});\n\nexport const updateUserSuccess = (response) => ({\n    type: types.UPDATE_USER_SUCCESS,\n    response\n});\n\nexport const updateUserFail = (errorMsg) => ({\n    type: types.UPDATE_USER_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteUser(userId){\n    return (dispatch) => {\n        dispatch(deleteUserStart());\n        return axios.delete(api.deleteUserUrl(userId))\n            .then(response => {\n                dispatch(deleteUserSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteUserFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserStart = () => ({\n    type: types.DELETE_USER_START\n});\n\nexport const deleteUserSuccess = (response) => ({\n    type: types.DELETE_USER_SUCCESS,\n    response\n});\n\nexport const deleteUserFail = (errorMsg) => ({\n    type: types.DELETE_USER_FAIL,\n    errorMsg,\n});\n\nexport function getUsers(){\n    return (dispatch) => {\n        dispatch(getUsersStart());\n        return axios.get(api.getUsersUrl())\n            .then(response => {\n                dispatch(getUsersSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                // alert(JSON.parse(error))\n                dispatch(getUsersFail(error.message));\n            });\n    }\n}\n\nexport const getUsersStart = () => ({\n    type: types.GET_USERS_START\n});\n\nexport const getUsersSuccess = (response) => ({\n    type: types.GET_USERS_SUCCESS,\n    response\n});\n\nexport const getUsersFail = (errorMsg) => ({\n    type: types.GET_USERS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport Select from 'react-select';\n\nexport class UserItem extends Component {\n    state = {\n        item: {\n            id: null,\n            login: null,\n            password: null,\n            userPolicyId: null,\n            computerId: null\n        },\n        edit: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.state.item.id || !this.props.policies) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.login}\n                                    onChange={this.changeLogin}\n                                    placeholder=\"Login\"\n                                />\n                            ) : (\n                                this.state.item.login\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.password}\n                                    onChange={this.changePassword}\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n                        ) : (\n                            <div></div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <Select options={this.props.policies}\n                                        defaultValue={this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0]}\n                                        onChange={(policy) => {\n                                            this.changePolicy(policy);\n                                        }}\n                                />\n                            ) : (\n                                this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0].label\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div></div>\n                        ) : (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                {this.state.item.computerId}\n                            </div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => {\n                                            this.props.updateItem(this.state.item);\n                                            this.setState({\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Update\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-outline-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                item: this.props.item,\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            ) : (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                edit: true\n                                            });\n                                        }}\n                                    >\n                                        Edit\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-danger\"\n                                        onClick={() => this.props.deleteItem(this.state.item.id)}\n                                    >\n                                        Delete\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as usersActions from \"../../../actions/users\"\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserItem} from \"./userItem/index\";\nimport Select from \"react-select\";\n\nexport class UserList extends Component {\n    state = {\n        item: {\n            login: null,\n            password: null,\n            userPolicyId: null\n        },\n        users: null,\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n        this.getUsers();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.users !== prevProps.users) {\n            this.setState({\n                users: this.props.users\n            })\n        }\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    getUsers = () => {\n        this.props.getUsers();\n    }\n\n    addUser = (user) => {\n        this.props.addUser(user);\n    }\n\n    updateUser = (user) => {\n        this.props.updateUser(user);\n    }\n\n    deleteUser = (userId) => {\n        this.props.deleteUser(userId);\n    }\n\n    render() {\n        if (!this.state.users || !this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Users\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.login}\n                                            onChange={this.changeLogin}\n                                            placeholder=\"Login\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.password}\n                                            onChange={this.changePassword}\n                                            placeholder=\"Password\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <Select options={this.state.policies}\n                                                defaultValue={this.state.policies[0]}\n                                                onChange={(policy) => {\n                                                    this.changePolicy(policy);\n                                                }}\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.addUser(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.users.map((user, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserItem\n                                                        item={user}\n                                                        policies={this.state.policies}\n                                                        updateItem={this.updateUser}\n                                                        deleteItem={this.deleteUser}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies,\n        users: state.users.users,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(usersActions.getUsers());\n        },\n        addUser: (user) => {\n            dispatch(usersActions.addUser(user));\n        },\n        updateUser: (user) => {\n            dispatch(usersActions.updateUser(user));\n        },\n        deleteUser: (userId) => {\n            dispatch(usersActions.deleteUser(userId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserList);\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyItem extends Component {\n    state = {\n        item: {\n            id: null,\n            name: null,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: {\n                id: this.props.item.value,\n                name: this.props.item.label\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: {\n                    id: this.props.item.value,\n                    name: this.props.item.label\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.item.name}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            <Link className=\"btn btn-md btn-primary\" to={\"/userPolicy/\" + this.state.item.id}>Edit</Link>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.state.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserPolicyItem} from \"./userPolicyItem/index\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyList extends Component {\n    state = {\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    deletePolicy = (policyId) => {\n        this.props.deletePolicy(policyId);\n    }\n\n    render() {\n        if (!this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    User Policies\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.policies.map((policy, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserPolicyItem\n                                                        item={policy}\n                                                        deleteItem={this.deletePolicy}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"float\" to=\"/userPolicy\">\n                        <i color=\"primary\" className=\"material-icons\">add</i>\n                    </Link>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePolicy: (policyId) => {\n            dispatch(userPolicyActions.deleteUserPolicy(policyId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicyList);\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class ComputerPolicyItem extends Component {\n    state = {\n        item: {\n            id: null,\n            name: null,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: {\n                id: this.props.item.value,\n                name: this.props.item.label\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: {\n                    id: this.props.item.value,\n                    name: this.props.item.label\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.item.name}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            <Link className=\"btn btn-md btn-primary\" to={\"/computerPolicy/\" + this.state.item.id}>Edit</Link>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.state.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as computerPolicyActions from \"../../../actions/computerPolicy\"\nimport {ComputerPolicyItem} from \"./computerPolicyItem/index\";\nimport { Link } from \"react-router-dom\";\n\nexport class ComputerPolicyList extends Component {\n    state = {\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    deletePolicy = (policyId) => {\n        this.props.deletePolicy(policyId);\n    }\n\n    render() {\n        if (!this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Computer Policies\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.policies.map((policy, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ComputerPolicyItem\n                                                        item={policy}\n                                                        deleteItem={this.deletePolicy}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"float\" to=\"/computerPolicy\">\n                        <i color=\"primary\" className=\"material-icons\">add</i>\n                    </Link>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.computerPolicy.computerPolicies\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePolicy: (policyId) => {\n            dispatch(computerPolicyActions.deleteComputerPolicy(policyId));\n        },\n        getPolicies: () => {\n            dispatch(computerPolicyActions.getComputerPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicyList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function updateComputer(computer){\n    return (dispatch) => {\n        dispatch(updateComputerStart());\n        return axios.put(api.updateComputerUrl(), computer)\n            .then(response => {\n                dispatch(updateComputerSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateComputerFail(error.message));\n            });\n    }\n}\n\nexport const updateComputerStart = () => ({\n    type: types.UPDATE_COMPUTER_START\n});\n\nexport const updateComputerSuccess = (response) => ({\n    type: types.UPDATE_COMPUTER_SUCCESS,\n    response\n});\n\nexport const updateComputerFail = (errorMsg) => ({\n    type: types.UPDATE_COMPUTER_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteComputer(computerId){\n    return (dispatch) => {\n        dispatch(deleteComputerStart());\n        return axios.delete(api.deleteComputerUrl(computerId))\n            .then(response => {\n                dispatch(deleteComputerSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteComputerFail(error.message));\n            });\n    }\n}\n\nexport const deleteComputerStart = () => ({\n    type: types.DELETE_COMPUTER_START\n});\n\nexport const deleteComputerSuccess = (response) => ({\n    type: types.DELETE_COMPUTER_SUCCESS,\n    response\n});\n\nexport const deleteComputerFail = (errorMsg) => ({\n    type: types.DELETE_COMPUTER_FAIL,\n    errorMsg,\n});\n\nexport function getComputers(){\n    return (dispatch) => {\n        dispatch(getComputersStart());\n        return axios.get(api.getComputersUrl())\n            .then(response => {\n                dispatch(getComputersSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                // alert(JSON.parse(error))\n                dispatch(getComputersFail(error.message));\n            });\n    }\n}\n\nexport const getComputersStart = () => ({\n    type: types.GET_COMPUTERS_START\n});\n\nexport const getComputersSuccess = (response) => ({\n    type: types.GET_COMPUTERS_SUCCESS,\n    response\n});\n\nexport const getComputersFail = (errorMsg) => ({\n    type: types.GET_COMPUTERS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport Select from 'react-select';\n\nexport class ComputerItem extends Component {\n\n    changePolicy = (policy) => {\n        this.props.updateItem({\n            id: this.props.item.id,\n            computerPolicyId: policy.value\n        });\n    }\n\n    render() {\n        if (!this.props.item.id || !this.props.policies) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.localId}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.computerName}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.localUserName}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.ip}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            <Select options={this.props.policies}\n                                defaultValue={this.props.policies.filter(policy => policy.value === this.props.item.computerPolicyId)[0]}\n                                onChange={(policy) => {\n                                    this.changePolicy(policy);\n                                }}\n                            />\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.props.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as computersActions from \"../../../actions/computers\"\nimport * as computerPolicyActions from \"../../../actions/computerPolicy\"\nimport {ComputerItem} from \"./computerItem/index\";\n\nexport class ComputerList extends Component {\n    state = {\n        computers: null,\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n        this.getComputers();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.computers !== prevProps.computers) {\n            this.setState({\n                computers: this.props.computers\n            })\n        }\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                computerPolicyId: policy.value\n            }\n        }));\n    }\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    getComputers = () => {\n        this.props.getComputers();\n    }\n\n    updateComputer = (computer) => {\n        this.props.updateComputer(computer);\n    }\n\n    deleteComputer = (computerId) => {\n        this.props.deleteComputer(computerId);\n    }\n\n    render() {\n        if (!this.state.computers || !this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Computers\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.computers.map((computer, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ComputerItem\n                                                        item={computer}\n                                                        policies={this.state.policies}\n                                                        updateItem={this.updateComputer}\n                                                        deleteItem={this.deleteComputer}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.computerPolicy.computerPolicies,\n        computers: state.computers.computers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getComputers: () => {\n            dispatch(computersActions.getComputers());\n        },\n        updateComputer: (computer) => {\n            dispatch(computersActions.updateComputer(computer));\n        },\n        deleteComputer: (computerId) => {\n            dispatch(computersActions.deleteComputer(computerId));\n        },\n        getPolicies: () => {\n            dispatch(computerPolicyActions.getComputerPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function getReports(reportFilter){\n    return (dispatch) => {\n        dispatch(getReportsStart());\n        return axios.post(api.getReportsUrl(), reportFilter)\n            .then(response => {\n                dispatch(getReportsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getReportsFail(error.message));\n            });\n    }\n}\n\nexport const getReportsStart = () => ({\n    type: types.GET_REPORTS_START\n});\n\nexport const getReportsSuccess = (response) => ({\n    type: types.GET_REPORTS_SUCCESS,\n    response\n});\n\nexport const getReportsFail = (errorMsg) => ({\n    type: types.GET_REPORTS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\n\nexport class ReportItem extends Component {\n\n    render() {\n        if (!this.props.item.id) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.props.item.userName}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.props.item.computerName}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.props.item.loginTime}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.props.item.logoutTime}\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as reportsActions from \"../../../actions/reports\"\nimport * as computersActions from \"../../../actions/computers\"\nimport * as usersActions from \"../../../actions/users\"\nimport {ReportItem} from \"./reportItem/index\";\n\nexport class ReportList extends Component {\n    state = {\n        reportFilter: {\n            userId: 1,\n            computerId: 1,\n            loginTime: null,\n            logoutTime: null\n        }\n    }\n    componentDidMount() {\n        this.getComputers();\n        this.getUsers();\n        this.getReports();\n    }\n\n    getComputers = () => {\n        this.props.getComputers();\n    }\n\n    getUsers = () => {\n        this.props.getUsers();\n    }\n\n    getReports = () => {\n        this.props.getReports(this.state.reportFilter);\n    }\n\n    render() {\n        if (!this.props.computers || !this.props.users) {\n            return (\n                <div className=\"container\">\n                    <img alt=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Reports\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.props.reports ? (\n                                            this.props.reports.map((report, i) => {\n                                                return (\n                                                    <div key={i}>\n                                                        <ReportItem\n                                                            item={report}\n                                                        />\n                                                    </div>\n                                                )\n                                            })\n                                        ) : (\n                                            <div/>\n                                        )}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        computers: state.computers.computers,\n        users: state.users.users,\n        reports: state.reports.reports\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getComputers: () => {\n            dispatch(computersActions.getComputers());\n        },\n        getUsers: () => {\n            dispatch(usersActions.getUsers());\n        },\n        getReports: (reportFilter) => {\n            dispatch(reportsActions.getReports(reportFilter))\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReportList);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nimport AppNavbarHeader from '../components/appNavbarHeader';\nimport ComputerPolicy from '../components/computerPolicy';\nimport UserPolicy from '../components/userPolicy';\nimport app from '../App'\nimport AppList from \"../components/lists/appList\";\nimport SiteList from \"../components/lists/siteList\";\nimport ServiceList from \"../components/lists/serviceList\";\nimport UserList from \"../components/lists/userList/index\";\nimport UserPolicyList from \"../components/lists/userPolicyList\";\nimport ComputerPolicyList from \"../components/lists/computerPolicyList\";\nimport ComputerList from \"../components/lists/computerList\";\nimport ReportList from \"../components/lists/reportList\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbarHeader/>\n                <Route exact path=\"/\" component={app}/>\n                <Route path=\"/computerPolicy/:computerPolicyId?\" component={ComputerPolicy}/>\n                <Route path=\"/userPolicy/:userPolicyId?\" component={UserPolicy}/>\n                <Route path=\"/applications\" component={AppList}/>\n                <Route path=\"/sites\" component={SiteList}/>\n                <Route path=\"/services\" component={ServiceList}/>\n                <Route path=\"/users\" component={UserList}/>\n                <Route path=\"/computers\" component={ComputerList}/>\n                <Route path=\"/userPolicies\" component={UserPolicyList}/>\n                <Route path=\"/computerPolicies\" component={ComputerPolicyList}/>\n                <Route path=\"/reports\" component={ReportList}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\nimport store from './store'\nimport App from './containers/app';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}