{"version":3,"sources":["constants/actionsConstants.js","reducers/computerPolicy.js","reducers/userPolicy.js","reducers/applications.js","reducers/sites.js","reducers/services.js","reducers/users.js","reducers/computers.js","reducers/index.js","store.js","components/appNavbarHeader/index.js","constants/apiEndpoints.js","actions/computerPolicy.js","actions/services.js","components/computerPolicy/index.js","actions/userPolicy.js","actions/applications.js","actions/sites.js","components/userPolicy/index.js","App.js","components/lists/configElementList/configElementItem/index.js","components/lists/configElementList/index.js","components/lists/appList/index.js","components/lists/siteList/index.js","components/lists/serviceList/index.js","actions/users.js","components/lists/userList/userItem/index.js","components/lists/userList/index.js","components/lists/userPolicyList/userPolicyItem/index.js","components/lists/userPolicyList/index.js","components/lists/computerPolicyList/computerPolicyItem/index.js","components/lists/computerPolicyList/index.js","actions/computers.js","components/lists/computerList/computerItem/index.js","components/lists/computerList/index.js","containers/app.js","index.js","logo.svg"],"names":["GET_USER_POLICY_START","GET_USER_POLICY_SUCCESS","GET_USER_POLICY_FAIL","GET_USER_POLICIES_START","GET_USER_POLICIES_SUCCESS","GET_USER_POLICIES_FAIL","UPDATE_USER_POLICY_START","UPDATE_USER_POLICY_SUCCESS","UPDATE_USER_POLICY_FAIL","ADD_USER_POLICY_START","ADD_USER_POLICY_SUCCESS","ADD_USER_POLICY_FAIL","DELETE_USER_POLICY_START","DELETE_USER_POLICY_SUCCESS","DELETE_USER_POLICY_FAIL","GET_COMPUTER_POLICY_START","GET_COMPUTER_POLICY_SUCCESS","GET_COMPUTER_POLICY_FAIL","GET_COMPUTER_POLICIES_START","GET_COMPUTER_POLICIES_SUCCESS","GET_COMPUTER_POLICIES_FAIL","UPDATE_COMPUTER_POLICY_START","UPDATE_COMPUTER_POLICY_SUCCESS","UPDATE_COMPUTER_POLICY_FAIL","ADD_COMPUTER_POLICY_START","ADD_COMPUTER_POLICY_SUCCESS","ADD_COMPUTER_POLICY_FAIL","DELETE_COMPUTER_POLICY_START","DELETE_COMPUTER_POLICY_SUCCESS","DELETE_COMPUTER_POLICY_FAIL","GET_APPLICATIONS_START","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ADD_APPLICATION_START","ADD_APPLICATION_SUCCESS","ADD_APPLICATION_FAIL","DELETE_APPLICATION_START","DELETE_APPLICATION_SUCCESS","DELETE_APPLICATION_FAIL","UPDATE_APPLICATION_START","UPDATE_APPLICATION_SUCCESS","UPDATE_APPLICATION_FAIL","GET_SITES_START","GET_SITES_SUCCESS","GET_SITES_FAIL","ADD_SITE_START","ADD_SITE_SUCCESS","ADD_SITE_FAIL","DELETE_SITE_START","DELETE_SITE_SUCCESS","DELETE_SITE_FAIL","UPDATE_SITE_START","UPDATE_SITE_SUCCESS","UPDATE_SITE_FAIL","GET_SERVICES_START","GET_SERVICES_SUCCESS","GET_SERVICES_FAIL","ADD_SERVICE_START","ADD_SERVICE_SUCCESS","ADD_SERVICE_FAIL","DELETE_SERVICE_START","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAIL","UPDATE_SERVICE_START","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_FAIL","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAIL","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","GET_COMPUTERS_START","GET_COMPUTERS_SUCCESS","GET_COMPUTERS_FAIL","DELETE_COMPUTER_START","DELETE_COMPUTER_SUCCESS","DELETE_COMPUTER_FAIL","UPDATE_COMPUTER_START","UPDATE_COMPUTER_SUCCESS","UPDATE_COMPUTER_FAIL","initialState","errorMsg","computerPolicy","computerPolicies","updateComputerPolicyInProgress","getComputerPolicyInProgress","getComputerPoliciesInProgress","addComputerPolicyInProgress","deleteComputerPolicyInProgress","userPolicy","userPolicies","updateUserPolicyInProgress","getUserPolicyInProgress","getUserPoliciesInProgress","addUserPolicyInProgress","deleteUserPolicyInProgress","applications","addApplicationInProgress","getApplicationsInProgress","deleteApplicationInProgress","updateApplicationInProgress","sites","addSiteInProgress","getSitesInProgress","deleteSiteInProgress","updateSiteInProgress","services","addServiceInProgress","getServicesInProgress","deleteServiceInProgress","updateServiceInProgress","users","addUserInProgress","getUsersInProgress","deleteUserInProgress","updateUserInProgress","computers","getComputersInProgress","deleteComputerInProgress","updateComputerInProgress","appReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","toConsumableArray","filter","value","response","data","concat","app","id","map","label","site","user","login","password","userPolicyId","computerId","localId","computerName","localUserName","ip","computerPolicyId","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createHashHistory","AppNavbarHeader","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","click","console","log","push","pathname","inherits","createClass","key","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","className","NavDropdown_default","title","Item","Link","Component","connect","dispatch","API_URL","process","REACT_APP_STAGE","getUserPoliciesUrl","getUserPolicyUrl","policyId","updateUserPolicyUrl","addUserPolicyUrl","deleteUserPolicyUrl","getComputerPoliciesUrl","getComputerPolicyUrl","updateComputerPolicyUrl","addComputerPolicyUrl","deleteComputerPolicyUrl","getUsersUrl","updateUserUrl","addUserUrl","deleteUserUrl","userId","getComputersUrl","updateComputerUrl","deleteComputerUrl","getApplicationsUrl","updateApplicationUrl","addApplicationUrl","deleteApplicationUrl","applicationId","getSitesUrl","updateSiteUrl","addSiteUrl","deleteSiteUrl","sitesId","getServicesUrl","updateServiceUrl","addServiceUrl","deleteServiceUrl","serviceId","getComputerPolicies","getComputerPoliciesStart","axios","get","api","then","getComputerPoliciesSuccess","catch","error","alert","JSON","parse","request","reason","getComputerPoliciesFail","message","updateComputerPolicyStart","updateComputerPolicySuccess","updateComputerPolicyFail","addComputerPolicyStart","addComputerPolicySuccess","addComputerPolicyFail","deleteComputerPolicyStart","deleteComputerPolicySuccess","deleteComputerPolicyFail","getComputerPolicyStart","getComputerPolicySuccess","getComputerPolicyFail","addServiceStart","addServiceSuccess","addServiceFail","updateServiceStart","updateServiceSuccess","updateServiceFail","deleteServiceStart","deleteServiceSuccess","deleteServiceFail","getServices","getServicesStart","getServicesSuccess","getServicesFail","ComputerPolicy","policy","name","windowsServices","getPolicy","props","setPolicyName","setState","prevState","setBannedServices","savePolicy","match","params","updatePolicy","addPolicy","prevProps","_this2","src","defaultValue","onChange","e","target","placeholder","react_select_esm","isMulti","options","item","i","to","onClick","put","post","serviceActions","getUserPolicies","getUserPoliciesStart","getUserPoliciesSuccess","getUserPoliciesFail","updateUserPolicyStart","updateUserPolicySuccess","updateUserPolicyFail","addUserPolicyStart","addUserPolicySuccess","addUserPolicyFail","deleteUserPolicyStart","deleteUserPolicySuccess","deleteUserPolicyFail","getUserPolicyStart","getUserPolicySuccess","getUserPolicyFail","addApplicationStart","addApplicationSuccess","addApplicationFail","updateApplicationStart","updateApplicationSuccess","updateApplicationFail","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFail","getApplications","getApplicationsStart","getApplicationsSuccess","getApplicationsFail","addSiteStart","addSiteSuccess","addSiteFail","updateSiteStart","updateSiteSuccess","updateSiteFail","deleteSiteStart","deleteSiteSuccess","deleteSiteFail","getSites","getSitesStart","getSitesSuccess","getSitesFail","UserPolicy","bannedApps","bannedSites","setBannedApps","apps","setBannedSites","applicationActions","siteActions","logo","alt","rel","ConfigElementItem","edit","changeLabel","changeValue","updateItem","deleteItem","ConfigElementList","configElements","addItem","configElement","configElementItem_ConfigElementItem","AppList","addApplication","application","updateApplication","deleteApplication","configElementList_ConfigElementList","applicationsActions","delete","SiteList","addSite","updateSite","deleteSite","siteId","sitesActions","ServiceList","addService","service","updateService","deleteService","servicesActions","addUserStart","addUserSuccess","addUserFail","updateUserStart","updateUserSuccess","updateUserFail","deleteUserStart","deleteUserSuccess","deleteUserFail","getUsersStart","getUsersSuccess","getUsersFail","UserItem","changeLogin","changePassword","changePolicy","policies","UserList","getPolicies","getUsers","addUser","updateUser","deleteUser","userItem_UserItem","usersActions","userPolicyActions","UserPolicyItem","UserPolicyList","deletePolicy","userPolicyItem_UserPolicyItem","color","ComputerPolicyItem","ComputerPolicyList","computerPolicyItem_ComputerPolicyItem","computerPolicyActions","updateComputerStart","updateComputerSuccess","updateComputerFail","deleteComputerStart","deleteComputerSuccess","deleteComputerFail","getComputersStart","getComputersSuccess","getComputersFail","ComputerItem","ComputerList","getComputers","updateComputer","computer","deleteComputer","computerItem_ComputerItem","computersActions","App","appNavbarHeader","Route","exact","path","component","ReactDOM","render","es","HashRouter","containers_app","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e93cc956.chunk.js","sourcesContent":["/* Login */\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGOUT_START = 'LOGOUT_START';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\n/* UserPolicy */\nexport const GET_USER_POLICY_START = 'GET_USER_POLICY_START';\nexport const GET_USER_POLICY_SUCCESS = 'GET_USER_POLICY_SUCCESS';\nexport const GET_USER_POLICY_FAIL = 'GET_USER_POLICY_FAIL';\nexport const GET_USER_POLICIES_START = 'GET_USER_POLICIES_START';\nexport const GET_USER_POLICIES_SUCCESS = 'GET_USER_POLICIES_SUCCESS';\nexport const GET_USER_POLICIES_FAIL = 'GET_USER_POLICIES_FAIL';\nexport const UPDATE_USER_POLICY_START = 'UPDATE_USER_POLICY_START';\nexport const UPDATE_USER_POLICY_SUCCESS = 'UPDATE_USER_POLICY_SUCCESS';\nexport const UPDATE_USER_POLICY_FAIL = 'UPDATE_USER_POLICY_FAIL';\nexport const ADD_USER_POLICY_START = 'ADD_USER_POLICY_START';\nexport const ADD_USER_POLICY_SUCCESS = 'ADD_USER_POLICY_SUCCESS';\nexport const ADD_USER_POLICY_FAIL = 'ADD_USER_POLICY_FAIL';\nexport const DELETE_USER_POLICY_START = 'DELETE_USER_POLICY_START';\nexport const DELETE_USER_POLICY_SUCCESS = 'DELETE_USER_POLICY_SUCCESS';\nexport const DELETE_USER_POLICY_FAIL = 'DELETE_USER_POLICY_FAIL';\n\n/* ComputerPolicy */\nexport const GET_COMPUTER_POLICY_START = 'GET_COMPUTER_POLICY_START';\nexport const GET_COMPUTER_POLICY_SUCCESS = 'GET_COMPUTER_POLICY_SUCCESS';\nexport const GET_COMPUTER_POLICY_FAIL = 'GET_COMPUTER_POLICY_FAIL';\nexport const GET_COMPUTER_POLICIES_START = 'GET_COMPUTER_POLICIES_START';\nexport const GET_COMPUTER_POLICIES_SUCCESS = 'GET_COMPUTER_POLICIES_SUCCESS';\nexport const GET_COMPUTER_POLICIES_FAIL = 'GET_COMPUTER_POLICIES_FAIL';\nexport const UPDATE_COMPUTER_POLICY_START = 'UPDATE_COMPUTER_POLICY_START';\nexport const UPDATE_COMPUTER_POLICY_SUCCESS = 'UPDATE_COMPUTER_POLICY_SUCCESS';\nexport const UPDATE_COMPUTER_POLICY_FAIL = 'UPDATE_COMPUTER_POLICY_FAIL';\nexport const ADD_COMPUTER_POLICY_START = 'ADD_COMPUTER_POLICY_START';\nexport const ADD_COMPUTER_POLICY_SUCCESS = 'ADD_COMPUTER_POLICY_SUCCESS';\nexport const ADD_COMPUTER_POLICY_FAIL = 'ADD_COMPUTER_POLICY_FAIL';\nexport const DELETE_COMPUTER_POLICY_START = 'DELETE_COMPUTER_POLICY_START';\nexport const DELETE_COMPUTER_POLICY_SUCCESS = 'DELETE_COMPUTER_POLICY_SUCCESS';\nexport const DELETE_COMPUTER_POLICY_FAIL = 'DELETE_COMPUTER_POLICY_FAIL';\n\n/* Applications */\nexport const GET_APPLICATIONS_START = 'GET_APPLICATIONS_START';\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\nexport const ADD_APPLICATION_START = 'ADD_APPLICATION_START';\nexport const ADD_APPLICATION_SUCCESS = 'ADD_APPLICATION_SUCCESS';\nexport const ADD_APPLICATION_FAIL = 'ADD_APPLICATION_FAIL';\nexport const DELETE_APPLICATION_START = 'DELETE_APPLICATION_START';\nexport const DELETE_APPLICATION_SUCCESS = 'DELETE_APPLICATION_SUCCESS';\nexport const DELETE_APPLICATION_FAIL = 'DELETE_APPLICATION_FAIL';\nexport const UPDATE_APPLICATION_START = 'UPDATE_APPLICATION_START';\nexport const UPDATE_APPLICATION_SUCCESS = 'UPDATE_APPLICATION_SUCCESS';\nexport const UPDATE_APPLICATION_FAIL = 'UPDATE_APPLICATION_FAIL';\n\n/* Sites */\nexport const GET_SITES_START = 'GET_SITES_START';\nexport const GET_SITES_SUCCESS = 'GET_SITES_SUCCESS';\nexport const GET_SITES_FAIL = 'GET_SITES_FAIL';\nexport const ADD_SITE_START = 'ADD_SITE_START';\nexport const ADD_SITE_SUCCESS = 'ADD_SITE_SUCCESS';\nexport const ADD_SITE_FAIL = 'ADD_SITE_FAIL';\nexport const DELETE_SITE_START = 'DELETE_SITE_START';\nexport const DELETE_SITE_SUCCESS = 'DELETE_SITE_SUCCESS';\nexport const DELETE_SITE_FAIL = 'DELETE_SITE_FAIL';\nexport const UPDATE_SITE_START = 'UPDATE_SITE_START';\nexport const UPDATE_SITE_SUCCESS = 'UPDATE_SITE_SUCCESS';\nexport const UPDATE_SITE_FAIL = 'UPDATE_SITE_FAIL';\n\n/* Services */\nexport const GET_SERVICES_START = 'GET_SERVICES_START';\nexport const GET_SERVICES_SUCCESS = 'GET_SERVICES_SUCCESS';\nexport const GET_SERVICES_FAIL = 'GET_SERVICES_FAIL';\nexport const ADD_SERVICE_START = 'ADD_SERVICE_START';\nexport const ADD_SERVICE_SUCCESS = 'ADD_SERVICE_SUCCESS';\nexport const ADD_SERVICE_FAIL = 'ADD_SERVICE_FAIL';\nexport const DELETE_SERVICE_START = 'DELETE_SERVICE_START';\nexport const DELETE_SERVICE_SUCCESS = 'DELETE_SERVICE_SUCCESS';\nexport const DELETE_SERVICE_FAIL = 'DELETE_SERVICE_FAIL';\nexport const UPDATE_SERVICE_START = 'UPDATE_SERVICE_START';\nexport const UPDATE_SERVICE_SUCCESS = 'UPDATE_SERVICE_SUCCESS';\nexport const UPDATE_SERVICE_FAIL = 'UPDATE_SERVICE_FAIL';\n\n/* Users */\nexport const GET_USERS_START = 'GET_USERS_START';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\nexport const ADD_USER_START = 'ADD_USER_START';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\nexport const DELETE_USER_START = 'DELETE_USER_START';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\nexport const UPDATE_USER_START = 'UPDATE_USER_START';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\n\n/* Computers */\nexport const GET_COMPUTERS_START = 'GET_COMPUTERS_START';\nexport const GET_COMPUTERS_SUCCESS = 'GET_COMPUTERS_SUCCESS';\nexport const GET_COMPUTERS_FAIL = 'GET_COMPUTERS_FAIL';\nexport const DELETE_COMPUTER_START = 'DELETE_COMPUTER_START';\nexport const DELETE_COMPUTER_SUCCESS = 'DELETE_COMPUTER_SUCCESS';\nexport const DELETE_COMPUTER_FAIL = 'DELETE_COMPUTER_FAIL';\nexport const UPDATE_COMPUTER_START = 'UPDATE_COMPUTER_START';\nexport const UPDATE_COMPUTER_SUCCESS = 'UPDATE_COMPUTER_SUCCESS';\nexport const UPDATE_COMPUTER_FAIL = 'UPDATE_COMPUTER_FAIL';","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computerPolicy: null,\n    computerPolicies: null,\n    updateComputerPolicyInProgress: false,\n    getComputerPolicyInProgress: false,\n    getComputerPoliciesInProgress: false,\n    addComputerPolicyInProgress: false,\n    deleteComputerPolicyInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.UPDATE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateComputerPolicyInProgress: true\n            };\n        case types.UPDATE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                updateComputerPolicyInProgress: false,\n            };\n        case types.UPDATE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateComputerPolicyInProgress: false,\n            };\n        case types.ADD_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addComputerPolicyInProgress: true\n            };\n        case types.ADD_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addComputerPolicyInProgress: false,\n            };\n        case types.ADD_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addComputerPolicyInProgress: false,\n            };\n        case types.DELETE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteComputerPolicyInProgress: true\n            };\n        case types.DELETE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicies: [...state.computerPolicies.filter(computerPolicy => computerPolicy.value !== action.response.data)],\n                deleteComputerPolicyInProgress: false,\n            };\n        case types.DELETE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPolicyInProgress: true\n            };\n        case types.GET_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICIES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPoliciesInProgress: true\n            };\n        case types.GET_COMPUTER_POLICIES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicies: action.response.data,\n                getComputerPoliciesInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICIES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPoliciesInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    userPolicy: null,\n    userPolicies: null,\n    updateUserPolicyInProgress: false,\n    getUserPolicyInProgress: false,\n    getUserPoliciesInProgress: false,\n    addUserPolicyInProgress: false,\n    deleteUserPolicyInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.UPDATE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: true\n            };\n        case types.UPDATE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: false,\n            };\n        case types.UPDATE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: true\n            };\n        case types.ADD_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserPolicyInProgress: true\n            };\n        case types.DELETE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: [...state.userPolicies.filter(userPolicy => userPolicy.value !== action.response.data)],\n                deleteUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPolicyInProgress: true\n            };\n        case types.GET_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicy: action.response.data,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICIES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPoliciesInProgress: true\n            };\n        case types.GET_USER_POLICIES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: action.response.data,\n                getUserPoliciesInProgress: false,\n            };\n        case types.GET_USER_POLICIES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPoliciesInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    applications: null,\n    addApplicationInProgress: false,\n    getApplicationsInProgress: false,\n    deleteApplicationInProgress: false,\n    updateApplicationInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: true\n            };\n        case types.ADD_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: false,\n                applications: [...state.applications, action.response.data]\n            };\n        case types.ADD_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addApplicationInProgress: false,\n            };\n        case types.GET_APPLICATIONS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getApplicationsInProgress: true\n            };\n        case types.GET_APPLICATIONS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: action.response.data,\n                getApplicationsInProgress: false,\n            };\n        case types.GET_APPLICATIONS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getApplicationsInProgress: false,\n            };\n        case types.DELETE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteApplicationInProgress: true\n            };\n        case types.DELETE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.filter(app => app.id !== action.response.data)],\n                deleteApplicationInProgress: false,\n            };\n        case types.DELETE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateApplicationInProgress: true\n            };\n        case types.UPDATE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateApplicationInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    sites: null,\n    addSiteInProgress: false,\n    getSitesInProgress: false,\n    deleteSiteInProgress: false,\n    updateSiteInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: true\n            };\n        case types.ADD_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: false,\n                sites: [...state.sites, action.response.data]\n            };\n        case types.ADD_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addSiteInProgress: false,\n            };\n        case types.GET_SITES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getSitesInProgress: true\n            };\n        case types.GET_SITES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: action.response.data,\n                getSitesInProgress: false,\n            };\n        case types.GET_SITES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getSitesInProgress: false,\n            };\n        case types.DELETE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteSiteInProgress: true\n            };\n        case types.DELETE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.filter(site => site.id !== action.response.data)],\n                deleteSiteInProgress: false,\n            };\n        case types.DELETE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateSiteInProgress: true\n            };\n        case types.UPDATE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.map(site => {\n                    if (site.id === action.response.data.id) {\n                        site.label = action.response.data.label;\n                        site.value = action.response.data.value;\n                    }\n                    return site;\n                })],\n                updateSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateSiteInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    services: null,\n    addServiceInProgress: false,\n    getServicesInProgress: false,\n    deleteServiceInProgress: false,\n    updateServiceInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addServiceInProgress: true\n            };\n        case types.ADD_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addServiceInProgress: false,\n                services: [...state.services, action.response.data]\n            };\n        case types.ADD_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addServiceInProgress: false,\n            };\n        case types.GET_SERVICES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getServicesInProgress: true\n            };\n        case types.GET_SERVICES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: action.response.data,\n                getServicesInProgress: false,\n            };\n        case types.GET_SERVICES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getServicesInProgress: false,\n            };\n        case types.DELETE_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteServiceInProgress: true\n            };\n        case types.DELETE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: [...state.services.filter(app => app.id !== action.response.data)],\n                deleteServiceInProgress: false,\n            };\n        case types.DELETE_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteServiceInProgress: false,\n            };\n        case types.UPDATE_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateServiceInProgress: true\n            };\n        case types.UPDATE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: [...state.services.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateServiceInProgress: false,\n            };\n        case types.UPDATE_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateServiceInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    users: null,\n    addUserInProgress: false,\n    getUsersInProgress: false,\n    deleteUserInProgress: false,\n    updateUserInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: true\n            };\n        case types.ADD_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: false,\n                users: [...state.users, action.response.data]\n            };\n        case types.ADD_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserInProgress: false,\n            };\n        case types.GET_USERS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUsersInProgress: true\n            };\n        case types.GET_USERS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: action.response.data,\n                getUsersInProgress: false,\n            };\n        case types.GET_USERS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUsersInProgress: false,\n            };\n        case types.DELETE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserInProgress: true\n            };\n        case types.DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.filter(app => app.id !== action.response.data)],\n                deleteUserInProgress: false,\n            };\n        case types.DELETE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserInProgress: false,\n            };\n        case types.UPDATE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserInProgress: true\n            };\n        case types.UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.map(user => {\n                    if (user.id === action.response.data.id) {\n                        user.login = action.response.data.login;\n                        user.password = action.response.data.password;\n                        user.userPolicyId = action.response.data.userPolicyId;\n                        user.computerId = action.response.data.computerId;\n                    }\n                    return user;\n                })],\n                updateUserInProgress: false,\n            };\n        case types.UPDATE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computers: null,\n    getComputersInProgress: false,\n    deleteComputerInProgress: false,\n    updateComputerInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.GET_COMPUTERS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputersInProgress: true\n            };\n        case types.GET_COMPUTERS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computers: action.response.data,\n                getComputersInProgress: false,\n            };\n        case types.GET_COMPUTERS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputersInProgress: false,\n            };\n        case types.DELETE_COMPUTER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteComputerInProgress: true\n            };\n        case types.DELETE_COMPUTER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computers: [...state.computers.filter(app => app.id !== action.response.data)],\n                deleteComputerInProgress: false,\n            };\n        case types.DELETE_COMPUTER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteComputerInProgress: false,\n            };\n        case types.UPDATE_COMPUTER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateComputerInProgress: true\n            };\n        case types.UPDATE_COMPUTER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computers: [...state.computers.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.localId = action.response.data.localId;\n                        app.computerName = action.response.data.computerName;\n                        app.localUserName = action.response.data.localUserName;\n                        app.ip = action.response.data.ip;\n                        app.computerPolicyId = action.response.data.computerPolicyId;\n                    }\n                    return app;\n                })],\n                updateComputerInProgress: false,\n            };\n        case types.UPDATE_COMPUTER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateComputerInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport computerPolicy from './computerPolicy';\nimport userPolicy from './userPolicy';\nimport applications from './applications';\nimport sites from './sites';\nimport services from './services';\nimport users from './users';\nimport computers from './computers';\n\nconst appReducer = combineReducers({\n    computerPolicy,\n    userPolicy,\n    applications,\n    sites,\n    services,\n    users,\n    computers\n});\nconst rootReducer = (state, action) => {\n    if(action.type === 'LOGOUT'){\n        state = undefined;\n    }\n    return appReducer(state, action);\n}\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const history = createHashHistory();\n\nexport default store;\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { history } from '../../store'\n\n\nexport class AppNavbarHeader extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    click = () => {\n        console.log(\"fsg\");\n        history.push({pathname: \"/userPolicy\"})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Access system</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#/users\">Users</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/userPolicies\">User policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Computer\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#/computers\">Computers</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/computerPolicies\">Computer policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <Nav.Link href=\"#/applications\">Applications</Nav.Link>\n                        <Nav.Link href=\"#/sites\">Sites</Nav.Link>\n                        <Nav.Link href=\"#/services\">Services</Nav.Link>\n                    </Nav>\n                    {/*<Form inline>*/}\n                        {/*<FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>*/}\n                        {/*<Button variant=\"outline-success\">Search</Button>*/}\n                    {/*</Form>*/}\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppNavbarHeader);\n","var API_URL = \"\";\n\nprocess.env.REACT_APP_STAGE === 'dev'\n    ? API_URL = 'http://localhost:8080/api'\n    : API_URL = '/api'\n\n/* User Policy */\nexport const getUserPoliciesUrl = () => {\n    return API_URL + \"/userPolicies\";\n}\n\nexport const getUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\nexport const updateUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const addUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const deleteUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\n/* Computer Policy */\nexport const getComputerPoliciesUrl = () => {\n    return API_URL + \"/computerPolicies\";\n}\n\nexport const getComputerPolicyUrl = (policyId) => {\n    return API_URL + \"/computerPolicy/\" + policyId;\n}\n\nexport const updateComputerPolicyUrl = () => {\n    return API_URL + \"/computerPolicy\";\n}\n\nexport const addComputerPolicyUrl = () => {\n    return API_URL + \"/computerPolicy\";\n}\n\nexport const deleteComputerPolicyUrl = (policyId) => {\n    return API_URL + \"/computerPolicy/\" + policyId;\n}\n\n/* Users */\nexport const getUsersUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const updateUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const addUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const deleteUserUrl = (userId) => {\n    return API_URL + \"/user/\" + userId;\n}\n\n/* Computers */\nexport const getComputersUrl = () => {\n    return API_URL + \"/computer\";\n}\n\nexport const updateComputerUrl = () => {\n    return API_URL + \"/computer\";\n}\n\nexport const deleteComputerUrl = (computerId) => {\n    return API_URL + \"/computer/\" + computerId;\n}\n\n/* Applications */\nexport const getApplicationsUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const updateApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const addApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const deleteApplicationUrl = (applicationId) => {\n    return API_URL + \"/application/\" + applicationId;\n}\n\n/* Sites */\nexport const getSitesUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const updateSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const addSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const deleteSiteUrl = (sitesId) => {\n    return API_URL + \"/site/\" + sitesId;\n}\n\n/* Services */\nexport const getServicesUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const updateServiceUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const addServiceUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const deleteServiceUrl = (serviceId) => {\n    return API_URL + \"/windowsService/\" + serviceId;\n}\n\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\nimport { history } from '../store'\n\nexport function getComputerPolicies(){\n    return (dispatch) => {\n        dispatch(getComputerPoliciesStart());\n        return axios.get(api.getComputerPoliciesUrl())\n            .then(response => {\n                dispatch(getComputerPoliciesSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getComputerPoliciesFail(error.message));\n            });\n    }\n}\n\nexport const getComputerPoliciesStart = () => ({\n    type: types.GET_COMPUTER_POLICIES_START\n});\n\nexport const getComputerPoliciesSuccess = (response) => ({\n    type: types.GET_COMPUTER_POLICIES_SUCCESS,\n    response\n});\n\nexport const getComputerPoliciesFail = (errorMsg) => ({\n    type: types.GET_COMPUTER_POLICIES_FAIL,\n    errorMsg,\n});\n\nexport function updateComputerPolicy(computerPolicy){\n    return (dispatch) => {\n        dispatch(updateComputerPolicyStart());\n        return axios.put(api.updateComputerPolicyUrl(), computerPolicy)\n            .then(response => {\n                dispatch(updateComputerPolicySuccess(response));\n                history.push({pathname: \"/computerPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(updateComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const updateComputerPolicyStart = () => ({\n    type: types.UPDATE_COMPUTER_POLICY_START\n});\n\nexport const updateComputerPolicySuccess = (response) => ({\n    type: types.UPDATE_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const updateComputerPolicyFail = (errorMsg) => ({\n    type: types.UPDATE_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function addComputerPolicy(computerPolicy){\n    return (dispatch) => {\n        dispatch(addComputerPolicyStart());\n        return axios.post(api.addComputerPolicyUrl(), computerPolicy)\n            .then(response => {\n                dispatch(addComputerPolicySuccess(response));\n                history.push({pathname: \"/computerPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const addComputerPolicyStart = () => ({\n    type: types.ADD_COMPUTER_POLICY_START\n});\n\nexport const addComputerPolicySuccess = (response) => ({\n    type: types.ADD_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const addComputerPolicyFail = (errorMsg) => ({\n    type: types.ADD_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function deleteComputerPolicy(policyId){\n    return (dispatch) => {\n        dispatch(deleteComputerPolicyStart());\n        return axios.delete(api.deleteComputerPolicyUrl(policyId))\n            .then(response => {\n                dispatch(deleteComputerPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(deleteComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const deleteComputerPolicyStart = () => ({\n    type: types.DELETE_COMPUTER_POLICY_START\n});\n\nexport const deleteComputerPolicySuccess = (response) => ({\n    type: types.DELETE_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const deleteComputerPolicyFail = (errorMsg) => ({\n    type: types.DELETE_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getComputerPolicy(computerPolicyId){\n    return (dispatch) => {\n        dispatch(getComputerPolicyStart());\n        return axios.get(api.getComputerPolicyUrl(computerPolicyId))\n            .then(response => {\n                dispatch(getComputerPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getComputerPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getComputerPolicyStart = () => ({\n    type: types.GET_COMPUTER_POLICY_START\n});\n\nexport const getComputerPolicySuccess = (response) => ({\n    type: types.GET_COMPUTER_POLICY_SUCCESS,\n    response\n});\n\nexport const getComputerPolicyFail = (errorMsg) => ({\n    type: types.GET_COMPUTER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addService(service){\n    return (dispatch) => {\n        dispatch(addServiceStart());\n        return axios.post(api.addServiceUrl(), service)\n            .then(response => {\n                dispatch(addServiceSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addServiceFail(error.message));\n            });\n    }\n}\n\nexport const addServiceStart = () => ({\n    type: types.ADD_SERVICE_START\n});\n\nexport const addServiceSuccess = (response) => ({\n    type: types.ADD_SERVICE_SUCCESS,\n    response\n});\n\nexport const addServiceFail = (errorMsg) => ({\n    type: types.ADD_SERVICE_FAIL,\n    errorMsg,\n});\n\nexport function updateService(service){\n    return (dispatch) => {\n        dispatch(updateServiceStart());\n        return axios.put(api.updateServiceUrl(), service)\n            .then(response => {\n                dispatch(updateServiceSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateServiceFail(error.message));\n            });\n    }\n}\n\nexport const updateServiceStart = () => ({\n    type: types.UPDATE_SERVICE_START\n});\n\nexport const updateServiceSuccess = (response) => ({\n    type: types.UPDATE_SERVICE_SUCCESS,\n    response\n});\n\nexport const updateServiceFail = (errorMsg) => ({\n    type: types.UPDATE_SERVICE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteService(serviceId){\n    return (dispatch) => {\n        dispatch(deleteServiceStart());\n        return axios.delete(api.deleteServiceUrl(serviceId))\n            .then(response => {\n                dispatch(deleteServiceSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteServiceFail(error.message));\n            });\n    }\n}\n\nexport const deleteServiceStart = () => ({\n    type: types.DELETE_SERVICE_START\n});\n\nexport const deleteServiceSuccess = (response) => ({\n    type: types.DELETE_SERVICE_SUCCESS,\n    response\n});\n\nexport const deleteServiceFail = (errorMsg) => ({\n    type: types.DELETE_SERVICE_FAIL,\n    errorMsg,\n});\n\nexport function getServices(){\n    return (dispatch) => {\n        dispatch(getServicesStart());\n        return axios.get(api.getServicesUrl())\n            .then(response => {\n                dispatch(getServicesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getServicesFail(error.message));\n            });\n    }\n}\n\nexport const getServicesStart = () => ({\n    type: types.GET_SERVICES_START\n});\n\nexport const getServicesSuccess = (response) => ({\n    type: types.GET_SERVICES_SUCCESS,\n    response\n});\n\nexport const getServicesFail = (errorMsg) => ({\n    type: types.GET_SERVICES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { Link } from \"react-router-dom\";\nimport * as computerPolicyActions from \"../../actions/computerPolicy\"\nimport * as serviceActions from \"../../actions/services\";\n\nexport class ComputerPolicy extends Component {\n    state = {\n        policy: {\n            name: \"\",\n            windowsServices: [],\n            computers: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getServices();\n        if (this.props.match.params.computerPolicyId){\n            this.getPolicy(this.props.match.params.computerPolicyId);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    setPolicyName = (name) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                name: name\n            }\n        }))\n    }\n\n    setBannedServices = (services) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                windowsServices: services\n            }\n        }))\n    }\n\n    savePolicy = () => {\n        if (this.props.match.params.computerPolicyId) {\n            this.props.updatePolicy(this.state.policy);\n        } else {\n            this.props.addPolicy(this.state.policy);\n        }\n    }\n\n    render() {\n\n        if (!this.props.services ||\n            (!this.state.policy.id && this.props.match.params.computerPolicyId)) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>\n                            Computer policy:\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.policy.name}\n                                onChange={(e) => {\n                                    this.setPolicyName(e.target.value);\n                                }}\n                                placeholder=\"Name\"\n                            />\n                        </h2>\n                        <h3>Banned services</h3>\n                        <Select isMulti options={this.props.services}\n                                defaultValue={this.state.policy.windowsServices}\n                                onChange={(services) => {\n                                    this.setBannedServices(services);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Computers</h3>\n                        {this.state.policy.computers.map((item, i) => {\n                                return (<div key={i}>\n                                    <h4>{item.localId} {item.computerName}</h4>\n                                </div>)\n                            }\n                        )}\n                        <hr/>\n                    </div>\n                    <div>\n                        <Link className=\"btn btn-md btn-outline-primary\" to=\"/computerPolicies\">Cancel</Link>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick={this.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.computerPolicy.computerPolicy,\n        services: state.services.services\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(computerPolicyActions.getComputerPolicy(policyId));\n        },\n        updatePolicy: (policy) => {\n            dispatch(computerPolicyActions.updateComputerPolicy(policy));\n        },\n        addPolicy: (policy) => {\n            dispatch(computerPolicyActions.addComputerPolicy(policy));\n        },\n        getServices: () => {\n            dispatch(serviceActions.getServices())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicy);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\nimport { history } from '../store'\n\nexport function getUserPolicies(){\n    return (dispatch) => {\n        dispatch(getUserPoliciesStart());\n        return axios.get(api.getUserPoliciesUrl())\n            .then(response => {\n                dispatch(getUserPoliciesSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPoliciesFail(error.message));\n            });\n    }\n}\n\nexport const getUserPoliciesStart = () => ({\n    type: types.GET_USER_POLICIES_START\n});\n\nexport const getUserPoliciesSuccess = (response) => ({\n    type: types.GET_USER_POLICIES_SUCCESS,\n    response\n});\n\nexport const getUserPoliciesFail = (errorMsg) => ({\n    type: types.GET_USER_POLICIES_FAIL,\n    errorMsg,\n});\n\nexport function updateUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(updateUserPolicyStart());\n        return axios.put(api.updateUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(updateUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(updateUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const updateUserPolicyStart = () => ({\n    type: types.UPDATE_USER_POLICY_START\n});\n\nexport const updateUserPolicySuccess = (response) => ({\n    type: types.UPDATE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const updateUserPolicyFail = (errorMsg) => ({\n    type: types.UPDATE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function addUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(addUserPolicyStart());\n        return axios.post(api.addUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(addUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const addUserPolicyStart = () => ({\n    type: types.ADD_USER_POLICY_START\n});\n\nexport const addUserPolicySuccess = (response) => ({\n    type: types.ADD_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const addUserPolicyFail = (errorMsg) => ({\n    type: types.ADD_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function deleteUserPolicy(policyId){\n    return (dispatch) => {\n        dispatch(deleteUserPolicyStart());\n        return axios.delete(api.deleteUserPolicyUrl(policyId))\n            .then(response => {\n                dispatch(deleteUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(deleteUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserPolicyStart = () => ({\n    type: types.DELETE_USER_POLICY_START\n});\n\nexport const deleteUserPolicySuccess = (response) => ({\n    type: types.DELETE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const deleteUserPolicyFail = (errorMsg) => ({\n    type: types.DELETE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getUserPolicy(userPolicyId){\n    return (dispatch) => {\n        dispatch(getUserPolicyStart());\n        return axios.get(api.getUserPolicyUrl(userPolicyId))\n            .then(response => {\n                dispatch(getUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getUserPolicyStart = () => ({\n    type: types.GET_USER_POLICY_START\n});\n\nexport const getUserPolicySuccess = (response) => ({\n    type: types.GET_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const getUserPolicyFail = (errorMsg) => ({\n    type: types.GET_USER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addApplication(application){\n    return (dispatch) => {\n        dispatch(addApplicationStart());\n        return axios.post(api.addApplicationUrl(), application)\n            .then(response => {\n                dispatch(addApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addApplicationFail(error.message));\n            });\n    }\n}\n\nexport const addApplicationStart = () => ({\n    type: types.ADD_APPLICATION_START\n});\n\nexport const addApplicationSuccess = (response) => ({\n    type: types.ADD_APPLICATION_SUCCESS,\n    response\n});\n\nexport const addApplicationFail = (errorMsg) => ({\n    type: types.ADD_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function updateApplication(application){\n    return (dispatch) => {\n        dispatch(updateApplicationStart());\n        return axios.put(api.updateApplicationUrl(), application)\n            .then(response => {\n                dispatch(updateApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateApplicationFail(error.message));\n            });\n    }\n}\n\nexport const updateApplicationStart = () => ({\n    type: types.UPDATE_APPLICATION_START\n});\n\nexport const updateApplicationSuccess = (response) => ({\n    type: types.UPDATE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const updateApplicationFail = (errorMsg) => ({\n    type: types.UPDATE_APPLICATION_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteApplication(applicationId){\n    return (dispatch) => {\n        dispatch(deleteApplicationStart());\n        return axios.delete(api.deleteApplicationUrl(applicationId))\n            .then(response => {\n                dispatch(deleteApplicationSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteApplicationFail(error.message));\n            });\n    }\n}\n\nexport const deleteApplicationStart = () => ({\n    type: types.DELETE_APPLICATION_START\n});\n\nexport const deleteApplicationSuccess = (response) => ({\n    type: types.DELETE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const deleteApplicationFail = (errorMsg) => ({\n    type: types.DELETE_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function getApplications(){\n    return (dispatch) => {\n        dispatch(getApplicationsStart());\n        return axios.get(api.getApplicationsUrl())\n            .then(response => {\n                dispatch(getApplicationsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getApplicationsFail(error.message));\n            });\n    }\n}\n\nexport const getApplicationsStart = () => ({\n    type: types.GET_APPLICATIONS_START\n});\n\nexport const getApplicationsSuccess = (response) => ({\n    type: types.GET_APPLICATIONS_SUCCESS,\n    response\n});\n\nexport const getApplicationsFail = (errorMsg) => ({\n    type: types.GET_APPLICATIONS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addSite(site){\n    return (dispatch) => {\n        dispatch(addSiteStart());\n        return axios.post(api.addSiteUrl(), site)\n            .then(response => {\n                dispatch(addSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addSiteFail(error.message));\n            });\n    }\n}\n\nexport const addSiteStart = () => ({\n    type: types.ADD_SITE_START\n});\n\nexport const addSiteSuccess = (response) => ({\n    type: types.ADD_SITE_SUCCESS,\n    response\n});\n\nexport const addSiteFail = (errorMsg) => ({\n    type: types.ADD_SITE_FAIL,\n    errorMsg,\n});\n\nexport function updateSite(site){\n    return (dispatch) => {\n        dispatch(updateSiteStart());\n        return axios.put(api.updateSiteUrl(), site)\n            .then(response => {\n                dispatch(updateSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateSiteFail(error.message));\n            });\n    }\n}\n\nexport const updateSiteStart = () => ({\n    type: types.UPDATE_SITE_START\n});\n\nexport const updateSiteSuccess = (response) => ({\n    type: types.UPDATE_SITE_SUCCESS,\n    response\n});\n\nexport const updateSiteFail = (errorMsg) => ({\n    type: types.UPDATE_SITE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteSite(siteId){\n    return (dispatch) => {\n        dispatch(deleteSiteStart());\n        return axios.delete(api.deleteSiteUrl(siteId))\n            .then(response => {\n                dispatch(deleteSiteSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteSiteFail(error.message));\n            });\n    }\n}\n\nexport const deleteSiteStart = () => ({\n    type: types.DELETE_SITE_START\n});\n\nexport const deleteSiteSuccess = (response) => ({\n    type: types.DELETE_SITE_SUCCESS,\n    response\n});\n\nexport const deleteSiteFail = (errorMsg) => ({\n    type: types.DELETE_SITE_FAIL,\n    errorMsg,\n});\n\nexport function getSites(){\n    return (dispatch) => {\n        dispatch(getSitesStart());\n        return axios.get(api.getSitesUrl())\n            .then(response => {\n                dispatch(getSitesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getSitesFail(error.message));\n            });\n    }\n}\n\nexport const getSitesStart = () => ({\n    type: types.GET_SITES_START\n});\n\nexport const getSitesSuccess = (response) => ({\n    type: types.GET_SITES_SUCCESS,\n    response\n});\n\nexport const getSitesFail = (errorMsg) => ({\n    type: types.GET_SITES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { Link } from \"react-router-dom\";\nimport * as userPolicyActions from \"../../actions/userPolicy\"\nimport * as applicationActions from \"../../actions/applications\";\nimport * as siteActions from \"../../actions/sites\";\n\nexport class UserPolicy extends Component {\n    state = {\n        policy: {\n            name: \"\",\n            bannedApps: [],\n            bannedSites: [],\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getApplications();\n        this.props.getSites();\n        if (this.props.match.params.userPolicyId){\n            this.getPolicy(this.props.match.params.userPolicyId);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    setPolicyName = (name) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                name: name\n            }\n        }))\n    }\n\n    setBannedApps = (apps) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                bannedApps: apps\n            }\n        }))\n    }\n\n    setBannedSites = (sites) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                bannedSites: sites\n            }\n        }))\n    }\n\n    savePolicy = () => {\n        if (this.props.match.params.userPolicyId) {\n            this.props.updatePolicy(this.state.policy);\n        } else {\n            this.props.addPolicy(this.state.policy);\n        }\n    }\n\n    render() {\n\n        if (!this.props.applications ||\n            !this.props.sites ||\n            (!this.state.policy.id && this.props.match.params.userPolicyId)) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>\n                            User policy:\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.policy.name}\n                                onChange={(e) => {\n                                    this.setPolicyName(e.target.value);\n                                }}\n                                placeholder=\"Name\"\n                            />\n                        </h2>\n                        <h3>Banned apps</h3>\n                        <Select isMulti options={this.props.applications}\n                                defaultValue={this.state.policy.bannedApps}\n                                onChange={(apps) => {\n                                    this.setBannedApps(apps);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Banned sites</h3>\n                        <Select isMulti options={this.props.sites}\n                                defaultValue={this.state.policy.bannedSites}\n                                onChange={(sites) => {\n                                    this.setBannedSites(sites);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Users</h3>\n                        {this.state.policy.users.map((item, i) => {\n                                return (<div key={i}>\n                                    <h4>{item.login}</h4>\n                                </div>)\n                            }\n                        )}\n                        <hr/>\n                    </div>\n                    <div>\n                        <Link className=\"btn btn-md btn-outline-primary\" to=\"/userPolicies\">Cancel</Link>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick={this.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.userPolicy.userPolicy,\n        applications: state.applications.applications,\n        sites: state.sites.sites\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(userPolicyActions.getUserPolicy(policyId));\n        },\n        updatePolicy: (policy) => {\n            dispatch(userPolicyActions.updateUserPolicy(policy));\n        },\n        addPolicy: (policy) => {\n            dispatch(userPolicyActions.addUserPolicy(policy));\n        },\n        getApplications: () => {\n            dispatch(applicationActions.getApplications())\n        },\n        getSites: () => {\n            dispatch(siteActions.getSites())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicy);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass app extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default app;\n","import React, {Component} from \"react\";\n\nexport class ConfigElementItem extends Component {\n    state = {\n        item: {\n            id: null,\n            label: null,\n            value: null\n        },\n        edit: false\n    }\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n    render() {\n        return (\n            <li className=\"list-group-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.label}\n                                onChange={this.changeLabel}\n                                placeholder=\"Label\"\n                            />\n                        ) : (\n                            this.state.item.label\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.value}\n                                onChange={this.changeValue}\n                                placeholder=\"Value\"\n                            />\n                        ) : (\n                            this.state.item.value\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-success\"\n                                    onClick={() => {\n                                        this.props.updateItem(this.state.item);\n                                        this.setState({\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Update\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-outline-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            item: this.props.item,\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        ) : (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            edit: true\n                                        });\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-danger\"\n                                    onClick={() => this.props.deleteItem(this.state.item.id)}\n                                >\n                                    Delete\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {ConfigElementItem} from './configElementItem/index';\n\nexport class ConfigElementList extends Component {\n    state = {\n        item: {\n            label: null,\n            value: null\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.props.configElements) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    {this.props.name}\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeLabel}\n                                        placeholder=\"Label\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeValue}\n                                        placeholder=\"Value\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.props.addItem(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.props.configElements.map((configElement, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ConfigElementItem\n                                                        item={configElement}\n                                                        updateItem={this.props.updateItem}\n                                                        deleteItem={this.props.deleteItem}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as applicationsActions from \"../../../actions/applications\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class AppList extends Component {\n    state = {\n        applications: null,\n    }\n\n    componentDidMount() {\n        this.getApplications();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.applications !== prevProps.applications) {\n            this.setState({\n                applications: this.props.applications\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getApplications = () => {\n        this.props.getApplications();\n    }\n\n    addApplication = (application) => {\n        this.props.addApplication(application);\n    }\n\n    updateApplication = (application) => {\n        this.props.updateApplication(application);\n    }\n\n    deleteApplication = (applicationId) => {\n        this.props.deleteApplication(applicationId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Applications\"}\n                configElements={this.state.applications}\n                addItem={this.addApplication}\n                updateItem={this.updateApplication}\n                deleteItem={this.deleteApplication}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        applications: state.applications.applications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getApplications: () => {\n            dispatch(applicationsActions.getApplications());\n        },\n        addApplication: (application) => {\n            dispatch(applicationsActions.addApplication(application));\n        },\n        updateApplication: (application) => {\n            dispatch(applicationsActions.updateApplication(application));\n        },\n        deleteApplication: (applicationId) => {\n            dispatch(applicationsActions.deleteApplication(applicationId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppList);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as sitesActions from \"../../../actions/sites\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class SiteList extends Component {\n    state = {\n        sites: null,\n    }\n\n    componentDidMount() {\n        this.getSites();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.sites !== prevProps.sites) {\n            this.setState({\n                sites: this.props.sites\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getSites = () => {\n        this.props.getSites();\n    }\n\n    addSite = (site) => {\n        this.props.addSite(site);\n    }\n\n    updateSite = (site) => {\n        this.props.updateSite(site);\n    }\n\n    deleteSite = (siteId) => {\n        this.props.deleteSite(siteId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Sites\"}\n                configElements={this.state.sites}\n                addItem={this.addSite}\n                updateItem={this.updateSite}\n                deleteItem={this.deleteSite}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sites: state.sites.sites,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getSites: () => {\n            dispatch(sitesActions.getSites());\n        },\n        addSite: (site) => {\n            dispatch(sitesActions.addSite(site));\n        },\n        updateSite: (site) => {\n            dispatch(sitesActions.updateSite(site));\n        },\n        deleteSite: (siteId) => {\n            dispatch(sitesActions.deleteSite(siteId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SiteList);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as servicesActions from \"../../../actions/services\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class ServiceList extends Component {\n    state = {\n        services: null,\n    }\n\n    componentDidMount() {\n        this.getServices();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.services !== prevProps.services) {\n            this.setState({\n                services: this.props.services\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getServices = () => {\n        this.props.getServices();\n    }\n\n    addService = (service) => {\n        this.props.addService(service);\n    }\n\n    updateService = (service) => {\n        this.props.updateService(service);\n    }\n\n    deleteService = (serviceId) => {\n        this.props.deleteService(serviceId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Services\"}\n                configElements={this.state.services}\n                addItem={this.addService}\n                updateItem={this.updateService}\n                deleteItem={this.deleteService}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        services: state.services.services,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getServices: () => {\n            dispatch(servicesActions.getServices());\n        },\n        addService: (service) => {\n            dispatch(servicesActions.addService(service));\n        },\n        updateService: (service) => {\n            dispatch(servicesActions.updateService(service));\n        },\n        deleteService: (serviceId) => {\n            dispatch(servicesActions.deleteService(serviceId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ServiceList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addUser(user){\n    return (dispatch) => {\n        dispatch(addUserStart());\n        return axios.post(api.addUserUrl(), user)\n            .then(response => {\n                dispatch(addUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addUserFail(error.message));\n            });\n    }\n}\n\nexport const addUserStart = () => ({\n    type: types.ADD_USER_START\n});\n\nexport const addUserSuccess = (response) => ({\n    type: types.ADD_USER_SUCCESS,\n    response\n});\n\nexport const addUserFail = (errorMsg) => ({\n    type: types.ADD_USER_FAIL,\n    errorMsg,\n});\n\nexport function updateUser(user){\n    return (dispatch) => {\n        dispatch(updateUserStart());\n        return axios.put(api.updateUserUrl(), user)\n            .then(response => {\n                dispatch(updateUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateUserFail(error.message));\n            });\n    }\n}\n\nexport const updateUserStart = () => ({\n    type: types.UPDATE_USER_START\n});\n\nexport const updateUserSuccess = (response) => ({\n    type: types.UPDATE_USER_SUCCESS,\n    response\n});\n\nexport const updateUserFail = (errorMsg) => ({\n    type: types.UPDATE_USER_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteUser(userId){\n    return (dispatch) => {\n        dispatch(deleteUserStart());\n        return axios.delete(api.deleteUserUrl(userId))\n            .then(response => {\n                dispatch(deleteUserSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteUserFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserStart = () => ({\n    type: types.DELETE_USER_START\n});\n\nexport const deleteUserSuccess = (response) => ({\n    type: types.DELETE_USER_SUCCESS,\n    response\n});\n\nexport const deleteUserFail = (errorMsg) => ({\n    type: types.DELETE_USER_FAIL,\n    errorMsg,\n});\n\nexport function getUsers(){\n    return (dispatch) => {\n        dispatch(getUsersStart());\n        return axios.get(api.getUsersUrl())\n            .then(response => {\n                dispatch(getUsersSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                // alert(JSON.parse(error))\n                dispatch(getUsersFail(error.message));\n            });\n    }\n}\n\nexport const getUsersStart = () => ({\n    type: types.GET_USERS_START\n});\n\nexport const getUsersSuccess = (response) => ({\n    type: types.GET_USERS_SUCCESS,\n    response\n});\n\nexport const getUsersFail = (errorMsg) => ({\n    type: types.GET_USERS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport Select from 'react-select';\n\nexport class UserItem extends Component {\n    state = {\n        item: {\n            id: null,\n            login: null,\n            password: null,\n            userPolicyId: null,\n            computerId: null\n        },\n        edit: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.state.item.id || !this.props.policies) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.login}\n                                    onChange={this.changeLogin}\n                                    placeholder=\"Login\"\n                                />\n                            ) : (\n                                this.state.item.login\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.password}\n                                    onChange={this.changePassword}\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n                        ) : (\n                            <div></div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <Select options={this.props.policies}\n                                        defaultValue={this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0]}\n                                        onChange={(policy) => {\n                                            this.changePolicy(policy);\n                                        }}\n                                />\n                            ) : (\n                                this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0].label\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div></div>\n                        ) : (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                {this.state.item.computerId}\n                            </div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => {\n                                            this.props.updateItem(this.state.item);\n                                            this.setState({\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Update\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-outline-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                item: this.props.item,\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            ) : (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                edit: true\n                                            });\n                                        }}\n                                    >\n                                        Edit\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-danger\"\n                                        onClick={() => this.props.deleteItem(this.state.item.id)}\n                                    >\n                                        Delete\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as usersActions from \"../../../actions/users\"\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserItem} from \"./userItem/index\";\nimport Select from \"react-select\";\n\nexport class UserList extends Component {\n    state = {\n        item: {\n            login: null,\n            password: null,\n            userPolicyId: null\n        },\n        users: null,\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n        this.getUsers();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.users !== prevProps.users) {\n            this.setState({\n                users: this.props.users\n            })\n        }\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    getUsers = () => {\n        this.props.getUsers();\n    }\n\n    addUser = (user) => {\n        this.props.addUser(user);\n    }\n\n    updateUser = (user) => {\n        this.props.updateUser(user);\n    }\n\n    deleteUser = (userId) => {\n        this.props.deleteUser(userId);\n    }\n\n    render() {\n        if (!this.state.users || !this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Users\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.login}\n                                            onChange={this.changeLogin}\n                                            placeholder=\"Login\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.password}\n                                            onChange={this.changePassword}\n                                            placeholder=\"Password\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <Select options={this.state.policies}\n                                                defaultValue={this.state.policies[0]}\n                                                onChange={(policy) => {\n                                                    this.changePolicy(policy);\n                                                }}\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.addUser(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.users.map((user, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserItem\n                                                        item={user}\n                                                        policies={this.state.policies}\n                                                        updateItem={this.updateUser}\n                                                        deleteItem={this.deleteUser}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies,\n        users: state.users.users,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(usersActions.getUsers());\n        },\n        addUser: (user) => {\n            dispatch(usersActions.addUser(user));\n        },\n        updateUser: (user) => {\n            dispatch(usersActions.updateUser(user));\n        },\n        deleteUser: (userId) => {\n            dispatch(usersActions.deleteUser(userId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserList);\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyItem extends Component {\n    state = {\n        item: {\n            id: null,\n            name: null,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: {\n                id: this.props.item.value,\n                name: this.props.item.label\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: {\n                    id: this.props.item.value,\n                    name: this.props.item.label\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.item.name}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            <Link className=\"btn btn-md btn-primary\" to={\"/userPolicy/\" + this.state.item.id}>Edit</Link>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.state.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserPolicyItem} from \"./userPolicyItem/index\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyList extends Component {\n    state = {\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    deletePolicy = (policyId) => {\n        this.props.deletePolicy(policyId);\n    }\n\n    render() {\n        if (!this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    User Policies\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.policies.map((policy, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserPolicyItem\n                                                        item={policy}\n                                                        deleteItem={this.deletePolicy}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"float\" to=\"/userPolicy\">\n                        <i color=\"primary\" className=\"material-icons\">add</i>\n                    </Link>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePolicy: (policyId) => {\n            dispatch(userPolicyActions.deleteUserPolicy(policyId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicyList);\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class ComputerPolicyItem extends Component {\n    state = {\n        item: {\n            id: null,\n            name: null,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: {\n                id: this.props.item.value,\n                name: this.props.item.label\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: {\n                    id: this.props.item.value,\n                    name: this.props.item.label\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.item.name}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            <Link className=\"btn btn-md btn-primary\" to={\"/computerPolicy/\" + this.state.item.id}>Edit</Link>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.state.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as computerPolicyActions from \"../../../actions/computerPolicy\"\nimport {ComputerPolicyItem} from \"./computerPolicyItem/index\";\nimport { Link } from \"react-router-dom\";\n\nexport class ComputerPolicyList extends Component {\n    state = {\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    deletePolicy = (policyId) => {\n        this.props.deletePolicy(policyId);\n    }\n\n    render() {\n        if (!this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Computer Policies\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.policies.map((policy, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ComputerPolicyItem\n                                                        item={policy}\n                                                        deleteItem={this.deletePolicy}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"float\" to=\"/computerPolicy\">\n                        <i color=\"primary\" className=\"material-icons\">add</i>\n                    </Link>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.computerPolicy.computerPolicies\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePolicy: (policyId) => {\n            dispatch(computerPolicyActions.deleteComputerPolicy(policyId));\n        },\n        getPolicies: () => {\n            dispatch(computerPolicyActions.getComputerPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicyList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function updateComputer(computer){\n    return (dispatch) => {\n        dispatch(updateComputerStart());\n        return axios.put(api.updateComputerUrl(), computer)\n            .then(response => {\n                dispatch(updateComputerSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateComputerFail(error.message));\n            });\n    }\n}\n\nexport const updateComputerStart = () => ({\n    type: types.UPDATE_COMPUTER_START\n});\n\nexport const updateComputerSuccess = (response) => ({\n    type: types.UPDATE_COMPUTER_SUCCESS,\n    response\n});\n\nexport const updateComputerFail = (errorMsg) => ({\n    type: types.UPDATE_COMPUTER_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteComputer(computerId){\n    return (dispatch) => {\n        dispatch(deleteComputerStart());\n        return axios.delete(api.deleteComputerUrl(computerId))\n            .then(response => {\n                dispatch(deleteComputerSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteComputerFail(error.message));\n            });\n    }\n}\n\nexport const deleteComputerStart = () => ({\n    type: types.DELETE_COMPUTER_START\n});\n\nexport const deleteComputerSuccess = (response) => ({\n    type: types.DELETE_COMPUTER_SUCCESS,\n    response\n});\n\nexport const deleteComputerFail = (errorMsg) => ({\n    type: types.DELETE_COMPUTER_FAIL,\n    errorMsg,\n});\n\nexport function getComputers(){\n    return (dispatch) => {\n        dispatch(getComputersStart());\n        return axios.get(api.getComputersUrl())\n            .then(response => {\n                dispatch(getComputersSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                // alert(JSON.parse(error))\n                dispatch(getComputersFail(error.message));\n            });\n    }\n}\n\nexport const getComputersStart = () => ({\n    type: types.GET_COMPUTERS_START\n});\n\nexport const getComputersSuccess = (response) => ({\n    type: types.GET_COMPUTERS_SUCCESS,\n    response\n});\n\nexport const getComputersFail = (errorMsg) => ({\n    type: types.GET_COMPUTERS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport Select from 'react-select';\n\nexport class ComputerItem extends Component {\n\n    changePolicy = (policy) => {\n        this.props.updateItem({\n            id: this.props.item.id,\n            computerPolicyId: policy.value\n        });\n    }\n\n    render() {\n        if (!this.props.item.id || !this.props.policies) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.localId}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.computerName}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.localUserName}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            {this.props.item.ip}\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            <Select options={this.props.policies}\n                                defaultValue={this.props.policies.filter(policy => policy.value === this.props.item.computerPolicyId)[0]}\n                                onChange={(policy) => {\n                                    this.changePolicy(policy);\n                                }}\n                            />\n                        </div>\n                        <div className=\"col-md-2 col-xl-2 col-lg-2 col-sm-2 col-2\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.props.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as computersActions from \"../../../actions/computers\"\nimport * as computerPolicyActions from \"../../../actions/computerPolicy\"\nimport {ComputerItem} from \"./computerItem/index\";\n\nexport class ComputerList extends Component {\n    state = {\n        computers: null,\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n        this.getComputers();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.computers !== prevProps.computers) {\n            this.setState({\n                computers: this.props.computers\n            })\n        }\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                computerPolicyId: policy.value\n            }\n        }));\n    }\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    getComputers = () => {\n        this.props.getComputers();\n    }\n\n    updateComputer = (computer) => {\n        this.props.updateComputer(computer);\n    }\n\n    deleteComputer = (computerId) => {\n        this.props.deleteComputer(computerId);\n    }\n\n    render() {\n        if (!this.state.computers || !this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Computers\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.computers.map((computer, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ComputerItem\n                                                        item={computer}\n                                                        policies={this.state.policies}\n                                                        updateItem={this.updateComputer}\n                                                        deleteItem={this.deleteComputer}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.computerPolicy.computerPolicies,\n        computers: state.computers.computers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getComputers: () => {\n            dispatch(computersActions.getComputers());\n        },\n        updateComputer: (computer) => {\n            dispatch(computersActions.updateComputer(computer));\n        },\n        deleteComputer: (computerId) => {\n            dispatch(computersActions.deleteComputer(computerId));\n        },\n        getPolicies: () => {\n            dispatch(computerPolicyActions.getComputerPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerList);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nimport AppNavbarHeader from '../components/appNavbarHeader';\nimport ComputerPolicy from '../components/computerPolicy';\nimport UserPolicy from '../components/userPolicy';\nimport app from '../App'\nimport AppList from \"../components/lists/appList\";\nimport SiteList from \"../components/lists/siteList\";\nimport ServiceList from \"../components/lists/serviceList\";\nimport UserList from \"../components/lists/userList/index\";\nimport UserPolicyList from \"../components/lists/userPolicyList\";\nimport ComputerPolicyList from \"../components/lists/computerPolicyList\";\nimport ComputerList from \"../components/lists/computerList\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbarHeader/>\n                <Route exact path=\"/\" component={app}/>\n                <Route path=\"/computerPolicy/:computerPolicyId?\" component={ComputerPolicy}/>\n                <Route path=\"/userPolicy/:userPolicyId?\" component={UserPolicy}/>\n                <Route path=\"/applications\" component={AppList}/>\n                <Route path=\"/sites\" component={SiteList}/>\n                <Route path=\"/services\" component={ServiceList}/>\n                <Route path=\"/users\" component={UserList}/>\n                <Route path=\"/computers\" component={ComputerList}/>\n                <Route path=\"/userPolicies\" component={UserPolicyList}/>\n                <Route path=\"/computerPolicies\" component={ComputerPolicyList}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\nimport store from './store'\nimport App from './containers/app';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}