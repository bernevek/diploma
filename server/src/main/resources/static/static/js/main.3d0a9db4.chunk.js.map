{"version":3,"sources":["constants/actionsConstants.js","reducers/computerPolicy.js","reducers/userPolicy.js","reducers/applications.js","reducers/sites.js","reducers/services.js","reducers/users.js","reducers/index.js","store.js","components/appNavbarHeader/index.js","components/computerPolicy/index.js","constants/apiEndpoints.js","actions/userPolicy.js","actions/applications.js","actions/sites.js","components/userPolicy/index.js","App.js","components/lists/configElementList/configElementItem/index.js","components/lists/configElementList/index.js","components/lists/appList/index.js","components/lists/siteList/index.js","actions/services.js","components/lists/serviceList/index.js","actions/users.js","components/lists/userList/userItem/index.js","components/lists/userList/index.js","components/lists/userPolicyList/userPolicyItem/index.js","components/lists/userPolicyList/index.js","containers/app.js","index.js","logo.svg"],"names":["GET_USER_POLICY_START","GET_USER_POLICY_SUCCESS","GET_USER_POLICY_FAIL","GET_USER_POLICIES_START","GET_USER_POLICIES_SUCCESS","GET_USER_POLICIES_FAIL","UPDATE_USER_POLICY_START","UPDATE_USER_POLICY_SUCCESS","UPDATE_USER_POLICY_FAIL","ADD_USER_POLICY_START","ADD_USER_POLICY_SUCCESS","ADD_USER_POLICY_FAIL","DELETE_USER_POLICY_START","DELETE_USER_POLICY_SUCCESS","DELETE_USER_POLICY_FAIL","GET_COMPUTER_POLICY_START","GET_COMPUTER_POLICY_SUCCESS","GET_COMPUTER_POLICY_FAIL","SAVE_COMPUTER_POLICY_START","SAVE_COMPUTER_POLICY_SUCCESS","SAVE_COMPUTER_POLICY_FAIL","GET_APPLICATIONS_START","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ADD_APPLICATION_START","ADD_APPLICATION_SUCCESS","ADD_APPLICATION_FAIL","DELETE_APPLICATION_START","DELETE_APPLICATION_SUCCESS","DELETE_APPLICATION_FAIL","UPDATE_APPLICATION_START","UPDATE_APPLICATION_SUCCESS","UPDATE_APPLICATION_FAIL","GET_SITES_START","GET_SITES_SUCCESS","GET_SITES_FAIL","ADD_SITE_START","ADD_SITE_SUCCESS","ADD_SITE_FAIL","DELETE_SITE_START","DELETE_SITE_SUCCESS","DELETE_SITE_FAIL","UPDATE_SITE_START","UPDATE_SITE_SUCCESS","UPDATE_SITE_FAIL","GET_SERVICES_START","GET_SERVICES_SUCCESS","GET_SERVICES_FAIL","ADD_SERVICE_START","ADD_SERVICE_SUCCESS","ADD_SERVICE_FAIL","DELETE_SERVICE_START","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAIL","UPDATE_SERVICE_START","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_FAIL","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAIL","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","initialState","errorMsg","computerPolicy","saveComputerPolicyInProgress","getComputerPolicyInProgress","userPolicy","userPolicies","updateUserPolicyInProgress","getUserPolicyInProgress","getUserPoliciesInProgress","addUserPolicyInProgress","deleteUserPolicyInProgress","applications","addApplicationInProgress","getApplicationsInProgress","deleteApplicationInProgress","updateApplicationInProgress","sites","addSiteInProgress","getSitesInProgress","deleteSiteInProgress","updateSiteInProgress","services","addServiceInProgress","getServicesInProgress","deleteServiceInProgress","updateServiceInProgress","users","addUserInProgress","getUsersInProgress","deleteUserInProgress","updateUserInProgress","appReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","response","data","toConsumableArray","filter","value","concat","app","id","map","label","site","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createHashHistory","AppNavbarHeader","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","user","click","console","log","push","pathname","inherits","createClass","key","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","className","NavDropdown_default","title","Item","Link","Form_default","inline","FormControl_default","placeholder","Button_default","variant","Component","connect","dispatch","ComputerPolicy","API_URL","process","REACT_APP_STAGE","getUserPoliciesUrl","getUserPolicyUrl","policyId","updateUserPolicyUrl","addUserPolicyUrl","deleteUserPolicyUrl","getUsersUrl","updateUserUrl","addUserUrl","deleteUserUrl","applicationId","getApplicationsUrl","updateApplicationUrl","addApplicationUrl","deleteApplicationUrl","getSitesUrl","updateSiteUrl","addSiteUrl","deleteSiteUrl","sitesId","getServicesUrl","updateServiceUrl","addServiceUrl","deleteServiceUrl","serviceId","getUserPolicies","getUserPoliciesStart","axios","get","api","then","getUserPoliciesSuccess","catch","error","alert","JSON","parse","request","reason","getUserPoliciesFail","message","updateUserPolicyStart","updateUserPolicySuccess","updateUserPolicyFail","addUserPolicyStart","addUserPolicySuccess","addUserPolicyFail","deleteUserPolicyStart","deleteUserPolicySuccess","deleteUserPolicyFail","getUserPolicyStart","getUserPolicySuccess","getUserPolicyFail","addApplicationStart","addApplicationSuccess","addApplicationFail","updateApplicationStart","updateApplicationSuccess","updateApplicationFail","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFail","getApplications","getApplicationsStart","getApplicationsSuccess","getApplicationsFail","addSiteStart","addSiteSuccess","addSiteFail","updateSiteStart","updateSiteSuccess","updateSiteFail","deleteSiteStart","deleteSiteSuccess","deleteSiteFail","getSites","getSitesStart","getSitesSuccess","getSitesFail","UserPolicy","policy","name","bannedApps","bannedSites","getPolicy","props","setPolicyName","setState","prevState","setBannedApps","apps","setBannedSites","savePolicy","match","params","userPolicyId","updatePolicy","addPolicy","prevProps","_this2","src","defaultValue","onChange","e","target","react_select_esm","isMulti","options","item","i","login","to","onClick","put","post","applicationActions","siteActions","logo","alt","rel","ConfigElementItem","edit","changeLabel","changeValue","updateItem","deleteItem","ConfigElementList","configElements","addItem","configElement","configElementItem_ConfigElementItem","AppList","addApplication","application","updateApplication","deleteApplication","configElementList_ConfigElementList","applicationsActions","delete","SiteList","addSite","updateSite","deleteSite","siteId","sitesActions","addServiceStart","addServiceSuccess","addServiceFail","updateServiceStart","updateServiceSuccess","updateServiceFail","deleteServiceStart","deleteServiceSuccess","deleteServiceFail","getServicesStart","getServicesSuccess","getServicesFail","ServiceList","getServices","addService","service","updateService","deleteService","servicesActions","addUserStart","addUserSuccess","addUserFail","updateUserStart","updateUserSuccess","updateUserFail","deleteUserStart","deleteUserSuccess","deleteUserFail","getUsersStart","getUsersSuccess","getUsersFail","UserItem","password","computerId","changeLogin","changePassword","changePolicy","policies","UserList","getPolicies","getUsers","addUser","updateUser","deleteUser","userId","userItem_UserItem","usersActions","userPolicyActions","UserPolicyItem","UserPolicyList","deletePolicy","userPolicyItem_UserPolicyItem","color","App","appNavbarHeader","Route","exact","path","component","ReactDOM","render","es","HashRouter","containers_app","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3d0a9db4.chunk.js","sourcesContent":["/* Login */\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGOUT_START = 'LOGOUT_START';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\n/* UserPolicy */\nexport const GET_USER_POLICY_START = 'GET_USER_POLICY_START';\nexport const GET_USER_POLICY_SUCCESS = 'GET_USER_POLICY_SUCCESS';\nexport const GET_USER_POLICY_FAIL = 'GET_USER_POLICY_FAIL';\nexport const GET_USER_POLICIES_START = 'GET_USER_POLICIES_START';\nexport const GET_USER_POLICIES_SUCCESS = 'GET_USER_POLICIES_SUCCESS';\nexport const GET_USER_POLICIES_FAIL = 'GET_USER_POLICIES_FAIL';\nexport const UPDATE_USER_POLICY_START = 'UPDATE_USER_POLICY_START';\nexport const UPDATE_USER_POLICY_SUCCESS = 'UPDATE_USER_POLICY_SUCCESS';\nexport const UPDATE_USER_POLICY_FAIL = 'UPDATE_USER_POLICY_FAIL';\nexport const ADD_USER_POLICY_START = 'ADD_USER_POLICY_START';\nexport const ADD_USER_POLICY_SUCCESS = 'ADD_USER_POLICY_SUCCESS';\nexport const ADD_USER_POLICY_FAIL = 'ADD_USER_POLICY_FAIL';\nexport const DELETE_USER_POLICY_START = 'DELETE_USER_POLICY_START';\nexport const DELETE_USER_POLICY_SUCCESS = 'DELETE_USER_POLICY_SUCCESS';\nexport const DELETE_USER_POLICY_FAIL = 'DELETE_USER_POLICY_FAIL';\n\n/* ComputerPolicy */\nexport const GET_COMPUTER_POLICY_START = 'GET_COMPUTER_POLICY_START';\nexport const GET_COMPUTER_POLICY_SUCCESS = 'GET_COMPUTER_POLICY_SUCCESS';\nexport const GET_COMPUTER_POLICY_FAIL = 'GET_COMPUTER_POLICY_FAIL';\nexport const SAVE_COMPUTER_POLICY_START = 'SAVE_COMPUTER_POLICY_START';\nexport const SAVE_COMPUTER_POLICY_SUCCESS = 'SAVE_COMPUTER_POLICY_SUCCESS';\nexport const SAVE_COMPUTER_POLICY_FAIL = 'SAVE_COMPUTER_POLICY_FAIL';\n\n/* Applications */\nexport const GET_APPLICATIONS_START = 'GET_APPLICATIONS_START';\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\nexport const ADD_APPLICATION_START = 'ADD_APPLICATION_START';\nexport const ADD_APPLICATION_SUCCESS = 'ADD_APPLICATION_SUCCESS';\nexport const ADD_APPLICATION_FAIL = 'ADD_APPLICATION_FAIL';\nexport const DELETE_APPLICATION_START = 'DELETE_APPLICATION_START';\nexport const DELETE_APPLICATION_SUCCESS = 'DELETE_APPLICATION_SUCCESS';\nexport const DELETE_APPLICATION_FAIL = 'DELETE_APPLICATION_FAIL';\nexport const UPDATE_APPLICATION_START = 'UPDATE_APPLICATION_START';\nexport const UPDATE_APPLICATION_SUCCESS = 'UPDATE_APPLICATION_SUCCESS';\nexport const UPDATE_APPLICATION_FAIL = 'UPDATE_APPLICATION_FAIL';\n\n/* Sites */\nexport const GET_SITES_START = 'GET_SITES_START';\nexport const GET_SITES_SUCCESS = 'GET_SITES_SUCCESS';\nexport const GET_SITES_FAIL = 'GET_SITES_FAIL';\nexport const ADD_SITE_START = 'ADD_SITE_START';\nexport const ADD_SITE_SUCCESS = 'ADD_SITE_SUCCESS';\nexport const ADD_SITE_FAIL = 'ADD_SITE_FAIL';\nexport const DELETE_SITE_START = 'DELETE_SITE_START';\nexport const DELETE_SITE_SUCCESS = 'DELETE_SITE_SUCCESS';\nexport const DELETE_SITE_FAIL = 'DELETE_SITE_FAIL';\nexport const UPDATE_SITE_START = 'UPDATE_SITE_START';\nexport const UPDATE_SITE_SUCCESS = 'UPDATE_SITE_SUCCESS';\nexport const UPDATE_SITE_FAIL = 'UPDATE_SITE_FAIL';\n\n/* Services */\nexport const GET_SERVICES_START = 'GET_SERVICES_START';\nexport const GET_SERVICES_SUCCESS = 'GET_SERVICES_SUCCESS';\nexport const GET_SERVICES_FAIL = 'GET_SERVICES_FAIL';\nexport const ADD_SERVICE_START = 'ADD_SERVICE_START';\nexport const ADD_SERVICE_SUCCESS = 'ADD_SERVICE_SUCCESS';\nexport const ADD_SERVICE_FAIL = 'ADD_SERVICE_FAIL';\nexport const DELETE_SERVICE_START = 'DELETE_SERVICE_START';\nexport const DELETE_SERVICE_SUCCESS = 'DELETE_SERVICE_SUCCESS';\nexport const DELETE_SERVICE_FAIL = 'DELETE_SERVICE_FAIL';\nexport const UPDATE_SERVICE_START = 'UPDATE_SERVICE_START';\nexport const UPDATE_SERVICE_SUCCESS = 'UPDATE_SERVICE_SUCCESS';\nexport const UPDATE_SERVICE_FAIL = 'UPDATE_SERVICE_FAIL';\n\n/* Users */\nexport const GET_USERS_START = 'GET_USERS_START';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\nexport const ADD_USER_START = 'ADD_USER_START';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\nexport const DELETE_USER_START = 'DELETE_USER_START';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\nexport const UPDATE_USER_START = 'UPDATE_USER_START';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\n\n/* Login Methods */\nexport const GET_LOGIN_METHODS_START = 'GET_LOGIN_METHODS_START';\nexport const GET_LOGIN_METHODS_SUCCESS = 'GET_LOGIN_METHODS_SUCCESS';\nexport const GET_LOGIN_METHODS_FAIL = 'GET_LOGIN_METHODS_FAIL';\n","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computerPolicy: null,\n    saveComputerPolicyInProgress: false,\n    getComputerPolicyInProgress: false\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.SAVE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                saveComputerPolicyInProgress: true\n            };\n        case types.SAVE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                saveComputerPolicyInProgress: false,\n            };\n        case types.SAVE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                saveComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPolicyInProgress: true\n            };\n        case types.GET_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPolicyInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    userPolicy: null,\n    userPolicies: null,\n    updateUserPolicyInProgress: false,\n    getUserPolicyInProgress: false,\n    getUserPoliciesInProgress: false,\n    addUserPolicyInProgress: false,\n    deleteUserPolicyInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.UPDATE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: true\n            };\n        case types.UPDATE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: false,\n            };\n        case types.UPDATE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: true\n            };\n        case types.ADD_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserPolicyInProgress: true\n            };\n        case types.DELETE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: [...state.userPolicies.filter(userPolicy => userPolicy.value !== action.response.data)],\n                deleteUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPolicyInProgress: true\n            };\n        case types.GET_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicy: action.response.data,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICIES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPoliciesInProgress: true\n            };\n        case types.GET_USER_POLICIES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: action.response.data,\n                getUserPoliciesInProgress: false,\n            };\n        case types.GET_USER_POLICIES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPoliciesInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    applications: null,\n    addApplicationInProgress: false,\n    getApplicationsInProgress: false,\n    deleteApplicationInProgress: false,\n    updateApplicationInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: true\n            };\n        case types.ADD_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: false,\n                applications: [...state.applications, action.response.data]\n            };\n        case types.ADD_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addApplicationInProgress: false,\n            };\n        case types.GET_APPLICATIONS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getApplicationsInProgress: true\n            };\n        case types.GET_APPLICATIONS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: action.response.data,\n                getApplicationsInProgress: false,\n            };\n        case types.GET_APPLICATIONS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getApplicationsInProgress: false,\n            };\n        case types.DELETE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteApplicationInProgress: true\n            };\n        case types.DELETE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.filter(app => app.id !== action.response.data)],\n                deleteApplicationInProgress: false,\n            };\n        case types.DELETE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateApplicationInProgress: true\n            };\n        case types.UPDATE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateApplicationInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    sites: null,\n    addSiteInProgress: false,\n    getSitesInProgress: false,\n    deleteSiteInProgress: false,\n    updateSiteInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: true\n            };\n        case types.ADD_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: false,\n                sites: [...state.sites, action.response.data]\n            };\n        case types.ADD_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addSiteInProgress: false,\n            };\n        case types.GET_SITES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getSitesInProgress: true\n            };\n        case types.GET_SITES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: action.response.data,\n                getSitesInProgress: false,\n            };\n        case types.GET_SITES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getSitesInProgress: false,\n            };\n        case types.DELETE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteSiteInProgress: true\n            };\n        case types.DELETE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.filter(site => site.id !== action.response.data)],\n                deleteSiteInProgress: false,\n            };\n        case types.DELETE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateSiteInProgress: true\n            };\n        case types.UPDATE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.map(site => {\n                    if (site.id === action.response.data.id) {\n                        site.label = action.response.data.label;\n                        site.value = action.response.data.value;\n                    }\n                    return site;\n                })],\n                updateSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateSiteInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    services: null,\n    addServiceInProgress: false,\n    getServicesInProgress: false,\n    deleteServiceInProgress: false,\n    updateServiceInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addServiceInProgress: true\n            };\n        case types.ADD_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addServiceInProgress: false,\n                services: [...state.services, action.response.data]\n            };\n        case types.ADD_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addServiceInProgress: false,\n            };\n        case types.GET_SERVICES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getServicesInProgress: true\n            };\n        case types.GET_SERVICES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: action.response.data,\n                getServicesInProgress: false,\n            };\n        case types.GET_SERVICES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getServicesInProgress: false,\n            };\n        case types.DELETE_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteServiceInProgress: true\n            };\n        case types.DELETE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: [...state.services.filter(app => app.id !== action.response.data)],\n                deleteServiceInProgress: false,\n            };\n        case types.DELETE_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteServiceInProgress: false,\n            };\n        case types.UPDATE_SERVICE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateServiceInProgress: true\n            };\n        case types.UPDATE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                services: [...state.services.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateServiceInProgress: false,\n            };\n        case types.UPDATE_SERVICE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateServiceInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    users: null,\n    addUserInProgress: false,\n    getUsersInProgress: false,\n    deleteUserInProgress: false,\n    updateUserInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: true\n            };\n        case types.ADD_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: false,\n                users: [...state.users, action.response.data]\n            };\n        case types.ADD_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserInProgress: false,\n            };\n        case types.GET_USERS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUsersInProgress: true\n            };\n        case types.GET_USERS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: action.response.data,\n                getUsersInProgress: false,\n            };\n        case types.GET_USERS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUsersInProgress: false,\n            };\n        case types.DELETE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserInProgress: true\n            };\n        case types.DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.filter(app => app.id !== action.response.data)],\n                deleteUserInProgress: false,\n            };\n        case types.DELETE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserInProgress: false,\n            };\n        case types.UPDATE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserInProgress: true\n            };\n        case types.UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateUserInProgress: false,\n            };\n        case types.UPDATE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport computerPolicy from './computerPolicy';\nimport userPolicy from './userPolicy';\nimport applications from './applications';\nimport sites from './sites';\nimport services from './services';\nimport users from './users';\n\nconst appReducer = combineReducers({\n    computerPolicy,\n    userPolicy,\n    applications,\n    sites,\n    services,\n    users\n});\nconst rootReducer = (state, action) => {\n    if(action.type === 'LOGOUT'){\n        state = undefined;\n    }\n    return appReducer(state, action);\n}\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const history = createHashHistory();\n\nexport default store;\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { history } from '../../store'\n\n\nexport class AppNavbarHeader extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    click = () => {\n        console.log(\"fsg\");\n        history.push({pathname: \"/userPolicy\"})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Access system</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#/users\">Users</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/userPolicies\">User policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Computer\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#\">Computers</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/computerPolicy\">Computer policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <Nav.Link href=\"#/applications\">Applications</Nav.Link>\n                        <Nav.Link href=\"#/sites\">Sites</Nav.Link>\n                        <Nav.Link href=\"#/services\">Services</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppNavbarHeader);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\n\nexport class ComputerPolicy extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>computer policy</div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicy);\n","var API_URL = \"\";\n\nprocess.env.REACT_APP_STAGE === 'dev'\n    ? API_URL = 'http://localhost:8080/api'\n    : API_URL = '/api'\n\n/* User Policy */\nexport const getUserPoliciesUrl = () => {\n    return API_URL + \"/userPolicies\";\n}\n\nexport const getUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\nexport const updateUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const addUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const deleteUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\n/* Applications */\nexport const getUsersUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const updateUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const addUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const deleteUserUrl = (applicationId) => {\n    return API_URL + \"/user/\" + applicationId;\n}\n\n/* Applications */\nexport const getApplicationsUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const updateApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const addApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const deleteApplicationUrl = (applicationId) => {\n    return API_URL + \"/application/\" + applicationId;\n}\n\n/* Sites */\nexport const getSitesUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const updateSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const addSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const deleteSiteUrl = (sitesId) => {\n    return API_URL + \"/site/\" + sitesId;\n}\n\n/* Services */\nexport const getServicesUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const updateServiceUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const addServiceUrl = () => {\n    return API_URL + \"/windowsService\";\n}\n\nexport const deleteServiceUrl = (serviceId) => {\n    return API_URL + \"/windowsService/\" + serviceId;\n}\n\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\nimport { history } from '../store'\n\nexport function getUserPolicies(){\n    return (dispatch) => {\n        dispatch(getUserPoliciesStart());\n        return axios.get(api.getUserPoliciesUrl())\n            .then(response => {\n                dispatch(getUserPoliciesSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPoliciesFail(error.message));\n            });\n    }\n}\n\nexport const getUserPoliciesStart = () => ({\n    type: types.GET_USER_POLICIES_START\n});\n\nexport const getUserPoliciesSuccess = (response) => ({\n    type: types.GET_USER_POLICIES_SUCCESS,\n    response\n});\n\nexport const getUserPoliciesFail = (errorMsg) => ({\n    type: types.GET_USER_POLICIES_FAIL,\n    errorMsg,\n});\n\nexport function updateUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(updateUserPolicyStart());\n        return axios.put(api.updateUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(updateUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(updateUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const updateUserPolicyStart = () => ({\n    type: types.UPDATE_USER_POLICY_START\n});\n\nexport const updateUserPolicySuccess = (response) => ({\n    type: types.UPDATE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const updateUserPolicyFail = (errorMsg) => ({\n    type: types.UPDATE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function addUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(addUserPolicyStart());\n        return axios.post(api.addUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(addUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const addUserPolicyStart = () => ({\n    type: types.ADD_USER_POLICY_START\n});\n\nexport const addUserPolicySuccess = (response) => ({\n    type: types.ADD_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const addUserPolicyFail = (errorMsg) => ({\n    type: types.ADD_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function deleteUserPolicy(policyId){\n    return (dispatch) => {\n        dispatch(deleteUserPolicyStart());\n        return axios.delete(api.deleteUserPolicyUrl(policyId))\n            .then(response => {\n                dispatch(deleteUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(deleteUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserPolicyStart = () => ({\n    type: types.DELETE_USER_POLICY_START\n});\n\nexport const deleteUserPolicySuccess = (response) => ({\n    type: types.DELETE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const deleteUserPolicyFail = (errorMsg) => ({\n    type: types.DELETE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getUserPolicy(userPolicyId){\n    return (dispatch) => {\n        dispatch(getUserPolicyStart());\n        return axios.get(api.getUserPolicyUrl(userPolicyId))\n            .then(response => {\n                dispatch(getUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getUserPolicyStart = () => ({\n    type: types.GET_USER_POLICY_START\n});\n\nexport const getUserPolicySuccess = (response) => ({\n    type: types.GET_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const getUserPolicyFail = (errorMsg) => ({\n    type: types.GET_USER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addApplication(application){\n    return (dispatch) => {\n        dispatch(addApplicationStart());\n        return axios.post(api.addApplicationUrl(), application)\n            .then(response => {\n                dispatch(addApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addApplicationFail(error.message));\n            });\n    }\n}\n\nexport const addApplicationStart = () => ({\n    type: types.ADD_APPLICATION_START\n});\n\nexport const addApplicationSuccess = (response) => ({\n    type: types.ADD_APPLICATION_SUCCESS,\n    response\n});\n\nexport const addApplicationFail = (errorMsg) => ({\n    type: types.ADD_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function updateApplication(application){\n    return (dispatch) => {\n        dispatch(updateApplicationStart());\n        return axios.put(api.updateApplicationUrl(), application)\n            .then(response => {\n                dispatch(updateApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateApplicationFail(error.message));\n            });\n    }\n}\n\nexport const updateApplicationStart = () => ({\n    type: types.UPDATE_APPLICATION_START\n});\n\nexport const updateApplicationSuccess = (response) => ({\n    type: types.UPDATE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const updateApplicationFail = (errorMsg) => ({\n    type: types.UPDATE_APPLICATION_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteApplication(applicationId){\n    return (dispatch) => {\n        dispatch(deleteApplicationStart());\n        return axios.delete(api.deleteApplicationUrl(applicationId))\n            .then(response => {\n                dispatch(deleteApplicationSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteApplicationFail(error.message));\n            });\n    }\n}\n\nexport const deleteApplicationStart = () => ({\n    type: types.DELETE_APPLICATION_START\n});\n\nexport const deleteApplicationSuccess = (response) => ({\n    type: types.DELETE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const deleteApplicationFail = (errorMsg) => ({\n    type: types.DELETE_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function getApplications(){\n    return (dispatch) => {\n        dispatch(getApplicationsStart());\n        return axios.get(api.getApplicationsUrl())\n            .then(response => {\n                dispatch(getApplicationsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getApplicationsFail(error.message));\n            });\n    }\n}\n\nexport const getApplicationsStart = () => ({\n    type: types.GET_APPLICATIONS_START\n});\n\nexport const getApplicationsSuccess = (response) => ({\n    type: types.GET_APPLICATIONS_SUCCESS,\n    response\n});\n\nexport const getApplicationsFail = (errorMsg) => ({\n    type: types.GET_APPLICATIONS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addSite(site){\n    return (dispatch) => {\n        dispatch(addSiteStart());\n        return axios.post(api.addSiteUrl(), site)\n            .then(response => {\n                dispatch(addSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addSiteFail(error.message));\n            });\n    }\n}\n\nexport const addSiteStart = () => ({\n    type: types.ADD_SITE_START\n});\n\nexport const addSiteSuccess = (response) => ({\n    type: types.ADD_SITE_SUCCESS,\n    response\n});\n\nexport const addSiteFail = (errorMsg) => ({\n    type: types.ADD_SITE_FAIL,\n    errorMsg,\n});\n\nexport function updateSite(site){\n    return (dispatch) => {\n        dispatch(updateSiteStart());\n        return axios.put(api.updateSiteUrl(), site)\n            .then(response => {\n                dispatch(updateSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateSiteFail(error.message));\n            });\n    }\n}\n\nexport const updateSiteStart = () => ({\n    type: types.UPDATE_SITE_START\n});\n\nexport const updateSiteSuccess = (response) => ({\n    type: types.UPDATE_SITE_SUCCESS,\n    response\n});\n\nexport const updateSiteFail = (errorMsg) => ({\n    type: types.UPDATE_SITE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteSite(siteId){\n    return (dispatch) => {\n        dispatch(deleteSiteStart());\n        return axios.delete(api.deleteSiteUrl(siteId))\n            .then(response => {\n                dispatch(deleteSiteSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteSiteFail(error.message));\n            });\n    }\n}\n\nexport const deleteSiteStart = () => ({\n    type: types.DELETE_SITE_START\n});\n\nexport const deleteSiteSuccess = (response) => ({\n    type: types.DELETE_SITE_SUCCESS,\n    response\n});\n\nexport const deleteSiteFail = (errorMsg) => ({\n    type: types.DELETE_SITE_FAIL,\n    errorMsg,\n});\n\nexport function getSites(){\n    return (dispatch) => {\n        dispatch(getSitesStart());\n        return axios.get(api.getSitesUrl())\n            .then(response => {\n                dispatch(getSitesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getSitesFail(error.message));\n            });\n    }\n}\n\nexport const getSitesStart = () => ({\n    type: types.GET_SITES_START\n});\n\nexport const getSitesSuccess = (response) => ({\n    type: types.GET_SITES_SUCCESS,\n    response\n});\n\nexport const getSitesFail = (errorMsg) => ({\n    type: types.GET_SITES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { Link } from \"react-router-dom\";\nimport * as userPolicyActions from \"../../actions/userPolicy\"\nimport * as applicationActions from \"../../actions/applications\";\nimport * as siteActions from \"../../actions/sites\";\n\nexport class UserPolicy extends Component {\n    state = {\n        policy: {\n            name: \"\",\n            bannedApps: [],\n            bannedSites: [],\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getApplications();\n        this.props.getSites();\n        if (this.props.match.params.userPolicyId){\n            this.getPolicy(this.props.match.params.userPolicyId);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    setPolicyName = (name) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                name: name\n            }\n        }))\n    }\n\n    setBannedApps = (apps) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                bannedApps: apps\n            }\n        }))\n    }\n\n    setBannedSites = (sites) => {\n        this.setState(prevState => ({\n            policy: {\n                ...prevState.policy,\n                bannedSites: sites\n            }\n        }))\n    }\n\n    savePolicy = () => {\n        if (this.props.match.params.userPolicyId) {\n            this.props.updatePolicy(this.state.policy);\n        } else {\n            this.props.addPolicy(this.state.policy);\n        }\n    }\n\n    render() {\n\n        if (!this.props.applications ||\n            !this.props.sites ||\n            (!this.state.policy.id && this.props.match.params.userPolicyId)) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>\n                            User policy:\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.policy.name}\n                                onChange={(e) => {\n                                    this.setPolicyName(e.target.value);\n                                }}\n                                placeholder=\"Name\"\n                            />\n                        </h2>\n                        <h3>Banned apps</h3>\n                        <Select isMulti options={this.props.applications}\n                                defaultValue={this.state.policy.bannedApps}\n                                onChange={(apps) => {\n                                    this.setBannedApps(apps);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Banned sites</h3>\n                        <Select isMulti options={this.props.sites}\n                                defaultValue={this.state.policy.bannedSites}\n                                onChange={(sites) => {\n                                    this.setBannedSites(sites);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Users</h3>\n                        {this.state.policy.users.map((item, i) => {\n                                return (<div key={i}>\n                                    <h4>{item.login}</h4>\n                                </div>)\n                            }\n                        )}\n                        <hr/>\n                    </div>\n                    <div>\n                        <Link className=\"btn btn-md btn-outline-primary\" to=\"/userPolicies\">Cancel</Link>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick={this.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.userPolicy.userPolicy,\n        applications: state.applications.applications,\n        sites: state.sites.sites\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(userPolicyActions.getUserPolicy(policyId));\n        },\n        updatePolicy: (policy) => {\n            dispatch(userPolicyActions.updateUserPolicy(policy));\n        },\n        addPolicy: (policy) => {\n            dispatch(userPolicyActions.addUserPolicy(policy));\n        },\n        getApplications: () => {\n            dispatch(applicationActions.getApplications())\n        },\n        getSites: () => {\n            dispatch(siteActions.getSites())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicy);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass app extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default app;\n","import React, {Component} from \"react\";\n\nexport class ConfigElementItem extends Component {\n    state = {\n        item: {\n            id: null,\n            label: null,\n            value: null\n        },\n        edit: false\n    }\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n    render() {\n        return (\n            <li className=\"list-group-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.label}\n                                onChange={this.changeLabel}\n                                placeholder=\"Label\"\n                            />\n                        ) : (\n                            this.state.item.label\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.value}\n                                onChange={this.changeValue}\n                                placeholder=\"Value\"\n                            />\n                        ) : (\n                            this.state.item.value\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-success\"\n                                    onClick={() => {\n                                        this.props.updateItem(this.state.item);\n                                        this.setState({\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Update\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-outline-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            item: this.props.item,\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        ) : (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            edit: true\n                                        });\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-danger\"\n                                    onClick={() => this.props.deleteItem(this.state.item.id)}\n                                >\n                                    Delete\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {ConfigElementItem} from './configElementItem/index';\n\nexport class ConfigElementList extends Component {\n    state = {\n        item: {\n            label: null,\n            value: null\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.props.configElements) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    {this.props.name}\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeLabel}\n                                        placeholder=\"Label\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeValue}\n                                        placeholder=\"Value\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.props.addItem(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.props.configElements.map((configElement, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ConfigElementItem\n                                                        item={configElement}\n                                                        updateItem={this.props.updateItem}\n                                                        deleteItem={this.props.deleteItem}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as applicationsActions from \"../../../actions/applications\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class AppList extends Component {\n    state = {\n        applications: null,\n    }\n\n    componentDidMount() {\n        this.getApplications();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.applications !== prevProps.applications) {\n            this.setState({\n                applications: this.props.applications\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getApplications = () => {\n        this.props.getApplications();\n    }\n\n    addApplication = (application) => {\n        this.props.addApplication(application);\n    }\n\n    updateApplication = (application) => {\n        this.props.updateApplication(application);\n    }\n\n    deleteApplication = (applicationId) => {\n        this.props.deleteApplication(applicationId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Applications\"}\n                configElements={this.state.applications}\n                addItem={this.addApplication}\n                updateItem={this.updateApplication}\n                deleteItem={this.deleteApplication}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        applications: state.applications.applications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getApplications: () => {\n            dispatch(applicationsActions.getApplications());\n        },\n        addApplication: (application) => {\n            dispatch(applicationsActions.addApplication(application));\n        },\n        updateApplication: (application) => {\n            dispatch(applicationsActions.updateApplication(application));\n        },\n        deleteApplication: (applicationId) => {\n            dispatch(applicationsActions.deleteApplication(applicationId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppList);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as sitesActions from \"../../../actions/sites\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class SiteList extends Component {\n    state = {\n        sites: null,\n    }\n\n    componentDidMount() {\n        this.getSites();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.sites !== prevProps.sites) {\n            this.setState({\n                sites: this.props.sites\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getSites = () => {\n        this.props.getSites();\n    }\n\n    addSite = (site) => {\n        this.props.addSite(site);\n    }\n\n    updateSite = (site) => {\n        this.props.updateSite(site);\n    }\n\n    deleteSite = (siteId) => {\n        this.props.deleteSite(siteId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Sites\"}\n                configElements={this.state.sites}\n                addItem={this.addSite}\n                updateItem={this.updateSite}\n                deleteItem={this.deleteSite}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sites: state.sites.sites,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getSites: () => {\n            dispatch(sitesActions.getSites());\n        },\n        addSite: (site) => {\n            dispatch(sitesActions.addSite(site));\n        },\n        updateSite: (site) => {\n            dispatch(sitesActions.updateSite(site));\n        },\n        deleteSite: (siteId) => {\n            dispatch(sitesActions.deleteSite(siteId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SiteList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addService(service){\n    return (dispatch) => {\n        dispatch(addServiceStart());\n        return axios.post(api.addServiceUrl(), service)\n            .then(response => {\n                dispatch(addServiceSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addServiceFail(error.message));\n            });\n    }\n}\n\nexport const addServiceStart = () => ({\n    type: types.ADD_SERVICE_START\n});\n\nexport const addServiceSuccess = (response) => ({\n    type: types.ADD_SERVICE_SUCCESS,\n    response\n});\n\nexport const addServiceFail = (errorMsg) => ({\n    type: types.ADD_SERVICE_FAIL,\n    errorMsg,\n});\n\nexport function updateService(service){\n    return (dispatch) => {\n        dispatch(updateServiceStart());\n        return axios.put(api.updateServiceUrl(), service)\n            .then(response => {\n                dispatch(updateServiceSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateServiceFail(error.message));\n            });\n    }\n}\n\nexport const updateServiceStart = () => ({\n    type: types.UPDATE_SERVICE_START\n});\n\nexport const updateServiceSuccess = (response) => ({\n    type: types.UPDATE_SERVICE_SUCCESS,\n    response\n});\n\nexport const updateServiceFail = (errorMsg) => ({\n    type: types.UPDATE_SERVICE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteService(serviceId){\n    return (dispatch) => {\n        dispatch(deleteServiceStart());\n        return axios.delete(api.deleteServiceUrl(serviceId))\n            .then(response => {\n                dispatch(deleteServiceSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteServiceFail(error.message));\n            });\n    }\n}\n\nexport const deleteServiceStart = () => ({\n    type: types.DELETE_SERVICE_START\n});\n\nexport const deleteServiceSuccess = (response) => ({\n    type: types.DELETE_SERVICE_SUCCESS,\n    response\n});\n\nexport const deleteServiceFail = (errorMsg) => ({\n    type: types.DELETE_SERVICE_FAIL,\n    errorMsg,\n});\n\nexport function getServices(){\n    return (dispatch) => {\n        dispatch(getServicesStart());\n        return axios.get(api.getServicesUrl())\n            .then(response => {\n                dispatch(getServicesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getServicesFail(error.message));\n            });\n    }\n}\n\nexport const getServicesStart = () => ({\n    type: types.GET_SERVICES_START\n});\n\nexport const getServicesSuccess = (response) => ({\n    type: types.GET_SERVICES_SUCCESS,\n    response\n});\n\nexport const getServicesFail = (errorMsg) => ({\n    type: types.GET_SERVICES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as servicesActions from \"../../../actions/services\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class ServiceList extends Component {\n    state = {\n        services: null,\n    }\n\n    componentDidMount() {\n        this.getServices();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.services !== prevProps.services) {\n            this.setState({\n                services: this.props.services\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getServices = () => {\n        this.props.getServices();\n    }\n\n    addService = (service) => {\n        this.props.addService(service);\n    }\n\n    updateService = (service) => {\n        this.props.updateService(service);\n    }\n\n    deleteService = (serviceId) => {\n        this.props.deleteService(serviceId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Services\"}\n                configElements={this.state.services}\n                addItem={this.addService}\n                updateItem={this.updateService}\n                deleteItem={this.deleteService}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        services: state.services.services,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getServices: () => {\n            dispatch(servicesActions.getServices());\n        },\n        addService: (service) => {\n            dispatch(servicesActions.addService(service));\n        },\n        updateService: (service) => {\n            dispatch(servicesActions.updateService(service));\n        },\n        deleteService: (serviceId) => {\n            dispatch(servicesActions.deleteService(serviceId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ServiceList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addUser(user){\n    return (dispatch) => {\n        dispatch(addUserStart());\n        return axios.post(api.addUserUrl(), user)\n            .then(response => {\n                dispatch(addUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addUserFail(error.message));\n            });\n    }\n}\n\nexport const addUserStart = () => ({\n    type: types.ADD_USER_START\n});\n\nexport const addUserSuccess = (response) => ({\n    type: types.ADD_USER_SUCCESS,\n    response\n});\n\nexport const addUserFail = (errorMsg) => ({\n    type: types.ADD_USER_FAIL,\n    errorMsg,\n});\n\nexport function updateUser(user){\n    return (dispatch) => {\n        dispatch(updateUserStart());\n        return axios.put(api.updateUserUrl(), user)\n            .then(response => {\n                dispatch(updateUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateUserFail(error.message));\n            });\n    }\n}\n\nexport const updateUserStart = () => ({\n    type: types.UPDATE_USER_START\n});\n\nexport const updateUserSuccess = (response) => ({\n    type: types.UPDATE_USER_SUCCESS,\n    response\n});\n\nexport const updateUserFail = (errorMsg) => ({\n    type: types.UPDATE_USER_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteUser(userId){\n    return (dispatch) => {\n        dispatch(deleteUserStart());\n        return axios.delete(api.deleteUserUrl(userId))\n            .then(response => {\n                dispatch(deleteUserSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteUserFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserStart = () => ({\n    type: types.DELETE_USER_START\n});\n\nexport const deleteUserSuccess = (response) => ({\n    type: types.DELETE_USER_SUCCESS,\n    response\n});\n\nexport const deleteUserFail = (errorMsg) => ({\n    type: types.DELETE_USER_FAIL,\n    errorMsg,\n});\n\nexport function getUsers(){\n    return (dispatch) => {\n        dispatch(getUsersStart());\n        return axios.get(api.getUsersUrl())\n            .then(response => {\n                dispatch(getUsersSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                // alert(JSON.parse(error))\n                dispatch(getUsersFail(error.message));\n            });\n    }\n}\n\nexport const getUsersStart = () => ({\n    type: types.GET_USERS_START\n});\n\nexport const getUsersSuccess = (response) => ({\n    type: types.GET_USERS_SUCCESS,\n    response\n});\n\nexport const getUsersFail = (errorMsg) => ({\n    type: types.GET_USERS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport Select from 'react-select';\n\nexport class UserItem extends Component {\n    state = {\n        item: {\n            id: null,\n            login: null,\n            password: null,\n            userPolicyId: null,\n            computerId: null\n        },\n        edit: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.state.item.id || !this.props.policies) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.login}\n                                    onChange={this.changeLogin}\n                                    placeholder=\"Login\"\n                                />\n                            ) : (\n                                this.state.item.login\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.password}\n                                    onChange={this.changePassword}\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n                        ) : (\n                            <div></div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <Select options={this.props.policies}\n                                        defaultValue={this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0]}\n                                        onChange={(policy) => {\n                                            this.changePolicy(policy);\n                                        }}\n                                />\n                            ) : (\n                                this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0].label\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div></div>\n                        ) : (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                {this.state.item.computerId}\n                            </div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => {\n                                            this.props.updateItem(this.state.item);\n                                            this.setState({\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Update\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-outline-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                item: this.props.item,\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            ) : (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                edit: true\n                                            });\n                                        }}\n                                    >\n                                        Edit\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-danger\"\n                                        onClick={() => this.props.deleteItem(this.state.item.id)}\n                                    >\n                                        Delete\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as usersActions from \"../../../actions/users\"\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserItem} from \"./userItem/index\";\nimport Select from \"react-select\";\n\nexport class UserList extends Component {\n    state = {\n        item: {\n            login: null,\n            password: null,\n            userPolicyId: null\n        },\n        users: null,\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n        this.getUsers();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.users !== prevProps.users) {\n            this.setState({\n                users: this.props.users\n            })\n        }\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    getUsers = () => {\n        this.props.getUsers();\n    }\n\n    addUser = (user) => {\n        this.props.addUser(user);\n    }\n\n    updateUser = (user) => {\n        this.props.updateUser(user);\n    }\n\n    deleteUser = (userId) => {\n        this.props.deleteUser(userId);\n    }\n\n    render() {\n        if (!this.state.users || !this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Users\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.login}\n                                            onChange={this.changeLogin}\n                                            placeholder=\"Login\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.password}\n                                            onChange={this.changePassword}\n                                            placeholder=\"Password\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <Select options={this.state.policies}\n                                                defaultValue={this.state.policies[0]}\n                                                onChange={(policy) => {\n                                                    this.changePolicy(policy);\n                                                }}\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.addUser(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.users.map((user, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserItem\n                                                        item={user}\n                                                        policies={this.state.policies}\n                                                        updateItem={this.updateUser}\n                                                        deleteItem={this.deleteUser}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies,\n        users: state.users.users,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(usersActions.getUsers());\n        },\n        addUser: (user) => {\n            dispatch(usersActions.addUser(user));\n        },\n        updateUser: (user) => {\n            dispatch(usersActions.updateUser(user));\n        },\n        deleteUser: (userId) => {\n            dispatch(usersActions.deleteUser(userId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserList);\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyItem extends Component {\n    state = {\n        item: {\n            id: null,\n            name: null,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: {\n                id: this.props.item.value,\n                name: this.props.item.label\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: {\n                    id: this.props.item.value,\n                    name: this.props.item.label\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.item.name}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            <Link className=\"btn btn-md btn-primary\" to={\"/userPolicy/\" + this.state.item.id}>Edit</Link>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.state.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserPolicyItem} from \"./userPolicyItem/index\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyList extends Component {\n    state = {\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    deletePolicy = (policyId) => {\n        this.props.deletePolicy(policyId);\n    }\n\n    render() {\n        if (!this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    User Policies\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.policies.map((policy, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserPolicyItem\n                                                        item={policy}\n                                                        deleteItem={this.deletePolicy}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"float\" to=\"/userPolicy\">\n                        <i color=\"primary\" className=\"material-icons\">add</i>\n                    </Link>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePolicy: (policyId) => {\n            dispatch(userPolicyActions.deleteUserPolicy(policyId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicyList);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nimport AppNavbarHeader from '../components/appNavbarHeader';\nimport ComputerPolicy from '../components/computerPolicy';\nimport UserPolicy from '../components/userPolicy';\nimport app from '../App'\nimport AppList from \"../components/lists/appList\";\nimport SiteList from \"../components/lists/siteList\";\nimport ServiceList from \"../components/lists/serviceList\";\nimport UserList from \"../components/lists/userList/index\";\nimport UserPolicyList from \"../components/lists/userPolicyList\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbarHeader/>\n                <Route exact path=\"/\" component={app}/>\n                <Route path=\"/computerPolicy/:computerPolicyId?\" component={ComputerPolicy}/>\n                <Route path=\"/userPolicy/:userPolicyId?\" component={UserPolicy}/>\n                <Route path=\"/applications\" component={AppList}/>\n                <Route path=\"/sites\" component={SiteList}/>\n                <Route path=\"/services\" component={ServiceList}/>\n                <Route path=\"/users\" component={UserList}/>\n                <Route path=\"/userPolicies\" component={UserPolicyList}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\nimport store from './store'\nimport App from './containers/app';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}