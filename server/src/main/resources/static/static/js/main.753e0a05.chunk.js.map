{"version":3,"sources":["constants/actionsConstants.js","reducers/computerPolicy.js","reducers/userPolicy.js","reducers/applications.js","reducers/sites.js","reducers/loginMethods.js","reducers/users.js","reducers/index.js","store.js","components/appNavbarHeader/index.js","components/computerPolicy/index.js","constants/apiEndpoints.js","actions/userPolicy.js","actions/loginMethods.js","actions/applications.js","actions/sites.js","components/policy/index.js","components/userPolicy/index.js","App.js","components/lists/configElementList/configElementItem/index.js","components/lists/configElementList/index.js","components/lists/appList/index.js","components/lists/siteList/index.js","actions/users.js","components/lists/userList/userItem/index.js","components/lists/userList/index.js","containers/app.js","index.js","logo.svg"],"names":["GET_USER_POLICY_START","GET_USER_POLICY_SUCCESS","GET_USER_POLICY_FAIL","GET_USER_POLICIES_START","GET_USER_POLICIES_SUCCESS","GET_USER_POLICIES_FAIL","SAVE_USER_POLICY_START","SAVE_USER_POLICY_SUCCESS","SAVE_USER_POLICY_FAIL","GET_COMPUTER_POLICY_START","GET_COMPUTER_POLICY_SUCCESS","GET_COMPUTER_POLICY_FAIL","SAVE_COMPUTER_POLICY_START","SAVE_COMPUTER_POLICY_SUCCESS","SAVE_COMPUTER_POLICY_FAIL","GET_APPLICATIONS_START","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ADD_APPLICATION_START","ADD_APPLICATION_SUCCESS","ADD_APPLICATION_FAIL","DELETE_APPLICATION_START","DELETE_APPLICATION_SUCCESS","DELETE_APPLICATION_FAIL","UPDATE_APPLICATION_START","UPDATE_APPLICATION_SUCCESS","UPDATE_APPLICATION_FAIL","GET_SITES_START","GET_SITES_SUCCESS","GET_SITES_FAIL","ADD_SITE_START","ADD_SITE_SUCCESS","ADD_SITE_FAIL","DELETE_SITE_START","DELETE_SITE_SUCCESS","DELETE_SITE_FAIL","UPDATE_SITE_START","UPDATE_SITE_SUCCESS","UPDATE_SITE_FAIL","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAIL","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","GET_LOGIN_METHODS_START","GET_LOGIN_METHODS_SUCCESS","GET_LOGIN_METHODS_FAIL","initialState","errorMsg","computerPolicy","saveComputerPolicyInProgress","getComputerPolicyInProgress","userPolicy","userPolicies","saveUserPolicyInProgress","getUserPolicyInProgress","getUserPoliciesInProgress","applications","addApplicationInProgress","getApplicationsInProgress","deleteApplicationInProgress","updateApplicationInProgress","sites","addSiteInProgress","getSitesInProgress","deleteSiteInProgress","updateSiteInProgress","loginMethods","getLoginMethodsInProgress","users","addUserInProgress","getUsersInProgress","deleteUserInProgress","updateUserInProgress","appReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","response","data","concat","toConsumableArray","filter","app","id","map","label","value","site","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createHashHistory","AppNavbarHeader","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","user","click","console","log","push","pathname","inherits","createClass","key","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","className","NavDropdown_default","title","Item","Link","Form_default","inline","FormControl_default","placeholder","Button_default","variant","Component","connect","dispatch","ComputerPolicy","API_URL","process","REACT_APP_STAGE","getUserPoliciesUrl","getUserPolicyUrl","policyId","updateUserPolicyUrl","getUsersUrl","updateUserUrl","addUserUrl","deleteUserUrl","applicationId","getApplicationsUrl","updateApplicationUrl","addApplicationUrl","deleteApplicationUrl","getSitesUrl","updateSiteUrl","addSiteUrl","deleteSiteUrl","sitesId","getLoginMethodsUrl","getUserPoliciesStart","getUserPoliciesSuccess","getUserPoliciesFail","saveUserPolicyStart","saveUserPolicySuccess","saveUserPolicyFail","getUserPolicyStart","getUserPolicySuccess","getUserPolicyFail","getLoginMethodsStart","getLoginMethodsSuccess","getLoginMethodsFail","addApplicationStart","addApplicationSuccess","addApplicationFail","updateApplicationStart","updateApplicationSuccess","updateApplicationFail","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFail","getApplications","getApplicationsStart","axios","get","api","then","getApplicationsSuccess","catch","error","alert","JSON","parse","getApplicationsFail","message","addSiteStart","addSiteSuccess","addSiteFail","updateSiteStart","updateSiteSuccess","updateSiteFail","deleteSiteStart","deleteSiteSuccess","deleteSiteFail","getSites","getSitesStart","getSitesSuccess","request","reason","getSitesFail","Policy","props","getLoginMethods","policyType","policy","name","react_select_esm","isMulti","options","defaultValue","bannedApps","onChange","apps","setBannedApps","bannedSites","setBannedSites","setLoginMethods","onClick","savePolicy","src","UserPolicy","getPolicy","prevProps","setState","_this2","components_policy","prevState","userPolicyId","put","logo","alt","target","rel","ConfigElementItem","item","edit","changeLabel","e","changeValue","updateItem","deleteItem","ConfigElementList","configElements","addItem","configElement","i","configElementItem_ConfigElementItem","AppList","addApplication","application","updateApplication","deleteApplication","configElementList_ConfigElementList","applicationsActions","post","delete","SiteList","addSite","updateSite","deleteSite","siteId","sitesActions","addUserStart","addUserSuccess","addUserFail","updateUserStart","updateUserSuccess","updateUserFail","deleteUserStart","deleteUserSuccess","deleteUserFail","getUsersStart","getUsersSuccess","getUsersFail","UserItem","login","password","computerId","changeLogin","changePassword","changePolicy","policies","UserList","getPolicies","getUsers","addUser","updateUser","deleteUser","userId","userItem_UserItem","usersActions","App","appNavbarHeader","Route","exact","path","component","ReactDOM","render","es","HashRouter","containers_app","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.753e0a05.chunk.js","sourcesContent":["/* Login */\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const LOGOUT_START = 'LOGOUT_START';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\n\r\n/* UserPolicy */\r\nexport const GET_USER_POLICY_START = 'GET_USER_POLICY_START';\r\nexport const GET_USER_POLICY_SUCCESS = 'GET_USER_POLICY_SUCCESS';\r\nexport const GET_USER_POLICY_FAIL = 'GET_USER_POLICY_FAIL';\r\nexport const GET_USER_POLICIES_START = 'GET_USER_POLICIES_START';\r\nexport const GET_USER_POLICIES_SUCCESS = 'GET_USER_POLICIES_SUCCESS';\r\nexport const GET_USER_POLICIES_FAIL = 'GET_USER_POLICIES_FAIL';\r\nexport const SAVE_USER_POLICY_START = 'SAVE_USER_POLICY_START';\r\nexport const SAVE_USER_POLICY_SUCCESS = 'SAVE_USER_POLICY_SUCCESS';\r\nexport const SAVE_USER_POLICY_FAIL = 'SAVE_USER_POLICY_FAIL';\r\n\r\n/* ComputerPolicy */\r\nexport const GET_COMPUTER_POLICY_START = 'GET_COMPUTER_POLICY_START';\r\nexport const GET_COMPUTER_POLICY_SUCCESS = 'GET_COMPUTER_POLICY_SUCCESS';\r\nexport const GET_COMPUTER_POLICY_FAIL = 'GET_COMPUTER_POLICY_FAIL';\r\nexport const SAVE_COMPUTER_POLICY_START = 'SAVE_COMPUTER_POLICY_START';\r\nexport const SAVE_COMPUTER_POLICY_SUCCESS = 'SAVE_COMPUTER_POLICY_SUCCESS';\r\nexport const SAVE_COMPUTER_POLICY_FAIL = 'SAVE_COMPUTER_POLICY_FAIL';\r\n\r\n/* Applications */\r\nexport const GET_APPLICATIONS_START = 'GET_APPLICATIONS_START';\r\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\r\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\r\nexport const ADD_APPLICATION_START = 'ADD_APPLICATION_START';\r\nexport const ADD_APPLICATION_SUCCESS = 'ADD_APPLICATION_SUCCESS';\r\nexport const ADD_APPLICATION_FAIL = 'ADD_APPLICATION_FAIL';\r\nexport const DELETE_APPLICATION_START = 'DELETE_APPLICATION_START';\r\nexport const DELETE_APPLICATION_SUCCESS = 'DELETE_APPLICATION_SUCCESS';\r\nexport const DELETE_APPLICATION_FAIL = 'DELETE_APPLICATION_FAIL';\r\nexport const UPDATE_APPLICATION_START = 'UPDATE_APPLICATION_START';\r\nexport const UPDATE_APPLICATION_SUCCESS = 'UPDATE_APPLICATION_SUCCESS';\r\nexport const UPDATE_APPLICATION_FAIL = 'UPDATE_APPLICATION_FAIL';\r\n\r\n/* Sites */\r\nexport const GET_SITES_START = 'GET_SITES_START';\r\nexport const GET_SITES_SUCCESS = 'GET_SITES_SUCCESS';\r\nexport const GET_SITES_FAIL = 'GET_SITES_FAIL';\r\nexport const ADD_SITE_START = 'ADD_SITE_START';\r\nexport const ADD_SITE_SUCCESS = 'ADD_SITE_SUCCESS';\r\nexport const ADD_SITE_FAIL = 'ADD_SITE_FAIL';\r\nexport const DELETE_SITE_START = 'DELETE_SITE_START';\r\nexport const DELETE_SITE_SUCCESS = 'DELETE_SITE_SUCCESS';\r\nexport const DELETE_SITE_FAIL = 'DELETE_SITE_FAIL';\r\nexport const UPDATE_SITE_START = 'UPDATE_SITE_START';\r\nexport const UPDATE_SITE_SUCCESS = 'UPDATE_SITE_SUCCESS';\r\nexport const UPDATE_SITE_FAIL = 'UPDATE_SITE_FAIL';\r\n\r\n/* Users */\r\nexport const GET_USERS_START = 'GET_USERS_START';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\r\nexport const ADD_USER_START = 'ADD_USER_START';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\r\nexport const DELETE_USER_START = 'DELETE_USER_START';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\nexport const UPDATE_USER_START = 'UPDATE_USER_START';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\n\r\n/* Login Methods */\r\nexport const GET_LOGIN_METHODS_START = 'GET_LOGIN_METHODS_START';\r\nexport const GET_LOGIN_METHODS_SUCCESS = 'GET_LOGIN_METHODS_SUCCESS';\r\nexport const GET_LOGIN_METHODS_FAIL = 'GET_LOGIN_METHODS_FAIL';\r\n","import * as types from \"../constants/actionsConstants\";\r\n\r\nconst initialState = {\r\n    errorMsg: null,\r\n    computerPolicy: null,\r\n    saveComputerPolicyInProgress: false,\r\n    getComputerPolicyInProgress: false\r\n}\r\n\r\nexport default function orgs(state = initialState, action={}) {\r\n    switch (action.type) {\r\n        case types.SAVE_COMPUTER_POLICY_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                saveComputerPolicyInProgress: true\r\n            };\r\n        case types.SAVE_COMPUTER_POLICY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                computerPolicy: action.response.data,\r\n                saveComputerPolicyInProgress: false,\r\n            };\r\n        case types.SAVE_COMPUTER_POLICY_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                saveComputerPolicyInProgress: false,\r\n            };\r\n        case types.GET_COMPUTER_POLICY_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getComputerPolicyInProgress: true\r\n            };\r\n        case types.GET_COMPUTER_POLICY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                computerPolicy: action.response.data,\r\n                getComputerPolicyInProgress: false,\r\n            };\r\n        case types.GET_COMPUTER_POLICY_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getComputerPolicyInProgress: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../constants/actionsConstants\";\r\n\r\nconst initialState = {\r\n    errorMsg: null,\r\n    userPolicy: null,\r\n    userPolicies: null,\r\n    saveUserPolicyInProgress: false,\r\n    getUserPolicyInProgress: false,\r\n    getUserPoliciesInProgress: false,\r\n}\r\n\r\nexport default function orgs(state = initialState, action={}) {\r\n    switch (action.type) {\r\n        case types.SAVE_USER_POLICY_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                saveUserPolicyInProgress: true\r\n            };\r\n        case types.SAVE_USER_POLICY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                saveUserPolicyInProgress: false,\r\n            };\r\n        case types.SAVE_USER_POLICY_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                saveUserPolicyInProgress: false,\r\n            };\r\n        case types.GET_USER_POLICY_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getUserPolicyInProgress: true\r\n            };\r\n        case types.GET_USER_POLICY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                userPolicy: action.response.data,\r\n                getUserPolicyInProgress: false,\r\n            };\r\n        case types.GET_USER_POLICY_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getUserPolicyInProgress: false,\r\n            };\r\n        case types.GET_USER_POLICIES_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getUserPoliciesInProgress: true\r\n            };\r\n        case types.GET_USER_POLICIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                userPolicies: action.response.data,\r\n                getUserPoliciesInProgress: false,\r\n            };\r\n        case types.GET_USER_POLICIES_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getUserPoliciesInProgress: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../constants/actionsConstants\";\r\n\r\nconst initialState = {\r\n    errorMsg: null,\r\n    applications: null,\r\n    addApplicationInProgress: false,\r\n    getApplicationsInProgress: false,\r\n    deleteApplicationInProgress: false,\r\n    updateApplicationInProgress: false,\r\n}\r\n\r\nexport default function orgs(state = initialState, action={}) {\r\n    switch (action.type) {\r\n        case types.ADD_APPLICATION_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                addApplicationInProgress: true\r\n            };\r\n        case types.ADD_APPLICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                addApplicationInProgress: false,\r\n                applications: [...state.applications, action.response.data]\r\n            };\r\n        case types.ADD_APPLICATION_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                addApplicationInProgress: false,\r\n            };\r\n        case types.GET_APPLICATIONS_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getApplicationsInProgress: true\r\n            };\r\n        case types.GET_APPLICATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                applications: action.response.data,\r\n                getApplicationsInProgress: false,\r\n            };\r\n        case types.GET_APPLICATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getApplicationsInProgress: false,\r\n            };\r\n        case types.DELETE_APPLICATION_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                deleteApplicationInProgress: true\r\n            };\r\n        case types.DELETE_APPLICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                applications: [...state.applications.filter(app => app.id !== action.response.data)],\r\n                deleteApplicationInProgress: false,\r\n            };\r\n        case types.DELETE_APPLICATION_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                deleteApplicationInProgress: false,\r\n            };\r\n        case types.UPDATE_APPLICATION_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                updateApplicationInProgress: true\r\n            };\r\n        case types.UPDATE_APPLICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                applications: [...state.applications.map(app => {\r\n                    if (app.id === action.response.data.id) {\r\n                        app.label = action.response.data.label;\r\n                        app.value = action.response.data.value;\r\n                    }\r\n                    return app;\r\n                })],\r\n                updateApplicationInProgress: false,\r\n            };\r\n        case types.UPDATE_APPLICATION_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                updateApplicationInProgress: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../constants/actionsConstants\";\r\n\r\nconst initialState = {\r\n    errorMsg: null,\r\n    sites: null,\r\n    addSiteInProgress: false,\r\n    getSitesInProgress: false,\r\n    deleteSiteInProgress: false,\r\n    updateSiteInProgress: false,\r\n}\r\n\r\nexport default function orgs(state = initialState, action={}) {\r\n    switch (action.type) {\r\n        case types.ADD_SITE_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                addSiteInProgress: true\r\n            };\r\n        case types.ADD_SITE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                addSiteInProgress: false,\r\n                sites: [...state.sites, action.response.data]\r\n            };\r\n        case types.ADD_SITE_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                addSiteInProgress: false,\r\n            };\r\n        case types.GET_SITES_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getSitesInProgress: true\r\n            };\r\n        case types.GET_SITES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                sites: action.response.data,\r\n                getSitesInProgress: false,\r\n            };\r\n        case types.GET_SITES_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getSitesInProgress: false,\r\n            };\r\n        case types.DELETE_SITE_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                deleteSiteInProgress: true\r\n            };\r\n        case types.DELETE_SITE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                sites: [...state.sites.filter(site => site.id !== action.response.data)],\r\n                deleteSiteInProgress: false,\r\n            };\r\n        case types.DELETE_SITE_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                deleteSiteInProgress: false,\r\n            };\r\n        case types.UPDATE_SITE_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                updateSiteInProgress: true\r\n            };\r\n        case types.UPDATE_SITE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                sites: [...state.sites.map(site => {\r\n                    if (site.id === action.response.data.id) {\r\n                        site.label = action.response.data.label;\r\n                        site.value = action.response.data.value;\r\n                    }\r\n                    return site;\r\n                })],\r\n                updateSiteInProgress: false,\r\n            };\r\n        case types.UPDATE_SITE_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                updateSiteInProgress: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../constants/actionsConstants\";\r\n\r\nconst initialState = {\r\n    errorMsg: null,\r\n    loginMethods: null,\r\n    getLoginMethodsInProgress: false,\r\n}\r\n\r\nexport default function orgs(state = initialState, action={}) {\r\n    switch (action.type) {\r\n        case types.GET_LOGIN_METHODS_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getLoginMethodsInProgress: true\r\n            };\r\n        case types.GET_LOGIN_METHODS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                loginMethods: action.response.data,\r\n                getLoginMethodsInProgress: false,\r\n            };\r\n        case types.GET_LOGIN_METHODS_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getLoginMethodsInProgress: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../constants/actionsConstants\";\r\n\r\nconst initialState = {\r\n    errorMsg: null,\r\n    users: null,\r\n    addUserInProgress: false,\r\n    getUsersInProgress: false,\r\n    deleteUserInProgress: false,\r\n    updateUserInProgress: false,\r\n}\r\n\r\nexport default function orgs(state = initialState, action={}) {\r\n    switch (action.type) {\r\n        case types.ADD_USER_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                addUserInProgress: true\r\n            };\r\n        case types.ADD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                addUserInProgress: false,\r\n                users: [...state.users, action.response.data]\r\n            };\r\n        case types.ADD_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                addUserInProgress: false,\r\n            };\r\n        case types.GET_USERS_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                getUsersInProgress: true\r\n            };\r\n        case types.GET_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                users: action.response.data,\r\n                getUsersInProgress: false,\r\n            };\r\n        case types.GET_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                getUsersInProgress: false,\r\n            };\r\n        case types.DELETE_USER_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                deleteUserInProgress: true\r\n            };\r\n        case types.DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                users: [...state.users.filter(app => app.id !== action.response.data)],\r\n                deleteUserInProgress: false,\r\n            };\r\n        case types.DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                deleteUserInProgress: false,\r\n            };\r\n        case types.UPDATE_USER_START:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                updateUserInProgress: true\r\n            };\r\n        case types.UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n                users: [...state.users.map(app => {\r\n                    if (app.id === action.response.data.id) {\r\n                        app.label = action.response.data.label;\r\n                        app.value = action.response.data.value;\r\n                    }\r\n                    return app;\r\n                })],\r\n                updateUserInProgress: false,\r\n            };\r\n        case types.UPDATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg,\r\n                updateUserInProgress: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport computerPolicy from './computerPolicy';\r\nimport userPolicy from './userPolicy';\r\nimport applications from './applications';\r\nimport sites from './sites';\r\nimport loginMethods from './loginMethods';\r\nimport users from './users';\r\n\r\nconst appReducer = combineReducers({\r\n    computerPolicy,\r\n    userPolicy,\r\n    applications,\r\n    sites,\r\n    loginMethods,\r\n    users\r\n});\r\nconst rootReducer = (state, action) => {\r\n    if(action.type === 'LOGOUT'){\r\n        state = undefined;\r\n    }\r\n    return appReducer(state, action);\r\n}\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport rootReducer from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport const history = createHashHistory();\r\n\r\nexport default store;\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { history } from '../../store'\r\n\r\n\r\nexport class AppNavbarHeader extends Component {\r\n    state = {\r\n        user: undefined\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    click = () => {\r\n        console.log(\"fsg\");\r\n        history.push({pathname: \"/userPolicy\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#/\">Access system</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#/users\">Users</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#/userPolicy\">User policies</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <NavDropdown title=\"Computer\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#\">Computers</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#/computerPolicy\">Computer policies</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link href=\"#/applications\">Applications</Nav.Link>\r\n                        <Nav.Link href=\"#/sites\">Sites</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\r\n                        <Button variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppNavbarHeader);\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nexport class ComputerPolicy extends Component {\r\n    state = {\r\n        user: undefined\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>computer policy</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ComputerPolicy);\r\n","var API_URL = \"\";\r\n\r\nprocess.env.REACT_APP_STAGE === 'dev'\r\n    ? API_URL = 'http://localhost:8080/api'\r\n    : API_URL = '/api'\r\n\r\n/* User Policy */\r\nexport const getUserPoliciesUrl = () => {\r\n    return API_URL + \"/userPolicies\";\r\n}\r\n\r\nexport const getUserPolicyUrl = (policyId) => {\r\n    return API_URL + \"/userPolicy/\" + policyId;\r\n}\r\n\r\nexport const updateUserPolicyUrl = () => {\r\n    return API_URL + \"/userPolicy\";\r\n}\r\n\r\nexport const addUserPolicyUrl = () => {\r\n    return API_URL + \"/userPolicy\";\r\n}\r\n\r\nexport const deleteUserPolicyUrl = (policyId) => {\r\n    return API_URL + \"/userPolicy/\" + policyId;\r\n}\r\n\r\n/* Applications */\r\nexport const getUsersUrl = () => {\r\n    return API_URL + \"/user\";\r\n}\r\n\r\nexport const updateUserUrl = () => {\r\n    return API_URL + \"/user\";\r\n}\r\n\r\nexport const addUserUrl = () => {\r\n    return API_URL + \"/user\";\r\n}\r\n\r\nexport const deleteUserUrl = (applicationId) => {\r\n    return API_URL + \"/user/\" + applicationId;\r\n}\r\n\r\n/* Applications */\r\nexport const getApplicationsUrl = () => {\r\n    return API_URL + \"/application\";\r\n}\r\n\r\nexport const updateApplicationUrl = () => {\r\n    return API_URL + \"/application\";\r\n}\r\n\r\nexport const addApplicationUrl = () => {\r\n    return API_URL + \"/application\";\r\n}\r\n\r\nexport const deleteApplicationUrl = (applicationId) => {\r\n    return API_URL + \"/application/\" + applicationId;\r\n}\r\n\r\n/* Sites */\r\nexport const getSitesUrl = () => {\r\n    return API_URL + \"/site\";\r\n}\r\n\r\nexport const updateSiteUrl = () => {\r\n    return API_URL + \"/site\";\r\n}\r\n\r\nexport const addSiteUrl = () => {\r\n    return API_URL + \"/site\";\r\n}\r\n\r\nexport const deleteSiteUrl = (sitesId) => {\r\n    return API_URL + \"/site/\" + sitesId;\r\n}\r\n\r\n/* Login methods*/\r\nexport const getLoginMethodsUrl = () => {\r\n    return API_URL + \"/loginMethod\";\r\n}\r\n","import axios from 'axios';\r\nimport * as api from \"../constants/apiEndpoints\";\r\nimport * as types from '../constants/actionsConstants';\r\n\r\nexport function getUserPolicies(){\r\n    return (dispatch) => {\r\n        dispatch(getUserPoliciesStart());\r\n        return axios.get(api.getUserPoliciesUrl())\r\n            .then(response => {\r\n                dispatch(getUserPoliciesSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n            console.log(error)\r\n                alert(JSON.parse(error.request.response).reason)\r\n                dispatch(getUserPoliciesFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserPoliciesStart = () => ({\r\n    type: types.GET_USER_POLICIES_START\r\n});\r\n\r\nexport const getUserPoliciesSuccess = (response) => ({\r\n    type: types.GET_USER_POLICIES_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const getUserPoliciesFail = (errorMsg) => ({\r\n    type: types.GET_USER_POLICIES_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function saveUserPolicy(userPolicy){\r\n    return (dispatch) => {\r\n        dispatch(saveUserPolicyStart());\r\n        return axios.put(api.updateUserPolicyUrl(userPolicy.id), userPolicy)\r\n            .then(response => {\r\n                dispatch(saveUserPolicySuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error.request.response).reason)\r\n                dispatch(saveUserPolicyFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const saveUserPolicyStart = () => ({\r\n    type: types.SAVE_USER_POLICY_START\r\n});\r\n\r\nexport const saveUserPolicySuccess = (response) => ({\r\n    type: types.SAVE_USER_POLICY_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const saveUserPolicyFail = (errorMsg) => ({\r\n    type: types.SAVE_USER_POLICY_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function getUserPolicy(userPolicyId){\r\n    return (dispatch) => {\r\n        dispatch(getUserPolicyStart());\r\n        return axios.get(api.getUserPolicyUrl(userPolicyId))\r\n            .then(response => {\r\n                dispatch(getUserPolicySuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error.request.response).reason)\r\n                dispatch(getUserPolicyFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserPolicyStart = () => ({\r\n    type: types.GET_USER_POLICY_START\r\n});\r\n\r\nexport const getUserPolicySuccess = (response) => ({\r\n    type: types.GET_USER_POLICY_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const getUserPolicyFail = (errorMsg) => ({\r\n    type: types.GET_USER_POLICY_FAIL,\r\n    errorMsg,\r\n});","import axios from 'axios';\r\nimport * as api from \"../constants/apiEndpoints\";\r\nimport * as types from '../constants/actionsConstants';\r\n\r\nexport function getLoginMethods(){\r\n    return (dispatch) => {\r\n        dispatch(getLoginMethodsStart());\r\n        return axios.get(api.getLoginMethodsUrl())\r\n            .then(response => {\r\n                dispatch(getLoginMethodsSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error.request.response).reason)\r\n                dispatch(getLoginMethodsFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const getLoginMethodsStart = () => ({\r\n    type: types.GET_LOGIN_METHODS_START\r\n});\r\n\r\nexport const getLoginMethodsSuccess = (response) => ({\r\n    type: types.GET_LOGIN_METHODS_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const getLoginMethodsFail = (errorMsg) => ({\r\n    type: types.GET_LOGIN_METHODS_FAIL,\r\n    errorMsg,\r\n});","import axios from 'axios';\r\nimport * as api from \"../constants/apiEndpoints\";\r\nimport * as types from '../constants/actionsConstants';\r\n\r\nexport function addApplication(application){\r\n    return (dispatch) => {\r\n        dispatch(addApplicationStart());\r\n        return axios.post(api.addApplicationUrl(), application)\r\n            .then(response => {\r\n                dispatch(addApplicationSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error))\r\n                dispatch(addApplicationFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const addApplicationStart = () => ({\r\n    type: types.ADD_APPLICATION_START\r\n});\r\n\r\nexport const addApplicationSuccess = (response) => ({\r\n    type: types.ADD_APPLICATION_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const addApplicationFail = (errorMsg) => ({\r\n    type: types.ADD_APPLICATION_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function updateApplication(application){\r\n    return (dispatch) => {\r\n        dispatch(updateApplicationStart());\r\n        return axios.put(api.updateApplicationUrl(), application)\r\n            .then(response => {\r\n                dispatch(updateApplicationSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error))\r\n                dispatch(updateApplicationFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateApplicationStart = () => ({\r\n    type: types.UPDATE_APPLICATION_START\r\n});\r\n\r\nexport const updateApplicationSuccess = (response) => ({\r\n    type: types.UPDATE_APPLICATION_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const updateApplicationFail = (errorMsg) => ({\r\n    type: types.UPDATE_APPLICATION_FAIL,\r\n    errorMsg,\r\n});\r\n\r\n\r\nexport function deleteApplication(applicationId){\r\n    return (dispatch) => {\r\n        dispatch(deleteApplicationStart());\r\n        return axios.delete(api.deleteApplicationUrl(applicationId))\r\n            .then(response => {\r\n                dispatch(deleteApplicationSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(JSON.parse(error))\r\n                dispatch(deleteApplicationFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteApplicationStart = () => ({\r\n    type: types.DELETE_APPLICATION_START\r\n});\r\n\r\nexport const deleteApplicationSuccess = (response) => ({\r\n    type: types.DELETE_APPLICATION_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const deleteApplicationFail = (errorMsg) => ({\r\n    type: types.DELETE_APPLICATION_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function getApplications(){\r\n    return (dispatch) => {\r\n        dispatch(getApplicationsStart());\r\n        return axios.get(api.getApplicationsUrl())\r\n            .then(response => {\r\n                dispatch(getApplicationsSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error))\r\n                dispatch(getApplicationsFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const getApplicationsStart = () => ({\r\n    type: types.GET_APPLICATIONS_START\r\n});\r\n\r\nexport const getApplicationsSuccess = (response) => ({\r\n    type: types.GET_APPLICATIONS_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const getApplicationsFail = (errorMsg) => ({\r\n    type: types.GET_APPLICATIONS_FAIL,\r\n    errorMsg,\r\n});","import axios from 'axios';\r\nimport * as api from \"../constants/apiEndpoints\";\r\nimport * as types from '../constants/actionsConstants';\r\n\r\nexport function addSite(site){\r\n    return (dispatch) => {\r\n        dispatch(addSiteStart());\r\n        return axios.post(api.addSiteUrl(), site)\r\n            .then(response => {\r\n                dispatch(addSiteSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error.request.response).reason)\r\n                dispatch(addSiteFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const addSiteStart = () => ({\r\n    type: types.ADD_SITE_START\r\n});\r\n\r\nexport const addSiteSuccess = (response) => ({\r\n    type: types.ADD_SITE_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const addSiteFail = (errorMsg) => ({\r\n    type: types.ADD_SITE_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function updateSite(site){\r\n    return (dispatch) => {\r\n        dispatch(updateSiteStart());\r\n        return axios.put(api.updateSiteUrl(), site)\r\n            .then(response => {\r\n                dispatch(updateSiteSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error))\r\n                dispatch(updateSiteFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateSiteStart = () => ({\r\n    type: types.UPDATE_SITE_START\r\n});\r\n\r\nexport const updateSiteSuccess = (response) => ({\r\n    type: types.UPDATE_SITE_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const updateSiteFail = (errorMsg) => ({\r\n    type: types.UPDATE_SITE_FAIL,\r\n    errorMsg,\r\n});\r\n\r\n\r\nexport function deleteSite(siteId){\r\n    return (dispatch) => {\r\n        dispatch(deleteSiteStart());\r\n        return axios.delete(api.deleteSiteUrl(siteId))\r\n            .then(response => {\r\n                dispatch(deleteSiteSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(JSON.parse(error))\r\n                dispatch(deleteSiteFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteSiteStart = () => ({\r\n    type: types.DELETE_SITE_START\r\n});\r\n\r\nexport const deleteSiteSuccess = (response) => ({\r\n    type: types.DELETE_SITE_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const deleteSiteFail = (errorMsg) => ({\r\n    type: types.DELETE_SITE_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function getSites(){\r\n    return (dispatch) => {\r\n        dispatch(getSitesStart());\r\n        return axios.get(api.getSitesUrl())\r\n            .then(response => {\r\n                dispatch(getSitesSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error.request.response).reason)\r\n                dispatch(getSitesFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSitesStart = () => ({\r\n    type: types.GET_SITES_START\r\n});\r\n\r\nexport const getSitesSuccess = (response) => ({\r\n    type: types.GET_SITES_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const getSitesFail = (errorMsg) => ({\r\n    type: types.GET_SITES_FAIL,\r\n    errorMsg,\r\n});","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport {getLoginMethods} from \"../../actions/loginMethods\";\r\nimport {getApplications} from \"../../actions/applications\";\r\nimport {getSites} from \"../../actions/sites\";\r\n\r\n\r\nexport class Policy extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getApplications();\r\n        this.props.getSites();\r\n        this.props.getLoginMethods();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.applications ||\r\n            !this.props.sites ||\r\n            !this.props.loginMethods\r\n        ) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <h2>{ this.props.policyType} policy: {this.props.policy.name}</h2>\r\n                        <h3>Banned apps</h3>\r\n                        <Select isMulti options={this.props.applications}\r\n                                defaultValue={this.props.policy.bannedApps}\r\n                                onChange={(apps) => {\r\n                                    this.props.setBannedApps(apps);\r\n                                }}\r\n                        />\r\n                        <hr/>\r\n                        <h3>Banned sites</h3>\r\n                        <Select isMulti options={this.props.sites}\r\n                                defaultValue={this.props.policy.bannedSites}\r\n                                onChange={(sites) => {\r\n                                    this.props.setBannedSites(sites);\r\n                                }}\r\n                        />\r\n                        <hr/>\r\n                        <h3>Login methods</h3>\r\n                        <Select isMulti options={this.props.loginMethods}\r\n                                defaultValue={this.props.policy.loginMethods}\r\n                                onChange={(loginMethods) => {\r\n                                    this.props.setLoginMethods(loginMethods);\r\n                                }}\r\n                        />\r\n                        <hr/>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-md btn-outline-primary\"\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-md btn-primary\"\r\n                            onClick = {this.props.savePolicy}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        applications: state.applications.applications,\r\n        loginMethods: state.loginMethods.loginMethods,\r\n        sites: state.sites.sites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getApplications: () => {\r\n            dispatch(getApplications())\r\n        },\r\n        getSites: () => {\r\n            dispatch(getSites())\r\n        },\r\n        getLoginMethods: () => {\r\n            dispatch(getLoginMethods())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Policy);\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as userPolicyActions from \"../../actions/userPolicy\"\r\nimport Policy from \"../policy\";\r\n\r\nexport class UserPolicy extends Component {\r\n    state = {\r\n        policy: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPolicy(1);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.policy !== prevProps.policy)\r\n            this.setState({\r\n                policy: this.props.policy\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    getPolicy = (policyId) => {\r\n        this.props.getPolicy(policyId);\r\n    }\r\n\r\n    savePolicy = () => {\r\n        this.props.savePolicy(this.state.policy);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.policy) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Policy policyType = \"User\" policy={this.state.policy}\r\n                            setBannedApps={(apps) => {\r\n                                this.setState(prevState => ({\r\n                                    policy: {\r\n                                        ...prevState.policy,\r\n                                        bannedApps: apps\r\n                                    }\r\n                                }))\r\n                            }}\r\n                            setBannedSites={(sites) => {\r\n                                this.setState(prevState => ({\r\n                                    policy: {\r\n                                        ...prevState.policy,\r\n                                        bannedSites: sites\r\n                                    }\r\n                                }))\r\n                            }}\r\n                            setLoginMethods={(loginMethods) => {\r\n                                this.setState(prevState => ({\r\n                                    policy: {\r\n                                        ...prevState.policy,\r\n                                        loginMethods: loginMethods\r\n                                    }\r\n                                }))\r\n                            }}\r\n                            savePolicy={this.savePolicy}/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        policy: state.userPolicy.userPolicy,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPolicy: (policyId) => {\r\n            dispatch(userPolicyActions.getUserPolicy(policyId));\r\n        },\r\n        savePolicy: (policy) => {\r\n            dispatch(userPolicyActions.saveUserPolicy(policy));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserPolicy);\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass app extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default app;\r\n","import React, {Component} from \"react\";\r\n\r\nexport class ConfigElementItem extends Component {\r\n    state = {\r\n        item: {\r\n            id: null,\r\n            label: null,\r\n            value: null\r\n        },\r\n        edit: false\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            item: this.props.item\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.item !== prevProps.item) {\r\n            this.setState({\r\n                item: this.props.item\r\n            })\r\n        }\r\n    }\r\n    changeLabel = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                label: value\r\n            }\r\n        }));\r\n    }\r\n    changeValue = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                value: value\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n        return (\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\r\n                        {this.state.edit ? (\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                defaultValue={this.state.item.label}\r\n                                onChange={this.changeLabel}\r\n                                placeholder=\"Label\"\r\n                            />\r\n                        ) : (\r\n                            this.state.item.label\r\n                        )}\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\r\n                        {this.state.edit ? (\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                defaultValue={this.state.item.value}\r\n                                onChange={this.changeValue}\r\n                                placeholder=\"Value\"\r\n                            />\r\n                        ) : (\r\n                            this.state.item.value\r\n                        )}\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\r\n                        {this.state.edit ? (\r\n                            <div>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-md btn-success\"\r\n                                    onClick={() => {\r\n                                        this.props.updateItem(this.state.item);\r\n                                        this.setState({\r\n                                            edit: false\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-md btn-outline-primary\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            item: this.props.item,\r\n                                            edit: false\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-md btn-primary\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-md btn-danger\"\r\n                                    onClick={() => this.props.deleteItem(this.state.item.id)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ConfigElementItem} from './configElementItem/index';\r\n\r\nexport class ConfigElementList extends Component {\r\n    state = {\r\n        item: {\r\n            label: null,\r\n            value: null\r\n        }\r\n    }\r\n    changeLabel = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                label: value\r\n            }\r\n        }));\r\n    }\r\n    changeValue = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                value: value\r\n            }\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.configElements) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\r\n                                    <br/>\r\n                                    {this.props.name}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        onChange={this.changeLabel}\r\n                                        placeholder=\"Label\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        onChange={this.changeValue}\r\n                                        placeholder=\"Value\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-md btn-success\"\r\n                                        onClick={() => this.props.addItem(this.state.item)}\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <ul className=\"list-group\">\r\n                                        {this.props.configElements.map((configElement, i) => {\r\n                                            return (\r\n                                                <div key={i}>\r\n                                                    <ConfigElementItem\r\n                                                        item={configElement}\r\n                                                        updateItem={this.props.updateItem}\r\n                                                        deleteItem={this.props.deleteItem}/>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as applicationsActions from \"../../../actions/applications\"\r\nimport {ConfigElementList} from \"../configElementList\";\r\n\r\nexport class AppList extends Component {\r\n    state = {\r\n        applications: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApplications();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.applications !== prevProps.applications) {\r\n            this.setState({\r\n                applications: this.props.applications\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    getApplications = () => {\r\n        this.props.getApplications();\r\n    }\r\n\r\n    addApplication = (application) => {\r\n        this.props.addApplication(application);\r\n    }\r\n\r\n    updateApplication = (application) => {\r\n        this.props.updateApplication(application);\r\n    }\r\n\r\n    deleteApplication = (applicationId) => {\r\n        this.props.deleteApplication(applicationId);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ConfigElementList\r\n                name={\"Applications\"}\r\n                configElements={this.state.applications}\r\n                addItem={this.addApplication}\r\n                updateItem={this.updateApplication}\r\n                deleteItem={this.deleteApplication}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        applications: state.applications.applications,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getApplications: () => {\r\n            dispatch(applicationsActions.getApplications());\r\n        },\r\n        addApplication: (application) => {\r\n            dispatch(applicationsActions.addApplication(application));\r\n        },\r\n        updateApplication: (application) => {\r\n            dispatch(applicationsActions.updateApplication(application));\r\n        },\r\n        deleteApplication: (applicationId) => {\r\n            dispatch(applicationsActions.deleteApplication(applicationId));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppList);\r\n","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as sitesActions from \"../../../actions/sites\"\r\nimport {ConfigElementList} from \"../configElementList\";\r\n\r\nexport class SiteList extends Component {\r\n    state = {\r\n        sites: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSites();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.sites !== prevProps.sites) {\r\n            this.setState({\r\n                sites: this.props.sites\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    getSites = () => {\r\n        this.props.getSites();\r\n    }\r\n\r\n    addSite = (site) => {\r\n        this.props.addSite(site);\r\n    }\r\n\r\n    updateSite = (site) => {\r\n        this.props.updateSite(site);\r\n    }\r\n\r\n    deleteSite = (siteId) => {\r\n        this.props.deleteSite(siteId);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ConfigElementList\r\n                name={\"Sites\"}\r\n                configElements={this.state.sites}\r\n                addItem={this.addSite}\r\n                updateItem={this.updateSite}\r\n                deleteItem={this.deleteSite}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sites: state.sites.sites,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSites: () => {\r\n            dispatch(sitesActions.getSites());\r\n        },\r\n        addSite: (site) => {\r\n            dispatch(sitesActions.addSite(site));\r\n        },\r\n        updateSite: (site) => {\r\n            dispatch(sitesActions.updateSite(site));\r\n        },\r\n        deleteSite: (siteId) => {\r\n            dispatch(sitesActions.deleteSite(siteId));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SiteList);\r\n","import axios from 'axios';\r\nimport * as api from \"../constants/apiEndpoints\";\r\nimport * as types from '../constants/actionsConstants';\r\n\r\nexport function addUser(user){\r\n    return (dispatch) => {\r\n        dispatch(addUserStart());\r\n        return axios.post(api.addUserUrl(), user)\r\n            .then(response => {\r\n                dispatch(addUserSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error))\r\n                dispatch(addUserFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const addUserStart = () => ({\r\n    type: types.ADD_USER_START\r\n});\r\n\r\nexport const addUserSuccess = (response) => ({\r\n    type: types.ADD_USER_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const addUserFail = (errorMsg) => ({\r\n    type: types.ADD_USER_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function updateUser(user){\r\n    return (dispatch) => {\r\n        dispatch(updateUserStart());\r\n        return axios.put(api.updateUserUrl(), user)\r\n            .then(response => {\r\n                dispatch(updateUserSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                alert(JSON.parse(error))\r\n                dispatch(updateUserFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateUserStart = () => ({\r\n    type: types.UPDATE_USER_START\r\n});\r\n\r\nexport const updateUserSuccess = (response) => ({\r\n    type: types.UPDATE_USER_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const updateUserFail = (errorMsg) => ({\r\n    type: types.UPDATE_USER_FAIL,\r\n    errorMsg,\r\n});\r\n\r\n\r\nexport function deleteUser(userId){\r\n    return (dispatch) => {\r\n        dispatch(deleteUserStart());\r\n        return axios.delete(api.deleteUserUrl(userId))\r\n            .then(response => {\r\n                dispatch(deleteUserSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(JSON.parse(error))\r\n                dispatch(deleteUserFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteUserStart = () => ({\r\n    type: types.DELETE_USER_START\r\n});\r\n\r\nexport const deleteUserSuccess = (response) => ({\r\n    type: types.DELETE_USER_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const deleteUserFail = (errorMsg) => ({\r\n    type: types.DELETE_USER_FAIL,\r\n    errorMsg,\r\n});\r\n\r\nexport function getUsers(){\r\n    return (dispatch) => {\r\n        dispatch(getUsersStart());\r\n        return axios.get(api.getUsersUrl())\r\n            .then(response => {\r\n                dispatch(getUsersSuccess(response));\r\n            })\r\n            .catch((error) => {\r\n            console.log(error)\r\n                // alert(JSON.parse(error))\r\n                dispatch(getUsersFail(error.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUsersStart = () => ({\r\n    type: types.GET_USERS_START\r\n});\r\n\r\nexport const getUsersSuccess = (response) => ({\r\n    type: types.GET_USERS_SUCCESS,\r\n    response\r\n});\r\n\r\nexport const getUsersFail = (errorMsg) => ({\r\n    type: types.GET_USERS_FAIL,\r\n    errorMsg,\r\n});","import React, {Component} from \"react\";\r\nimport Select from 'react-select';\r\n\r\nexport class UserItem extends Component {\r\n    state = {\r\n        item: {\r\n            id: null,\r\n            login: null,\r\n            password: null,\r\n            userPolicyId: null,\r\n            computerId: null\r\n        },\r\n        edit: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            item: this.props.item\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.item !== prevProps.item) {\r\n            this.setState({\r\n                item: this.props.item\r\n            })\r\n        }\r\n    }\r\n\r\n    changeLogin = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                login: value\r\n            }\r\n        }));\r\n    }\r\n    changePassword = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                password: value\r\n            }\r\n        }));\r\n    }\r\n    changePolicy = (policy) => {\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                userPolicyId: policy.value\r\n            }\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.item.id || !this.props.policies) {\r\n            return (\r\n                <div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <li className=\"list-group-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                            {this.state.edit ? (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue={this.state.item.login}\r\n                                    onChange={this.changeLogin}\r\n                                    placeholder=\"Login\"\r\n                                />\r\n                            ) : (\r\n                                this.state.item.login\r\n                            )}\r\n                        </div>\r\n                        {this.state.edit ? (\r\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue={this.state.item.password}\r\n                                    onChange={this.changePassword}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                            {this.state.edit ? (\r\n                                <Select options={this.props.policies}\r\n                                        defaultValue={this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0]}\r\n                                        onChange={(policy) => {\r\n                                            this.changePolicy(policy);\r\n                                        }}\r\n                                />\r\n                            ) : (\r\n                                this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0].label\r\n                            )}\r\n                        </div>\r\n                        {this.state.edit ? (\r\n                            <div></div>\r\n                        ) : (\r\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                                {this.state.item.computerId}\r\n                            </div>\r\n                        )}\r\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                            {this.state.edit ? (\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-md btn-success\"\r\n                                        onClick={() => {\r\n                                            this.props.updateItem(this.state.item);\r\n                                            this.setState({\r\n                                                edit: false\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        Update\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-md btn-outline-primary\"\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                item: this.props.item,\r\n                                                edit: false\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-md btn-primary\"\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                edit: true\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-md btn-danger\"\r\n                                        onClick={() => this.props.deleteItem(this.state.item.id)}\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as usersActions from \"../../../actions/users\"\r\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\r\nimport {UserItem} from \"./userItem/index\";\r\nimport Select from \"react-select\";\r\n\r\nexport class UserList extends Component {\r\n    state = {\r\n        item: {\r\n            login: null,\r\n            password: null,\r\n            userPolicyId: null\r\n        },\r\n        users: null,\r\n        policies: null,\r\n    }\r\n    componentDidMount() {\r\n        this.getPolicies();\r\n        this.getUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.users !== prevProps.users) {\r\n            this.setState({\r\n                users: this.props.users\r\n            })\r\n        }\r\n        if(this.props.policies !== prevProps.policies) {\r\n            this.setState({\r\n                policies: this.props.policies\r\n            })\r\n        }\r\n    }\r\n    changeLogin = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                login: value\r\n            }\r\n        }));\r\n    }\r\n    changePassword = (e) => {\r\n        var value = e.target.value;\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                password: value\r\n            }\r\n        }));\r\n    }\r\n    changePolicy = (policy) => {\r\n        this.setState(prevState => ({\r\n            item: {\r\n                ...prevState.item,\r\n                userPolicyId: policy.value\r\n            }\r\n        }));\r\n    }\r\n    getPolicies = () => {\r\n        this.props.getPolicies();\r\n    }\r\n\r\n    getUsers = () => {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    addUser = (user) => {\r\n        this.props.addUser(user);\r\n    }\r\n\r\n    updateUser = (user) => {\r\n        this.props.updateUser(user);\r\n    }\r\n\r\n    deleteUser = (userId) => {\r\n        this.props.deleteUser(userId);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.users || !this.state.policies) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\r\n                                    <br/>\r\n                                    Users\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            defaultValue={this.state.item.login}\r\n                                            onChange={this.changeLogin}\r\n                                            placeholder=\"Login\"\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            defaultValue={this.state.item.password}\r\n                                            onChange={this.changePassword}\r\n                                            placeholder=\"Password\"\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                                        <Select options={this.state.policies}\r\n                                                defaultValue={this.state.policies[0]}\r\n                                                onChange={(policy) => {\r\n                                                    this.changePolicy(policy);\r\n                                                }}\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-md btn-success\"\r\n                                        onClick={() => this.addUser(this.state.item)}\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <ul className=\"list-group\">\r\n                                        {this.state.users.map((user, i) => {\r\n                                            return (\r\n                                                <div key={i}>\r\n                                                    <UserItem\r\n                                                        item={user}\r\n                                                        policies={this.state.policies}\r\n                                                        updateItem={this.updateUser}\r\n                                                        deleteItem={this.deleteUser}/>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        policies: state.userPolicy.userPolicies,\r\n        users: state.users.users,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUsers: () => {\r\n            dispatch(usersActions.getUsers());\r\n        },\r\n        addUser: (user) => {\r\n            dispatch(usersActions.addUser(user));\r\n        },\r\n        updateUser: (user) => {\r\n            dispatch(usersActions.updateUser(user));\r\n        },\r\n        deleteUser: (userId) => {\r\n            dispatch(usersActions.deleteUser(userId));\r\n        },\r\n        getPolicies: () => {\r\n            dispatch(userPolicyActions.getUserPolicies());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserList);\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\n\r\nimport AppNavbarHeader from '../components/appNavbarHeader';\r\nimport ComputerPolicy from '../components/computerPolicy';\r\nimport UserPolicy from '../components/userPolicy';\r\nimport app from '../App'\r\nimport AppList from \"../components/lists/appList\";\r\nimport SiteList from \"../components/lists/siteList\";\r\nimport UserList from \"../components/lists/userList/index\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavbarHeader/>\r\n                <Route exact path=\"/\" component={app}/>\r\n                <Route path=\"/computerPolicy/:computerPolicyId?\" component={ComputerPolicy}/>\r\n                <Route path=\"/userPolicy/:userPolicyId?\" component={UserPolicy}/>\r\n                <Route path=\"/applications\" component={AppList}/>\r\n                <Route path=\"/sites\" component={SiteList}/>\r\n                <Route path=\"/users\" component={UserList}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport store from './store'\r\nimport App from './containers/app';\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}