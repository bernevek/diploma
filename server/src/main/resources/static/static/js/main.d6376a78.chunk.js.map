{"version":3,"sources":["constants/actionsConstants.js","reducers/computerPolicy.js","reducers/userPolicy.js","reducers/applications.js","reducers/sites.js","reducers/loginMethods.js","reducers/users.js","reducers/index.js","store.js","components/appNavbarHeader/index.js","components/computerPolicy/index.js","constants/apiEndpoints.js","actions/userPolicy.js","actions/loginMethods.js","actions/applications.js","actions/sites.js","components/policy/index.js","components/userPolicy/index.js","App.js","components/lists/configElementList/configElementItem/index.js","components/lists/configElementList/index.js","components/lists/appList/index.js","components/lists/siteList/index.js","actions/users.js","components/lists/userList/userItem/index.js","components/lists/userList/index.js","components/lists/userPolicyList/userPolicyItem/index.js","components/lists/userPolicyList/index.js","containers/app.js","index.js","logo.svg"],"names":["GET_USER_POLICY_START","GET_USER_POLICY_SUCCESS","GET_USER_POLICY_FAIL","GET_USER_POLICIES_START","GET_USER_POLICIES_SUCCESS","GET_USER_POLICIES_FAIL","UPDATE_USER_POLICY_START","UPDATE_USER_POLICY_SUCCESS","UPDATE_USER_POLICY_FAIL","ADD_USER_POLICY_START","ADD_USER_POLICY_SUCCESS","ADD_USER_POLICY_FAIL","DELETE_USER_POLICY_START","DELETE_USER_POLICY_SUCCESS","DELETE_USER_POLICY_FAIL","GET_COMPUTER_POLICY_START","GET_COMPUTER_POLICY_SUCCESS","GET_COMPUTER_POLICY_FAIL","SAVE_COMPUTER_POLICY_START","SAVE_COMPUTER_POLICY_SUCCESS","SAVE_COMPUTER_POLICY_FAIL","GET_APPLICATIONS_START","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ADD_APPLICATION_START","ADD_APPLICATION_SUCCESS","ADD_APPLICATION_FAIL","DELETE_APPLICATION_START","DELETE_APPLICATION_SUCCESS","DELETE_APPLICATION_FAIL","UPDATE_APPLICATION_START","UPDATE_APPLICATION_SUCCESS","UPDATE_APPLICATION_FAIL","GET_SITES_START","GET_SITES_SUCCESS","GET_SITES_FAIL","ADD_SITE_START","ADD_SITE_SUCCESS","ADD_SITE_FAIL","DELETE_SITE_START","DELETE_SITE_SUCCESS","DELETE_SITE_FAIL","UPDATE_SITE_START","UPDATE_SITE_SUCCESS","UPDATE_SITE_FAIL","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAIL","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","GET_LOGIN_METHODS_START","GET_LOGIN_METHODS_SUCCESS","GET_LOGIN_METHODS_FAIL","initialState","errorMsg","computerPolicy","saveComputerPolicyInProgress","getComputerPolicyInProgress","userPolicy","userPolicies","updateUserPolicyInProgress","getUserPolicyInProgress","getUserPoliciesInProgress","addUserPolicyInProgress","deleteUserPolicyInProgress","applications","addApplicationInProgress","getApplicationsInProgress","deleteApplicationInProgress","updateApplicationInProgress","sites","addSiteInProgress","getSitesInProgress","deleteSiteInProgress","updateSiteInProgress","loginMethods","getLoginMethodsInProgress","users","addUserInProgress","getUsersInProgress","deleteUserInProgress","updateUserInProgress","appReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","response","data","toConsumableArray","filter","value","concat","app","id","map","label","site","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createHashHistory","AppNavbarHeader","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","user","click","console","log","push","pathname","inherits","createClass","key","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","className","NavDropdown_default","title","Item","Link","Form_default","inline","FormControl_default","placeholder","Button_default","variant","Component","connect","dispatch","ComputerPolicy","API_URL","process","REACT_APP_STAGE","getUserPoliciesUrl","getUserPolicyUrl","policyId","updateUserPolicyUrl","addUserPolicyUrl","deleteUserPolicyUrl","getUsersUrl","updateUserUrl","addUserUrl","deleteUserUrl","applicationId","getApplicationsUrl","updateApplicationUrl","addApplicationUrl","deleteApplicationUrl","getSitesUrl","updateSiteUrl","addSiteUrl","deleteSiteUrl","sitesId","getLoginMethodsUrl","getUserPolicies","getUserPoliciesStart","axios","get","api","then","getUserPoliciesSuccess","catch","error","alert","JSON","parse","request","reason","getUserPoliciesFail","message","updateUserPolicyStart","updateUserPolicySuccess","updateUserPolicyFail","addUserPolicyStart","addUserPolicySuccess","addUserPolicyFail","deleteUserPolicyStart","deleteUserPolicySuccess","deleteUserPolicyFail","getUserPolicyStart","getUserPolicySuccess","getUserPolicyFail","getLoginMethodsStart","getLoginMethodsSuccess","getLoginMethodsFail","addApplicationStart","addApplicationSuccess","addApplicationFail","updateApplicationStart","updateApplicationSuccess","updateApplicationFail","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFail","getApplications","getApplicationsStart","getApplicationsSuccess","getApplicationsFail","addSiteStart","addSiteSuccess","addSiteFail","updateSiteStart","updateSiteSuccess","updateSiteFail","deleteSiteStart","deleteSiteSuccess","deleteSiteFail","getSites","getSitesStart","getSitesSuccess","getSitesFail","Policy","props","getLoginMethods","policyType","defaultValue","policy","name","onChange","e","setPolicyName","target","react_select_esm","isMulti","options","bannedApps","apps","setBannedApps","bannedSites","setBannedSites","setLoginMethods","to","onClick","savePolicy","src","UserPolicy","getPolicy","match","params","userPolicyId","updatePolicy","addPolicy","prevProps","setState","_this2","components_policy","prevState","put","post","logo","alt","rel","ConfigElementItem","item","edit","changeLabel","changeValue","updateItem","deleteItem","ConfigElementList","configElements","addItem","configElement","i","configElementItem_ConfigElementItem","AppList","addApplication","application","updateApplication","deleteApplication","configElementList_ConfigElementList","applicationsActions","delete","SiteList","addSite","updateSite","deleteSite","siteId","sitesActions","addUserStart","addUserSuccess","addUserFail","updateUserStart","updateUserSuccess","updateUserFail","deleteUserStart","deleteUserSuccess","deleteUserFail","getUsersStart","getUsersSuccess","getUsersFail","UserItem","login","password","computerId","changeLogin","changePassword","changePolicy","policies","UserList","getPolicies","getUsers","addUser","updateUser","deleteUser","userId","userItem_UserItem","usersActions","userPolicyActions","UserPolicyItem","UserPolicyList","deletePolicy","userPolicyItem_UserPolicyItem","color","App","appNavbarHeader","Route","exact","path","component","ReactDOM","render","es","HashRouter","containers_app","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d6376a78.chunk.js","sourcesContent":["/* Login */\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOGOUT_START = 'LOGOUT_START';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\n/* UserPolicy */\nexport const GET_USER_POLICY_START = 'GET_USER_POLICY_START';\nexport const GET_USER_POLICY_SUCCESS = 'GET_USER_POLICY_SUCCESS';\nexport const GET_USER_POLICY_FAIL = 'GET_USER_POLICY_FAIL';\nexport const GET_USER_POLICIES_START = 'GET_USER_POLICIES_START';\nexport const GET_USER_POLICIES_SUCCESS = 'GET_USER_POLICIES_SUCCESS';\nexport const GET_USER_POLICIES_FAIL = 'GET_USER_POLICIES_FAIL';\nexport const UPDATE_USER_POLICY_START = 'UPDATE_USER_POLICY_START';\nexport const UPDATE_USER_POLICY_SUCCESS = 'UPDATE_USER_POLICY_SUCCESS';\nexport const UPDATE_USER_POLICY_FAIL = 'UPDATE_USER_POLICY_FAIL';\nexport const ADD_USER_POLICY_START = 'ADD_USER_POLICY_START';\nexport const ADD_USER_POLICY_SUCCESS = 'ADD_USER_POLICY_SUCCESS';\nexport const ADD_USER_POLICY_FAIL = 'ADD_USER_POLICY_FAIL';\nexport const DELETE_USER_POLICY_START = 'DELETE_USER_POLICY_START';\nexport const DELETE_USER_POLICY_SUCCESS = 'DELETE_USER_POLICY_SUCCESS';\nexport const DELETE_USER_POLICY_FAIL = 'DELETE_USER_POLICY_FAIL';\n\n/* ComputerPolicy */\nexport const GET_COMPUTER_POLICY_START = 'GET_COMPUTER_POLICY_START';\nexport const GET_COMPUTER_POLICY_SUCCESS = 'GET_COMPUTER_POLICY_SUCCESS';\nexport const GET_COMPUTER_POLICY_FAIL = 'GET_COMPUTER_POLICY_FAIL';\nexport const SAVE_COMPUTER_POLICY_START = 'SAVE_COMPUTER_POLICY_START';\nexport const SAVE_COMPUTER_POLICY_SUCCESS = 'SAVE_COMPUTER_POLICY_SUCCESS';\nexport const SAVE_COMPUTER_POLICY_FAIL = 'SAVE_COMPUTER_POLICY_FAIL';\n\n/* Applications */\nexport const GET_APPLICATIONS_START = 'GET_APPLICATIONS_START';\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\nexport const ADD_APPLICATION_START = 'ADD_APPLICATION_START';\nexport const ADD_APPLICATION_SUCCESS = 'ADD_APPLICATION_SUCCESS';\nexport const ADD_APPLICATION_FAIL = 'ADD_APPLICATION_FAIL';\nexport const DELETE_APPLICATION_START = 'DELETE_APPLICATION_START';\nexport const DELETE_APPLICATION_SUCCESS = 'DELETE_APPLICATION_SUCCESS';\nexport const DELETE_APPLICATION_FAIL = 'DELETE_APPLICATION_FAIL';\nexport const UPDATE_APPLICATION_START = 'UPDATE_APPLICATION_START';\nexport const UPDATE_APPLICATION_SUCCESS = 'UPDATE_APPLICATION_SUCCESS';\nexport const UPDATE_APPLICATION_FAIL = 'UPDATE_APPLICATION_FAIL';\n\n/* Sites */\nexport const GET_SITES_START = 'GET_SITES_START';\nexport const GET_SITES_SUCCESS = 'GET_SITES_SUCCESS';\nexport const GET_SITES_FAIL = 'GET_SITES_FAIL';\nexport const ADD_SITE_START = 'ADD_SITE_START';\nexport const ADD_SITE_SUCCESS = 'ADD_SITE_SUCCESS';\nexport const ADD_SITE_FAIL = 'ADD_SITE_FAIL';\nexport const DELETE_SITE_START = 'DELETE_SITE_START';\nexport const DELETE_SITE_SUCCESS = 'DELETE_SITE_SUCCESS';\nexport const DELETE_SITE_FAIL = 'DELETE_SITE_FAIL';\nexport const UPDATE_SITE_START = 'UPDATE_SITE_START';\nexport const UPDATE_SITE_SUCCESS = 'UPDATE_SITE_SUCCESS';\nexport const UPDATE_SITE_FAIL = 'UPDATE_SITE_FAIL';\n\n/* Users */\nexport const GET_USERS_START = 'GET_USERS_START';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\nexport const ADD_USER_START = 'ADD_USER_START';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\nexport const DELETE_USER_START = 'DELETE_USER_START';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\nexport const UPDATE_USER_START = 'UPDATE_USER_START';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\n\n/* Login Methods */\nexport const GET_LOGIN_METHODS_START = 'GET_LOGIN_METHODS_START';\nexport const GET_LOGIN_METHODS_SUCCESS = 'GET_LOGIN_METHODS_SUCCESS';\nexport const GET_LOGIN_METHODS_FAIL = 'GET_LOGIN_METHODS_FAIL';\n","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    computerPolicy: null,\n    saveComputerPolicyInProgress: false,\n    getComputerPolicyInProgress: false\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.SAVE_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                saveComputerPolicyInProgress: true\n            };\n        case types.SAVE_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                saveComputerPolicyInProgress: false,\n            };\n        case types.SAVE_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                saveComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getComputerPolicyInProgress: true\n            };\n        case types.GET_COMPUTER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                computerPolicy: action.response.data,\n                getComputerPolicyInProgress: false,\n            };\n        case types.GET_COMPUTER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getComputerPolicyInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    userPolicy: null,\n    userPolicies: null,\n    updateUserPolicyInProgress: false,\n    getUserPolicyInProgress: false,\n    getUserPoliciesInProgress: false,\n    addUserPolicyInProgress: false,\n    deleteUserPolicyInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.UPDATE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: true\n            };\n        case types.UPDATE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserPolicyInProgress: false,\n            };\n        case types.UPDATE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: true\n            };\n        case types.ADD_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserPolicyInProgress: false,\n            };\n        case types.ADD_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserPolicyInProgress: true\n            };\n        case types.DELETE_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: [...state.userPolicies.filter(userPolicy => userPolicy.value !== action.response.data)],\n                deleteUserPolicyInProgress: false,\n            };\n        case types.DELETE_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPolicyInProgress: true\n            };\n        case types.GET_USER_POLICY_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicy: action.response.data,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICY_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPolicyInProgress: false,\n            };\n        case types.GET_USER_POLICIES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUserPoliciesInProgress: true\n            };\n        case types.GET_USER_POLICIES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                userPolicies: action.response.data,\n                getUserPoliciesInProgress: false,\n            };\n        case types.GET_USER_POLICIES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUserPoliciesInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    applications: null,\n    addApplicationInProgress: false,\n    getApplicationsInProgress: false,\n    deleteApplicationInProgress: false,\n    updateApplicationInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: true\n            };\n        case types.ADD_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addApplicationInProgress: false,\n                applications: [...state.applications, action.response.data]\n            };\n        case types.ADD_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addApplicationInProgress: false,\n            };\n        case types.GET_APPLICATIONS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getApplicationsInProgress: true\n            };\n        case types.GET_APPLICATIONS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: action.response.data,\n                getApplicationsInProgress: false,\n            };\n        case types.GET_APPLICATIONS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getApplicationsInProgress: false,\n            };\n        case types.DELETE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteApplicationInProgress: true\n            };\n        case types.DELETE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.filter(app => app.id !== action.response.data)],\n                deleteApplicationInProgress: false,\n            };\n        case types.DELETE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateApplicationInProgress: true\n            };\n        case types.UPDATE_APPLICATION_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                applications: [...state.applications.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateApplicationInProgress: false,\n            };\n        case types.UPDATE_APPLICATION_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateApplicationInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    sites: null,\n    addSiteInProgress: false,\n    getSitesInProgress: false,\n    deleteSiteInProgress: false,\n    updateSiteInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: true\n            };\n        case types.ADD_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addSiteInProgress: false,\n                sites: [...state.sites, action.response.data]\n            };\n        case types.ADD_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addSiteInProgress: false,\n            };\n        case types.GET_SITES_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getSitesInProgress: true\n            };\n        case types.GET_SITES_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: action.response.data,\n                getSitesInProgress: false,\n            };\n        case types.GET_SITES_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getSitesInProgress: false,\n            };\n        case types.DELETE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteSiteInProgress: true\n            };\n        case types.DELETE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.filter(site => site.id !== action.response.data)],\n                deleteSiteInProgress: false,\n            };\n        case types.DELETE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateSiteInProgress: true\n            };\n        case types.UPDATE_SITE_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                sites: [...state.sites.map(site => {\n                    if (site.id === action.response.data.id) {\n                        site.label = action.response.data.label;\n                        site.value = action.response.data.value;\n                    }\n                    return site;\n                })],\n                updateSiteInProgress: false,\n            };\n        case types.UPDATE_SITE_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateSiteInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    loginMethods: null,\n    getLoginMethodsInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.GET_LOGIN_METHODS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getLoginMethodsInProgress: true\n            };\n        case types.GET_LOGIN_METHODS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                loginMethods: action.response.data,\n                getLoginMethodsInProgress: false,\n            };\n        case types.GET_LOGIN_METHODS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getLoginMethodsInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import * as types from \"../constants/actionsConstants\";\n\nconst initialState = {\n    errorMsg: null,\n    users: null,\n    addUserInProgress: false,\n    getUsersInProgress: false,\n    deleteUserInProgress: false,\n    updateUserInProgress: false,\n}\n\nexport default function orgs(state = initialState, action={}) {\n    switch (action.type) {\n        case types.ADD_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: true\n            };\n        case types.ADD_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                addUserInProgress: false,\n                users: [...state.users, action.response.data]\n            };\n        case types.ADD_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                addUserInProgress: false,\n            };\n        case types.GET_USERS_START:\n            return {\n                ...state,\n                errorMsg: null,\n                getUsersInProgress: true\n            };\n        case types.GET_USERS_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: action.response.data,\n                getUsersInProgress: false,\n            };\n        case types.GET_USERS_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                getUsersInProgress: false,\n            };\n        case types.DELETE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                deleteUserInProgress: true\n            };\n        case types.DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.filter(app => app.id !== action.response.data)],\n                deleteUserInProgress: false,\n            };\n        case types.DELETE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                deleteUserInProgress: false,\n            };\n        case types.UPDATE_USER_START:\n            return {\n                ...state,\n                errorMsg: null,\n                updateUserInProgress: true\n            };\n        case types.UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                errorMsg: null,\n                users: [...state.users.map(app => {\n                    if (app.id === action.response.data.id) {\n                        app.label = action.response.data.label;\n                        app.value = action.response.data.value;\n                    }\n                    return app;\n                })],\n                updateUserInProgress: false,\n            };\n        case types.UPDATE_USER_FAIL:\n            return {\n                ...state,\n                errorMsg: action.errorMsg,\n                updateUserInProgress: false,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport computerPolicy from './computerPolicy';\nimport userPolicy from './userPolicy';\nimport applications from './applications';\nimport sites from './sites';\nimport loginMethods from './loginMethods';\nimport users from './users';\n\nconst appReducer = combineReducers({\n    computerPolicy,\n    userPolicy,\n    applications,\n    sites,\n    loginMethods,\n    users\n});\nconst rootReducer = (state, action) => {\n    if(action.type === 'LOGOUT'){\n        state = undefined;\n    }\n    return appReducer(state, action);\n}\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const history = createHashHistory();\n\nexport default store;\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { history } from '../../store'\n\n\nexport class AppNavbarHeader extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    click = () => {\n        console.log(\"fsg\");\n        history.push({pathname: \"/userPolicy\"})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Access system</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#/users\">Users</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/userPolicies\">User policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Computer\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#\">Computers</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#/computerPolicy\">Computer policies</NavDropdown.Item>\n                        </NavDropdown>\n                        <Nav.Link href=\"#/applications\">Applications</Nav.Link>\n                        <Nav.Link href=\"#/sites\">Sites</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppNavbarHeader);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\n\nexport class ComputerPolicy extends Component {\n    state = {\n        user: undefined\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>computer policy</div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComputerPolicy);\n","var API_URL = \"\";\n\nprocess.env.REACT_APP_STAGE === 'dev'\n    ? API_URL = 'http://localhost:8080/api'\n    : API_URL = '/api'\n\n/* User Policy */\nexport const getUserPoliciesUrl = () => {\n    return API_URL + \"/userPolicies\";\n}\n\nexport const getUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\nexport const updateUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const addUserPolicyUrl = () => {\n    return API_URL + \"/userPolicy\";\n}\n\nexport const deleteUserPolicyUrl = (policyId) => {\n    return API_URL + \"/userPolicy/\" + policyId;\n}\n\n/* Applications */\nexport const getUsersUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const updateUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const addUserUrl = () => {\n    return API_URL + \"/user\";\n}\n\nexport const deleteUserUrl = (applicationId) => {\n    return API_URL + \"/user/\" + applicationId;\n}\n\n/* Applications */\nexport const getApplicationsUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const updateApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const addApplicationUrl = () => {\n    return API_URL + \"/application\";\n}\n\nexport const deleteApplicationUrl = (applicationId) => {\n    return API_URL + \"/application/\" + applicationId;\n}\n\n/* Sites */\nexport const getSitesUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const updateSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const addSiteUrl = () => {\n    return API_URL + \"/site\";\n}\n\nexport const deleteSiteUrl = (sitesId) => {\n    return API_URL + \"/site/\" + sitesId;\n}\n\n/* Login methods*/\nexport const getLoginMethodsUrl = () => {\n    return API_URL + \"/loginMethod\";\n}\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\nimport { history } from '../store'\n\nexport function getUserPolicies(){\n    return (dispatch) => {\n        dispatch(getUserPoliciesStart());\n        return axios.get(api.getUserPoliciesUrl())\n            .then(response => {\n                dispatch(getUserPoliciesSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPoliciesFail(error.message));\n            });\n    }\n}\n\nexport const getUserPoliciesStart = () => ({\n    type: types.GET_USER_POLICIES_START\n});\n\nexport const getUserPoliciesSuccess = (response) => ({\n    type: types.GET_USER_POLICIES_SUCCESS,\n    response\n});\n\nexport const getUserPoliciesFail = (errorMsg) => ({\n    type: types.GET_USER_POLICIES_FAIL,\n    errorMsg,\n});\n\nexport function updateUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(updateUserPolicyStart());\n        return axios.put(api.updateUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(updateUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(updateUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const updateUserPolicyStart = () => ({\n    type: types.UPDATE_USER_POLICY_START\n});\n\nexport const updateUserPolicySuccess = (response) => ({\n    type: types.UPDATE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const updateUserPolicyFail = (errorMsg) => ({\n    type: types.UPDATE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function addUserPolicy(userPolicy){\n    return (dispatch) => {\n        dispatch(addUserPolicyStart());\n        return axios.post(api.addUserPolicyUrl(), userPolicy)\n            .then(response => {\n                dispatch(addUserPolicySuccess(response));\n                history.push({pathname: \"/userPolicies\"})\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const addUserPolicyStart = () => ({\n    type: types.ADD_USER_POLICY_START\n});\n\nexport const addUserPolicySuccess = (response) => ({\n    type: types.ADD_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const addUserPolicyFail = (errorMsg) => ({\n    type: types.ADD_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function deleteUserPolicy(policyId){\n    return (dispatch) => {\n        dispatch(deleteUserPolicyStart());\n        return axios.delete(api.deleteUserPolicyUrl(policyId))\n            .then(response => {\n                dispatch(deleteUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(deleteUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserPolicyStart = () => ({\n    type: types.DELETE_USER_POLICY_START\n});\n\nexport const deleteUserPolicySuccess = (response) => ({\n    type: types.DELETE_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const deleteUserPolicyFail = (errorMsg) => ({\n    type: types.DELETE_USER_POLICY_FAIL,\n    errorMsg,\n});\n\nexport function getUserPolicy(userPolicyId){\n    return (dispatch) => {\n        dispatch(getUserPolicyStart());\n        return axios.get(api.getUserPolicyUrl(userPolicyId))\n            .then(response => {\n                dispatch(getUserPolicySuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getUserPolicyFail(error.message));\n            });\n    }\n}\n\nexport const getUserPolicyStart = () => ({\n    type: types.GET_USER_POLICY_START\n});\n\nexport const getUserPolicySuccess = (response) => ({\n    type: types.GET_USER_POLICY_SUCCESS,\n    response\n});\n\nexport const getUserPolicyFail = (errorMsg) => ({\n    type: types.GET_USER_POLICY_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function getLoginMethods(){\n    return (dispatch) => {\n        dispatch(getLoginMethodsStart());\n        return axios.get(api.getLoginMethodsUrl())\n            .then(response => {\n                dispatch(getLoginMethodsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getLoginMethodsFail(error.message));\n            });\n    }\n}\n\nexport const getLoginMethodsStart = () => ({\n    type: types.GET_LOGIN_METHODS_START\n});\n\nexport const getLoginMethodsSuccess = (response) => ({\n    type: types.GET_LOGIN_METHODS_SUCCESS,\n    response\n});\n\nexport const getLoginMethodsFail = (errorMsg) => ({\n    type: types.GET_LOGIN_METHODS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addApplication(application){\n    return (dispatch) => {\n        dispatch(addApplicationStart());\n        return axios.post(api.addApplicationUrl(), application)\n            .then(response => {\n                dispatch(addApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addApplicationFail(error.message));\n            });\n    }\n}\n\nexport const addApplicationStart = () => ({\n    type: types.ADD_APPLICATION_START\n});\n\nexport const addApplicationSuccess = (response) => ({\n    type: types.ADD_APPLICATION_SUCCESS,\n    response\n});\n\nexport const addApplicationFail = (errorMsg) => ({\n    type: types.ADD_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function updateApplication(application){\n    return (dispatch) => {\n        dispatch(updateApplicationStart());\n        return axios.put(api.updateApplicationUrl(), application)\n            .then(response => {\n                dispatch(updateApplicationSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateApplicationFail(error.message));\n            });\n    }\n}\n\nexport const updateApplicationStart = () => ({\n    type: types.UPDATE_APPLICATION_START\n});\n\nexport const updateApplicationSuccess = (response) => ({\n    type: types.UPDATE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const updateApplicationFail = (errorMsg) => ({\n    type: types.UPDATE_APPLICATION_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteApplication(applicationId){\n    return (dispatch) => {\n        dispatch(deleteApplicationStart());\n        return axios.delete(api.deleteApplicationUrl(applicationId))\n            .then(response => {\n                dispatch(deleteApplicationSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteApplicationFail(error.message));\n            });\n    }\n}\n\nexport const deleteApplicationStart = () => ({\n    type: types.DELETE_APPLICATION_START\n});\n\nexport const deleteApplicationSuccess = (response) => ({\n    type: types.DELETE_APPLICATION_SUCCESS,\n    response\n});\n\nexport const deleteApplicationFail = (errorMsg) => ({\n    type: types.DELETE_APPLICATION_FAIL,\n    errorMsg,\n});\n\nexport function getApplications(){\n    return (dispatch) => {\n        dispatch(getApplicationsStart());\n        return axios.get(api.getApplicationsUrl())\n            .then(response => {\n                dispatch(getApplicationsSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(getApplicationsFail(error.message));\n            });\n    }\n}\n\nexport const getApplicationsStart = () => ({\n    type: types.GET_APPLICATIONS_START\n});\n\nexport const getApplicationsSuccess = (response) => ({\n    type: types.GET_APPLICATIONS_SUCCESS,\n    response\n});\n\nexport const getApplicationsFail = (errorMsg) => ({\n    type: types.GET_APPLICATIONS_FAIL,\n    errorMsg,\n});","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addSite(site){\n    return (dispatch) => {\n        dispatch(addSiteStart());\n        return axios.post(api.addSiteUrl(), site)\n            .then(response => {\n                dispatch(addSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(addSiteFail(error.message));\n            });\n    }\n}\n\nexport const addSiteStart = () => ({\n    type: types.ADD_SITE_START\n});\n\nexport const addSiteSuccess = (response) => ({\n    type: types.ADD_SITE_SUCCESS,\n    response\n});\n\nexport const addSiteFail = (errorMsg) => ({\n    type: types.ADD_SITE_FAIL,\n    errorMsg,\n});\n\nexport function updateSite(site){\n    return (dispatch) => {\n        dispatch(updateSiteStart());\n        return axios.put(api.updateSiteUrl(), site)\n            .then(response => {\n                dispatch(updateSiteSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateSiteFail(error.message));\n            });\n    }\n}\n\nexport const updateSiteStart = () => ({\n    type: types.UPDATE_SITE_START\n});\n\nexport const updateSiteSuccess = (response) => ({\n    type: types.UPDATE_SITE_SUCCESS,\n    response\n});\n\nexport const updateSiteFail = (errorMsg) => ({\n    type: types.UPDATE_SITE_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteSite(siteId){\n    return (dispatch) => {\n        dispatch(deleteSiteStart());\n        return axios.delete(api.deleteSiteUrl(siteId))\n            .then(response => {\n                dispatch(deleteSiteSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteSiteFail(error.message));\n            });\n    }\n}\n\nexport const deleteSiteStart = () => ({\n    type: types.DELETE_SITE_START\n});\n\nexport const deleteSiteSuccess = (response) => ({\n    type: types.DELETE_SITE_SUCCESS,\n    response\n});\n\nexport const deleteSiteFail = (errorMsg) => ({\n    type: types.DELETE_SITE_FAIL,\n    errorMsg,\n});\n\nexport function getSites(){\n    return (dispatch) => {\n        dispatch(getSitesStart());\n        return axios.get(api.getSitesUrl())\n            .then(response => {\n                dispatch(getSitesSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error.request.response).reason)\n                dispatch(getSitesFail(error.message));\n            });\n    }\n}\n\nexport const getSitesStart = () => ({\n    type: types.GET_SITES_START\n});\n\nexport const getSitesSuccess = (response) => ({\n    type: types.GET_SITES_SUCCESS,\n    response\n});\n\nexport const getSitesFail = (errorMsg) => ({\n    type: types.GET_SITES_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport {getLoginMethods} from \"../../actions/loginMethods\";\nimport {getApplications} from \"../../actions/applications\";\nimport {getSites} from \"../../actions/sites\";\nimport { Link } from \"react-router-dom\";\n\n\nexport class Policy extends Component {\n\n    componentDidMount() {\n        this.props.getApplications();\n        this.props.getSites();\n        this.props.getLoginMethods();\n    }\n\n    render() {\n        if (!this.props.applications ||\n            !this.props.sites ||\n            !this.props.loginMethods\n        ) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div>\n                        <h2>\n                            {this.props.policyType} policy:\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.props.policy.name}\n                                onChange={(e) => {\n                                    this.props.setPolicyName(e.target.value);\n                                }}\n                                placeholder=\"Name\"\n                            />\n                        </h2>\n                        <h3>Banned apps</h3>\n                        <Select isMulti options={this.props.applications}\n                                defaultValue={this.props.policy.bannedApps}\n                                onChange={(apps) => {\n                                    this.props.setBannedApps(apps);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Banned sites</h3>\n                        <Select isMulti options={this.props.sites}\n                                defaultValue={this.props.policy.bannedSites}\n                                onChange={(sites) => {\n                                    this.props.setBannedSites(sites);\n                                }}\n                        />\n                        <hr/>\n                        <h3>Login methods</h3>\n                        <Select isMulti options={this.props.loginMethods}\n                                defaultValue={this.props.policy.loginMethods}\n                                onChange={(loginMethods) => {\n                                    this.props.setLoginMethods(loginMethods);\n                                }}\n                        />\n                        <hr/>\n                    </div>\n                    <div>\n                        <Link className=\"btn btn-md btn-outline-primary\" to=\"/userPolicies\">Cancel</Link>\n                        &nbsp;\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-md btn-primary\"\n                            onClick = {this.props.savePolicy}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        applications: state.applications.applications,\n        loginMethods: state.loginMethods.loginMethods,\n        sites: state.sites.sites\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getApplications: () => {\n            dispatch(getApplications())\n        },\n        getSites: () => {\n            dispatch(getSites())\n        },\n        getLoginMethods: () => {\n            dispatch(getLoginMethods())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Policy);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as userPolicyActions from \"../../actions/userPolicy\"\nimport Policy from \"../policy\";\n\nexport class UserPolicy extends Component {\n    state = {\n        policy: {\n            name: \"\",\n            bannedApps: [],\n            bannedSites: [],\n            loginMethods: []\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.userPolicyId){\n            this.getPolicy(this.props.match.params.userPolicyId);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policy !== prevProps.policy)\n            this.setState({\n                policy: this.props.policy\n            })\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getPolicy = (policyId) => {\n        this.props.getPolicy(policyId);\n    }\n\n    savePolicy = () => {\n        if (this.props.match.params.userPolicyId) {\n            this.props.updatePolicy(this.state.policy);\n        } else {\n            this.props.addPolicy(this.state.policy);\n        }\n    }\n\n    render() {\n\n        if (!this.state.policy && this.props.match.params.userPolicyId) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\n                </div>\n            )\n        } else {\n            return (\n                <Policy policyType = \"User\" policy={this.state.policy}\n                            setPolicyName={(name) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        name: name\n                                    }\n                                }))\n                            }}\n                            setBannedApps={(apps) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        bannedApps: apps\n                                    }\n                                }))\n                            }}\n                            setBannedSites={(sites) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        bannedSites: sites\n                                    }\n                                }))\n                            }}\n                            setLoginMethods={(loginMethods) => {\n                                this.setState(prevState => ({\n                                    policy: {\n                                        ...prevState.policy,\n                                        loginMethods: loginMethods\n                                    }\n                                }))\n                            }}\n                            savePolicy={this.savePolicy}/>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policy: state.userPolicy.userPolicy,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPolicy: (policyId) => {\n            dispatch(userPolicyActions.getUserPolicy(policyId));\n        },\n        updatePolicy: (policy) => {\n            dispatch(userPolicyActions.updateUserPolicy(policy));\n        },\n        addPolicy: (policy) => {\n            dispatch(userPolicyActions.addUserPolicy(policy));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicy);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass app extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default app;\n","import React, {Component} from \"react\";\n\nexport class ConfigElementItem extends Component {\n    state = {\n        item: {\n            id: null,\n            label: null,\n            value: null\n        },\n        edit: false\n    }\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n    render() {\n        return (\n            <li className=\"list-group-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.label}\n                                onChange={this.changeLabel}\n                                placeholder=\"Label\"\n                            />\n                        ) : (\n                            this.state.item.label\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                defaultValue={this.state.item.value}\n                                onChange={this.changeValue}\n                                placeholder=\"Value\"\n                            />\n                        ) : (\n                            this.state.item.value\n                        )}\n                    </div>\n                    <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                        {this.state.edit ? (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-success\"\n                                    onClick={() => {\n                                        this.props.updateItem(this.state.item);\n                                        this.setState({\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Update\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-outline-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            item: this.props.item,\n                                            edit: false\n                                        });\n                                    }}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        ) : (\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-primary\"\n                                    onClick={() => {\n                                        this.setState({\n                                            edit: true\n                                        });\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-md btn-danger\"\n                                    onClick={() => this.props.deleteItem(this.state.item.id)}\n                                >\n                                    Delete\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {ConfigElementItem} from './configElementItem/index';\n\nexport class ConfigElementList extends Component {\n    state = {\n        item: {\n            label: null,\n            value: null\n        }\n    }\n    changeLabel = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                label: value\n            }\n        }));\n    }\n    changeValue = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                value: value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.props.configElements) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    {this.props.name}\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeLabel}\n                                        placeholder=\"Label\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={this.changeValue}\n                                        placeholder=\"Value\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-xl-4 col-lg-4 col-sm-4 col-4\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.props.addItem(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.props.configElements.map((configElement, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <ConfigElementItem\n                                                        item={configElement}\n                                                        updateItem={this.props.updateItem}\n                                                        deleteItem={this.props.deleteItem}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as applicationsActions from \"../../../actions/applications\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class AppList extends Component {\n    state = {\n        applications: null,\n    }\n\n    componentDidMount() {\n        this.getApplications();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.applications !== prevProps.applications) {\n            this.setState({\n                applications: this.props.applications\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getApplications = () => {\n        this.props.getApplications();\n    }\n\n    addApplication = (application) => {\n        this.props.addApplication(application);\n    }\n\n    updateApplication = (application) => {\n        this.props.updateApplication(application);\n    }\n\n    deleteApplication = (applicationId) => {\n        this.props.deleteApplication(applicationId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Applications\"}\n                configElements={this.state.applications}\n                addItem={this.addApplication}\n                updateItem={this.updateApplication}\n                deleteItem={this.deleteApplication}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        applications: state.applications.applications,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getApplications: () => {\n            dispatch(applicationsActions.getApplications());\n        },\n        addApplication: (application) => {\n            dispatch(applicationsActions.addApplication(application));\n        },\n        updateApplication: (application) => {\n            dispatch(applicationsActions.updateApplication(application));\n        },\n        deleteApplication: (applicationId) => {\n            dispatch(applicationsActions.deleteApplication(applicationId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppList);\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as sitesActions from \"../../../actions/sites\"\nimport {ConfigElementList} from \"../configElementList\";\n\nexport class SiteList extends Component {\n    state = {\n        sites: null,\n    }\n\n    componentDidMount() {\n        this.getSites();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.sites !== prevProps.sites) {\n            this.setState({\n                sites: this.props.sites\n            })\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    getSites = () => {\n        this.props.getSites();\n    }\n\n    addSite = (site) => {\n        this.props.addSite(site);\n    }\n\n    updateSite = (site) => {\n        this.props.updateSite(site);\n    }\n\n    deleteSite = (siteId) => {\n        this.props.deleteSite(siteId);\n    }\n\n    render() {\n        return(\n            <ConfigElementList\n                name={\"Sites\"}\n                configElements={this.state.sites}\n                addItem={this.addSite}\n                updateItem={this.updateSite}\n                deleteItem={this.deleteSite}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sites: state.sites.sites,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getSites: () => {\n            dispatch(sitesActions.getSites());\n        },\n        addSite: (site) => {\n            dispatch(sitesActions.addSite(site));\n        },\n        updateSite: (site) => {\n            dispatch(sitesActions.updateSite(site));\n        },\n        deleteSite: (siteId) => {\n            dispatch(sitesActions.deleteSite(siteId));\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SiteList);\n","import axios from 'axios';\nimport * as api from \"../constants/apiEndpoints\";\nimport * as types from '../constants/actionsConstants';\n\nexport function addUser(user){\n    return (dispatch) => {\n        dispatch(addUserStart());\n        return axios.post(api.addUserUrl(), user)\n            .then(response => {\n                dispatch(addUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(addUserFail(error.message));\n            });\n    }\n}\n\nexport const addUserStart = () => ({\n    type: types.ADD_USER_START\n});\n\nexport const addUserSuccess = (response) => ({\n    type: types.ADD_USER_SUCCESS,\n    response\n});\n\nexport const addUserFail = (errorMsg) => ({\n    type: types.ADD_USER_FAIL,\n    errorMsg,\n});\n\nexport function updateUser(user){\n    return (dispatch) => {\n        dispatch(updateUserStart());\n        return axios.put(api.updateUserUrl(), user)\n            .then(response => {\n                dispatch(updateUserSuccess(response));\n            })\n            .catch((error) => {\n                alert(JSON.parse(error))\n                dispatch(updateUserFail(error.message));\n            });\n    }\n}\n\nexport const updateUserStart = () => ({\n    type: types.UPDATE_USER_START\n});\n\nexport const updateUserSuccess = (response) => ({\n    type: types.UPDATE_USER_SUCCESS,\n    response\n});\n\nexport const updateUserFail = (errorMsg) => ({\n    type: types.UPDATE_USER_FAIL,\n    errorMsg,\n});\n\n\nexport function deleteUser(userId){\n    return (dispatch) => {\n        dispatch(deleteUserStart());\n        return axios.delete(api.deleteUserUrl(userId))\n            .then(response => {\n                dispatch(deleteUserSuccess(response));\n            })\n            .catch((error) => {\n                console.log(error)\n                alert(JSON.parse(error))\n                dispatch(deleteUserFail(error.message));\n            });\n    }\n}\n\nexport const deleteUserStart = () => ({\n    type: types.DELETE_USER_START\n});\n\nexport const deleteUserSuccess = (response) => ({\n    type: types.DELETE_USER_SUCCESS,\n    response\n});\n\nexport const deleteUserFail = (errorMsg) => ({\n    type: types.DELETE_USER_FAIL,\n    errorMsg,\n});\n\nexport function getUsers(){\n    return (dispatch) => {\n        dispatch(getUsersStart());\n        return axios.get(api.getUsersUrl())\n            .then(response => {\n                dispatch(getUsersSuccess(response));\n            })\n            .catch((error) => {\n            console.log(error)\n                // alert(JSON.parse(error))\n                dispatch(getUsersFail(error.message));\n            });\n    }\n}\n\nexport const getUsersStart = () => ({\n    type: types.GET_USERS_START\n});\n\nexport const getUsersSuccess = (response) => ({\n    type: types.GET_USERS_SUCCESS,\n    response\n});\n\nexport const getUsersFail = (errorMsg) => ({\n    type: types.GET_USERS_FAIL,\n    errorMsg,\n});","import React, {Component} from \"react\";\nimport Select from 'react-select';\n\nexport class UserItem extends Component {\n    state = {\n        item: {\n            id: null,\n            login: null,\n            password: null,\n            userPolicyId: null,\n            computerId: null\n        },\n        edit: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: this.props.item\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n\n    render() {\n        if (!this.state.item.id || !this.props.policies) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.login}\n                                    onChange={this.changeLogin}\n                                    placeholder=\"Login\"\n                                />\n                            ) : (\n                                this.state.item.login\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    defaultValue={this.state.item.password}\n                                    onChange={this.changePassword}\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n                        ) : (\n                            <div></div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <Select options={this.props.policies}\n                                        defaultValue={this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0]}\n                                        onChange={(policy) => {\n                                            this.changePolicy(policy);\n                                        }}\n                                />\n                            ) : (\n                                this.props.policies.filter(policy => policy.value === this.state.item.userPolicyId)[0].label\n                            )}\n                        </div>\n                        {this.state.edit ? (\n                            <div></div>\n                        ) : (\n                            <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                {this.state.item.computerId}\n                            </div>\n                        )}\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.edit ? (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => {\n                                            this.props.updateItem(this.state.item);\n                                            this.setState({\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Update\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-outline-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                item: this.props.item,\n                                                edit: false\n                                            });\n                                        }}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            ) : (\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-primary\"\n                                        onClick={() => {\n                                            this.setState({\n                                                edit: true\n                                            });\n                                        }}\n                                    >\n                                        Edit\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-danger\"\n                                        onClick={() => this.props.deleteItem(this.state.item.id)}\n                                    >\n                                        Delete\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as usersActions from \"../../../actions/users\"\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserItem} from \"./userItem/index\";\nimport Select from \"react-select\";\n\nexport class UserList extends Component {\n    state = {\n        item: {\n            login: null,\n            password: null,\n            userPolicyId: null\n        },\n        users: null,\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n        this.getUsers();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.users !== prevProps.users) {\n            this.setState({\n                users: this.props.users\n            })\n        }\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n    changeLogin = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                login: value\n            }\n        }));\n    }\n    changePassword = (e) => {\n        var value = e.target.value;\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                password: value\n            }\n        }));\n    }\n    changePolicy = (policy) => {\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                userPolicyId: policy.value\n            }\n        }));\n    }\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    getUsers = () => {\n        this.props.getUsers();\n    }\n\n    addUser = (user) => {\n        this.props.addUser(user);\n    }\n\n    updateUser = (user) => {\n        this.props.updateUser(user);\n    }\n\n    deleteUser = (userId) => {\n        this.props.deleteUser(userId);\n    }\n\n    render() {\n        if (!this.state.users || !this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    Users\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.login}\n                                            onChange={this.changeLogin}\n                                            placeholder=\"Login\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            defaultValue={this.state.item.password}\n                                            onChange={this.changePassword}\n                                            placeholder=\"Password\"\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                        <Select options={this.state.policies}\n                                                defaultValue={this.state.policies[0]}\n                                                onChange={(policy) => {\n                                                    this.changePolicy(policy);\n                                                }}\n                                        />\n                                </div>\n                                <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-md btn-success\"\n                                        onClick={() => this.addUser(this.state.item)}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.users.map((user, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserItem\n                                                        item={user}\n                                                        policies={this.state.policies}\n                                                        updateItem={this.updateUser}\n                                                        deleteItem={this.deleteUser}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies,\n        users: state.users.users,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(usersActions.getUsers());\n        },\n        addUser: (user) => {\n            dispatch(usersActions.addUser(user));\n        },\n        updateUser: (user) => {\n            dispatch(usersActions.updateUser(user));\n        },\n        deleteUser: (userId) => {\n            dispatch(usersActions.deleteUser(userId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserList);\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyItem extends Component {\n    state = {\n        item: {\n            id: null,\n            name: null,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            item: {\n                id: this.props.item.value,\n                name: this.props.item.label\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.item !== prevProps.item) {\n            this.setState({\n                item: {\n                    id: this.props.item.value,\n                    name: this.props.item.label\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <li className=\"list-group-item\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            {this.state.item.name}\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                        </div>\n                        <div className=\"col-md-3 col-xl-3 col-lg-3 col-sm-3 col-3\">\n                            <Link className=\"btn btn-md btn-primary\" to={\"/userPolicy/\" + this.state.item.id}>Edit</Link>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-md btn-danger\"\n                                onClick={() => this.props.deleteItem(this.state.item.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport * as userPolicyActions from \"../../../actions/userPolicy\"\nimport {UserPolicyItem} from \"./userPolicyItem/index\";\nimport { Link } from \"react-router-dom\";\n\nexport class UserPolicyList extends Component {\n    state = {\n        policies: null,\n    }\n    componentDidMount() {\n        this.getPolicies();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.policies !== prevProps.policies) {\n            this.setState({\n                policies: this.props.policies\n            })\n        }\n    }\n\n    getPolicies = () => {\n        this.props.getPolicies();\n    }\n\n    deletePolicy = (policyId) => {\n        this.props.deletePolicy(policyId);\n    }\n\n    render() {\n        if (!this.state.policies) {\n            return (\n                <div className=\"container\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xl-12 col-lg-12 col-sm-12 col-12\">\n                                    <br/>\n                                    User Policies\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    <ul className=\"list-group\">\n                                        {this.state.policies.map((policy, i) => {\n                                            return (\n                                                <div key={i}>\n                                                    <UserPolicyItem\n                                                        item={policy}\n                                                        deleteItem={this.deletePolicy}/>\n                                                </div>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link className=\"float\" to=\"/userPolicy\">\n                        <i color=\"primary\" className=\"material-icons\">add</i>\n                    </Link>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        policies: state.userPolicy.userPolicies\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePolicy: (policyId) => {\n            dispatch(userPolicyActions.deleteUserPolicy(policyId));\n        },\n        getPolicies: () => {\n            dispatch(userPolicyActions.getUserPolicies());\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserPolicyList);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nimport AppNavbarHeader from '../components/appNavbarHeader';\nimport ComputerPolicy from '../components/computerPolicy';\nimport UserPolicy from '../components/userPolicy';\nimport app from '../App'\nimport AppList from \"../components/lists/appList\";\nimport SiteList from \"../components/lists/siteList\";\nimport UserList from \"../components/lists/userList/index\";\nimport UserPolicyList from \"../components/lists/userPolicyList\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbarHeader/>\n                <Route exact path=\"/\" component={app}/>\n                <Route path=\"/computerPolicy/:computerPolicyId?\" component={ComputerPolicy}/>\n                <Route path=\"/userPolicy/:userPolicyId?\" component={UserPolicy}/>\n                <Route path=\"/applications\" component={AppList}/>\n                <Route path=\"/sites\" component={SiteList}/>\n                <Route path=\"/users\" component={UserList}/>\n                <Route path=\"/userPolicies\" component={UserPolicyList}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\nimport store from './store'\nimport App from './containers/app';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}